Short Research Papers I

SIGIR’18, July 8-12, 2018, Ann Arbor, MI, USA

Event2Vec: Neural Embeddings for News Events
Vinay Setty

Katja Hose

University of Stavanger, Norway
Aalborg University, Denmark
vsetty@acm.org

Aalborg University, Denmark
khose@cs.aau.dk

ABSTRACT

Event: Ebola
virus epidemic

Representation of news events as latent feature vectors is essential
for several tasks, such as news recommendation, news event linking,
etc. However, representations proposed in the past fail to capture
the complex network structure of news events. In this paper we
propose Event2Vec, a novel way to learn latent feature vectors for
news events using a network. We use recently proposed network
embedding techniques, which are proven to be very effective for
various prediction tasks in networks. As events involve different
classes of nodes, such as named entities, temporal information,
etc, general purpose network embeddings are agnostic to event
semantics. To address this problem, we propose biased random
walks that are tailored to capture the neighborhoods of news events
in event networks. We then show that these learned embeddings are
effective for news event recommendation and news event linking
tasks using strong baselines, such as vanilla Node2Vec, and other
state-of-the-art graph-based event ranking techniques.

0.01

Event type:
Epidemic diseases

0.8

Entity:
Nigeria

Year:
2014

Event type:

Civil wars

1

1

Event:
Nigerian Civil War
0.5

1

0.75

Event:
Syrian Civil War
1

Year: 1970

0.5

1

0.6

Event:
Iraqi Civil War
0.25

Entity:
Syria

1

Entity:
Iraq

Figure 1: Sample event network

representations are not optimal for capturing the non-linear relationship between different elements of news events. To address this
problem, there are proposals to model news events in the form of
networks [8, 17]. An example of such an event network can be seen
in Figure 1, in which there are events, event types, entities, and
temporal information.
In principle, news events can also be treated as pure text and
word embeddings can be used to learn the latent features [10, 13].
In recent work, news events vectors are also represented as simple
aggregations of associated word vectors [3]. In recent years, deep
neural networks have been proposed for information retrieval and
text classification based on the principle of learning the relevance
between queries and documents [7]. Since news events are fundamentally a sequence of news articles, these models could also be
used for learning news event representations. However, the structure of text documents, where words are written sequentially in
a linear fashion, is fundamentally different. The above mentioned
techniques are not suitable for capturing the network structures
arising due to the cross-document relationship of several classes
of entities related to the news events. For example, as shown in
Figure 1, even though “Syrian Civil War” is not directly connected
to “Iraqi Civil War”, they are connected via entities Iraq and Syria.
Inspired by this, there are several proposals to learn embeddings
to capture the non-linear structures of the networks [5, 15]. These
approaches employ random walks to efficiently learn the feature
vectors.
The problem, we address in this paper is to automatically learn
network embeddings from networked representations of news
events. Existing network embedding solutions, however, are not
suitable for events since the nodes in event networks are of different
classes or types. To address this problem, we propose biased random
walks tailored for event networks. In this regard, we compute the

ACM Reference Format:
Vinay Setty and Katja Hose. 2018. Event2Vec: Neural Embeddings for News
Events. In SIGIR ’18: The 41st International ACM SIGIR Conference on Research
& Development in Information Retrieval, July 8–12, 2018, Ann Arbor, MI, USA.
ACM, New York, NY, USA, 4 pages. https://doi.org/10.1145/3209978.3210136

1

1

INTRODUCTION

Real-world news events, such as wars, natural calamities, elections,
etc., involve several actors, e.g., persons, organizations, countries,
and temporal and spatial aspects [1]. Representing news events as
latent feature vectors is essential for various tasks, such as computing similarity values between news events and linking news
events from one source to another. Consider for example, a journalist or a historian researching about past civil wars that resemble
“Syrian Civil War” or previous civil wars in Syria and other civil
wars around the same era (e.g, “Iraqi Civil War”). In such situations,
latent feature representation of news events readily helps in news
recommendation by identifying similar news events.
News events have been represented before either in vector form
or bag of words of textual, semantic, and temporal features derived
from news articles [2]. This involves manually engineering several
features and coming up with different ways to combine them [14].
Moreover, since news events span multiple news articles, these
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
SIGIR ’18, July 8–12, 2018, Ann Arbor, MI, USA
© 2018 Association for Computing Machinery.
ACM ISBN 978-1-4503-5657-2/18/07. . . $15.00
https://doi.org/10.1145/3209978.3210136

1013

Short Research Papers I

SIGIR’18, July 8-12, 2018, Ann Arbor, MI, USA

transition probabilities for the biased random walk while preserving the semantics of events. In summary, our main contributions
are:

Assuming conditional independence, the probability can be factorized as below:
Pr (N (v)|F (v)) =

• Event2Vec a novel way to learn latent features for news events
by extending biased random walks to respect event semantics
• Application of network embeddings for news events to news
recommendation and news linking tasks
• Evaluation with real data and ground truth from Wikipedia and
Google knowledge graph and several strong baselines
• Manual evaluation using CrowdFlower

2

(3)

We solve this objective function similar to Word2Vec [13] using the
softmax function parametrized by the dot product of feature vectors
of the source node and all the other nodes. Since computing this
dot product for each pair of nodes in the network is expensive, it is
approximated using random walks. For more details on Node2Vec
please refer to [5].

NETWORK EMBEDDING MODEL
2.3

Networked Representation of Events

wv e x =

|{∀d ∈ D|ve ∈ d ∧ x ∈ d }|
deд(ve )

Biased Random Walk for Events

In a generic network with no distinction between node types, the
random walks are typically uniform and they are truncated after
a predefined length [15]. In [5] the random walks are biased with
regard to Breadth First Search (BFS) or Depth First Search (DFS)
based on two hyper-parameters p and q. When transitioning from
node t to x, via node v, the transitioning score is computed based
on the distance of node x from node t represented as dt x .
1



p , if d t x = 0


αvx = 
(4)
1, if dt x = 1



 1 , if dt x = 2
q
Since we are dealing with event networks, ignoring the node types
during random walks could mislead the feature learning process.
For example, consider the example scenario in Figure 1, in which
transitioning from “Syrian Civil War” to “Iraqi Civil War” via an
event type node “Civil Wars” is preferred because learning features
from events of the same type is essential. On the other hand, transitioning via the node representing the temporal expression of the
year “2014” to “Ebola Virus Disease” is undesirable for learning
features for the event “Syrian Civil War”. Inspired by this intuition, in addition to combined BFS and DFS traversals in Node2Vec,
we also introduce an additional factor βvx to compute transition
probabilities between nodes v, x depending on the node types as
below:

News events are reported via news articles d from a news collection
D. Let G = (V , E) be a weighted undirected network. There are four
types of nodes in G: (1) event nodes Ve ⊂ V , (2) entity nodes Vn ⊂ V
representing named entities, (3) temporal expressions associated to
the news events are represented as Vt ⊂ V , and (4) an event type
or category Vc ⊂ V , such as war, armed conflict, disease outbreak,
etc. Each node v ∈ V is also characterized by a neighborhood
Nr (v) consisting of nodes obtained from a random walk of length r .
Unlike the immediate neighborhood of nodes N (v), Nr (v) provides
a more flexible neighborhood with richer context consisting of
nodes farther from v.
The edges in the network e ∈ E are defined between event nodes
ve ∈ Ve and other node types u ∈ V , i.e, there are no edges between
any pair of entities, temporal expressions, or event type nodes.
For example, given two news articles about “Syrian Civil War”, all
entities and temporal expressions are extracted from them and an
edge is added between them and the node representing the “Syrian
Civil War” (see Figure 1). The weights of the edges are assigned
based on some measure of association strength between them, such
as co-occurrence frequencies extracted from news articles d of a
news collection D. For example, weights are computed based on
how often news articles about “Syrian Civil War” mention “Syria”
and normalized by the node degree of the event node deд(ve ). The
weight of an edge (ve , x ), is defined as:

2.2

Pr (u |F (v))

u ∈N (v )

Typically news events are associated with a set of people, locations,
organizations, and a certain time period. Often these actors are
connected in a complex structure in the context of news events,
which is not captured by the models purely based on text. Following
this intuition, we model the relationships between events, entities,
event categories, and temporal expressions as a network, which is
then used to learn embeddings for news events.

2.1

Y


1,



 |N (v )∩N (x ) |
βvx = 
|N (v )∪N (x ) | ,



 |N (v )∩N (x )∩Vc | ,
 |N (v )∪N (x )∩Vc |

if v ∈ Ve ∧ x ∈ Vc
if v ∈ Ve ∧ (x ∈ Vt ∪ Vn )
if x ∈ Ve

where βvx = [0, 1]. Nodes representing event types are always
preferred with a maximum transition probability of 1. If the target
node represents a temporal expression or an entity, the transition
probability is proportional to the Jaccard similarity of the neighbors
of the source node and the target node. This is to ensure that the
random walks stay within the neighborhoods of the events with
overlapping temporal and entity values. In addition, if the target
node is an event, the transition probability is proportional to the
Jaccard similarity of only the nodes of event categories Vc . This is
to ensure that the neighborhood of a target event node x is visited
only if it is of the same category as the source event and they have a
significant number of overlapping neighbors. Finally, the transition
α ∗β ∗w
probability of an edge vx is computed using πvx = v x vZx v x ,
where Z is a normalization constant that needs to be estimated.

(1)

Objetive of Event2Vec

Event2Vec is based on the popular network embedding technqiue
Node2Vec [5]. Our goal here is to learn a feature vector F (v) for
each event node v ∈ V that can predict node v’s neighborhood
N (v). To achieve this, we use the objective based on the skip-gram
architecture:
X
max
log Pr (N (v)|F (v))
(2)

1014

Short Research Papers I

3

SIGIR’18, July 8-12, 2018, Ann Arbor, MI, USA

EXPERIMENTAL EVALUATION

the news articles related to news events (external news pages cited
in their corresponding Wikipedia pages) and edges between news
events are added via co-occurring entities, dates, etc. We then learn
the feature vectors F (ve ) trained for news event nodes ve using
the Event2Vec techniques described in Section 2 and query the
nearest neighbors for this vector using the cosine similarity metric.
Precision@k is measured by examining the top-k most similar news
events to a given query event. Since using cosine-similarity we can
retrieve all relevant events and achieve a recall of 1, we limit the
results to top-k and measure Recall@k. As we can see recall is
significantly better for Event2Vec.

In this section, we describe the dataset and the ground truth based
on which we evaluate and compare different approaches. We then
describe different baselines and evaluation scenarios as well as
measures that we consider for the news recommendation and news
linking tasks.

3.1

Data Collection

We collected all news events that appeared in Wikipedia Current
Events Portal1 (WCEP) (around 7000). For each of these events
we crawled the referenced news articles in Wikipedia and their
corresponding Wikipedia pages. Then, we annotated these sources
using a named entity recognizer and disambiguator (AIDA [6]).
For temporal expressions we use the publication year of the news
articles. The event types Vc are derived from Wikipedia categories
of the news events.
As ground truth for finding similar events for the news recommendation task, we issued the news events from WCEP as queries
in Google and crawled the “People also search for” suggestions by
Google, which is presumably retrieved from the Google Knowledge
graph. We obtained the ground truth for about 2000 news events
using this method. Note that even though these events provide a
reasonably good sample of related events, they are not extensive
enough to consider them as a gold standard. Therefore, we also conducted a manual evaluation for obtaining the precision values. For
the news linking task, we use news articles and the corresponding
Wikipedia event pages from WCEP as the ground truth.

3.2

Experimental Results and Discussion. Table 1 shows the precision
values of our approach and baseline approaches using the related
events crawled from Google as ground truth. As the results show,
the graph neighborhood ranking using LOAD graph [17] performs
the worst as the search is limited to the 2-hop neighborhood of the
nodes. As an anecdotal example, for the query “2016 Nice Attack”,
LOAD graph returns “2016 European Floods” as the most similar
event. This is because of the overwhelming misleading information
provided by the location “Paris” and the year 2016 associated with
this event. On the other hand, Event2Vec returns one of the correct
results “2016 Berlin attack” according to Google suggestion even
though the event is not in the immediate neighborhood thanks to
the biased random walks. Node2Vec for general graphs provides
“Charlie Hebdo Shooting” as the top event which is better than
LOAD graph’s result but still worse than Event2Vec as it does not
exploit the event semantics in the biased random walk.
Manual Evaluation. Since the news events retrieved by Event2Vec
may contain other similar events that are not covered in the Google
suggested events, we also conducted an evaluation study in the
Figure Eight (formerly known as CrowdFlower)2 platform for the
news recommendation task. We presented the evaluators with a
Wikipedia event page URL as a query and 10 candidate events retrieved by Event2Vec. Then we instructed them to consider the
following criterion for selecting the correct events: (1) Events are
of same category such as war, election, natural disaster, sporting
event etc., (2) Events should have some overlap either temporally or
geographically or both, (3) One event is a sub-event or related event
of another. For example, “Death of Osama bin Laden” is related
and sub-event of “2011 NATO attack in Pakistan”. We only consider the queries for which all three evaluators unanimously had
an agreement on. There were around 316 queries with unanimous
agreement and we obtained the P@10 of 0.784 for these queries
using Event2Vec approach. We note that the baselines could also be
assessed better using manual evaluations which we plan to pursue
in the future work.

Parameters for Event2Vec

We trained 200 dimension vectors for each node using 50 random
walks of length 100 each. We set the parameter values p and q for
the biased random walks to be 0.1 each to balance between BFS and
DFS bias. A lower value of p and q balances BFS and DFS bias. We
chose the parameters after doing an extensive grid search.

3.3

Baselines

We consider the graph-based representation of events proposed in
[17] as a baseline for both tasks. Given a news event as a query, we
retrieve all events within the 2-hop neighborhood in the graph. We
then rank the neighbors using the aggregated weights. Please refer
to [17] for details on constructing and ranking on LOAD graph.
In addition, we also include the Wikipedia category information
for the events as nodes, since events in the same category could
be potentially relevant. We also use the standard Node2Vec implementation without the event semantics from [5] as yet another
baseline. We omit the other network embedding techniques such
as DeepWalk [15], since we got a similar performance and they do
not allow tuning the breadth and depth during random walks.

3.5

News Linking Task

The goal of this task is to retrieve the K most similar events for a
given query event. “Similar event” in this context refers to events
of the same type, with overlap in one or more aspects of events
such as temporal information or entities. For this task we parse all

The goal of this task is to link a news article to the canonical
Wikipedia page of the news event (if any) [14, 16]. We use a similar
network described above but the network consists of an additional
node type i.e., news articles. Nodes representing the news articles
are connected to the event graph via the entities, locations, and
temporal expressions mentioned in the news article. This network

1 https://en.wikipedia.org/wiki/Portal:Current_events

2 https://www.figure-eight.com

3.4

News Event Recommendation Task

1015

Short Research Papers I

SIGIR’18, July 8-12, 2018, Ann Arbor, MI, USA

Table 1: Evaluation of similar news event ranking task with groundtruth from Google Knowledge Graph

Node2vec Event-Centric
Node2Vec [5]
LOAD Graph [17]

P@10

P@20

P@30

P@40

R@10

R@20

R@30

0.364
0.313
0.131

0.262
0.228
0.100

0.212
0.181
0.084

0.175
0.151
0.072

0.357
0.315
0.135

0.488
0.442
0.198

0.582
0.518
0.246

Table 2: Evaluation of news linking task

Event2Vec
Node2vec
LOAD Graph

P@1

P@10

P@20

MRR

0.643
0.425
0.112

0.845
0.628
0.303

0.899
0.712
0.397

0.487
0.364
0.212

5

0.638
0.570
0.280

CONCLUSIONS

In this paper, to the best of our knowledge, we present the first effort
in learning latent feature vectors for news events. To achieve this
goal, we employ network embedding techniques. After observing
that network embeddings can perform better if the random walks
are biased to respect news event semantics, we proposed a way
to compute transition probabilities tailored for news events. We
then showed that this approach outperforms the generic Node2Vec
approach and a graph neighborhood ranking method for similar
event retrieval and news event linking tasks.

with news articles is used to train the network embeddings using
the Event2Vec algorithm described above in Section 2.3. Then, for
a given news article node, we use the news article embedding to
retrieve the top-k closest news events and measure P@k. For the
baseline approach LOAD graph from [17], the same graph is used
but all the event nodes within a 2-hop neighborhood are used to
rank the relevant news events.

Acknowledgements This research was partially funded by the
Danish Council for Independent Research (DFF) under grant agreement no. DFF-4093-00301.

REFERENCES

Experimental Results and Discussion. We evaluate the news linking task by measuring the Precision and Mean Reciprocal Rank
(MRR). For Event2Vec and Node2Vec the embedding of the news
article is used to compute the probability of adding a link to the
corresponding event node. The results are shown in Table 2. We
again notice that our approach outperforms both baselines with
respect to precision as well as MRR.

4

R@40

[1] James Allan, editor. Topic Detection and Tracking: Event-based Information Organization. Kluwer Academic Publishers, Norwell, MA, USA, 2002.
[2] Thorsten Brants, Francine Chen, and Ayman Farahat. A system for new event
detection. In SIGIR. ACM, 2003.
[3] Supratim Das, Arunav Mishra, Klaus Berberich, and Vinay Setty. Estimating
event focus time using neural word embeddings. In CIKM, pages 2039–2042.
ACM, 2017.
[4] Patrick Ernst, Arunav Mishra, Avishek Anand, and Vinay Setty. Bionex: A system
for biomedical news event exploration. In SIGIR, pages 1277–1280, 2017.
[5] Aditya Grover and Jure Leskovec. Node2vec: Scalable feature learning for networks. In SIGKDD, pages 855–864, 2016.
[6] Johannes Hoffart, Mohamed Amir Yosef, Ilaria Bordino, Hagen Fürstenau, Manfred Pinkal, Marc Spaniol, Bilyana Taneva, Stefan Thater, and Gerhard Weikum.
Robust disambiguation of named entities in text. In EMNLP, pages 782–792, 2011.
[7] Po-Sen Huang, Xiaodong He, Jianfeng Gao, Li Deng, Alex Acero, and Larry Heck.
Learning deep structured semantic models for web search using clickthrough
data. In CIKM, pages 2333–2338. ACM, 2013.
[8] Adam Jatowt, Ching Man Au Yeung, and Katsumi Tanaka. Generic method
for detecting focus time of documents. Information Processing & Management,
51(6):851 – 868, 2015.
[9] Erdal Kuzey, Jilles Vreeken, and Gerhard Weikum. A fresh look on knowledge
bases: Distilling named events from news. In CIKM, pages 1689–1698. ACM,
2014.
[10] Quoc Le and Tomas Mikolov. Distributed representations of sentences and
documents. In ICML, pages 1188–1196, 2014.
[11] Yeha Lee and Jong-Hyeok Lee. Identifying top news stories based on their
popularity in the blogosphere. Information Retrieval, 17(4):326–350, 2014.
[12] Zhiwei Li, Bin Wang, Mingjing Li, and Wei-Ying Ma. A probabilistic model for
retrospective news event detection. In SIGIR, pages 106–113. ACM, 2005.
[13] Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Corrado, and Jeff Dean. Distributed representations of words and phrases and their compositionality. In
Advances in neural information processing systems, pages 3111–3119, 2013.
[14] Arunav Mishra and Klaus Berberich. Leveraging semantic annotations to link
wikipedia and news archives. In ECIR, pages 30–42. Springer, 2016.
[15] Bryan Perozzi, Rami Al-Rfou, and Steven Skiena. Deepwalk: Online learning of
social representations. In SIGKDD, pages 701–710. ACM, 2014.
[16] Vinay Setty, Abhijit Anand, Arunav Mishra, and Avishek Anand. Modeling event
importance for ranking daily news events. In WSDM, pages 231–240, 2017.
[17] Andreas Spitz and Michael Gertz. Terms over load: Leveraging named entities
for cross-document extraction and summarization of events. In SIGIR, pages
503–512. ACM, 2016.

RELATED WORK

News events have been represented in several forms before. Typically, they are represented as bag of words, tf-idf vectors [12], or
language models [11] derived from news articles mostly using text.
There are also efforts to cluster news articles discussing the same
event and link them to the canonical Wikipedia news event pages
[4, 9, 16]. News events have also been represented as probability
distributions in text as well as temporal and spatial dimensions
[14]. Recently, they are also represented in the form of graphs to
capture the non-linear relationship of various aspects of events
[8, 17]. These works either rely on manually crafted features, or
graph concepts such as dense subgraphs to represent news events.
News events have been expressed as an aggregated vector of words
in the event description with the goal of finding event foucs times
[3]. However, simply aggregating word vectors may looses a lot
of contextual information from related events which is captured
using the event networks used in Event2Vec. To the best of our
knowledge, we are the first to explore the possibility of learning latent feature vectors for representing news events using networked
representation of events.
Various network embedding techniques are proposed in the
literature [5, 15], but they are limited to networks consisting of
single node and edge types. As shown in Section 3, feature vectors
learned from such approaches are not optimal for representing
news events. In this paper, we therefore adapt these random walk
techniques to consider event semantics.

1016

