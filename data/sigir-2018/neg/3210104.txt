Short Research Papers II

SIGIR’18, July 8-12, 2018, Ann Arbor, MI, USA

Entire Space Multi-Task Model: An Effective Approach for
Estimating Post-Click Conversion Rate
Xiao Ma, Liqin Zhao, Guan Huang, Zhi Wang, Zelin Hu, Xiaoqiang Zhu, Kun Gai
Alibaba Inc.
{maxiao.mx,liqin.zlq,bingyi.wz,xiaoqiang.zxq,jingshi.gk}@alibaba-inc.com

ABSTRACT
Estimating post-click conversion rate (CVR) accurately is crucial
for ranking systems in industrial applications such as recommendation and advertising. Conventional CVR modeling applies popular
deep learning methods and achieves state-of-the-art performance.
However it encounters several task-specific problems in practice,
making CVR modeling challenging. For example, conventional CVR
models are trained with samples of clicked impressions while utilized to make inference on the entire space with samples of all
impressions. This causes a sample selection bias problem. Besides,
there exists an extreme data sparsity problem, making the model
fitting rather difficult. In this paper, we model CVR in a brand-new
perspective by making good use of sequential pattern of user actions, i.e., impression → click → conversion. The proposed Entire
Space Multi-task Model (ESMM) can eliminate the two problems
simultaneously by i) modeling CVR directly over the entire space,
ii) employing a feature representation transfer learning strategy.
Experiments on dataset gathered from traffic logs of Taobao’s recommender system demonstrate that ESMM significantly outperforms
competitive methods. We also release a sampling version of this
dataset to enable future research. To the best of our knowledge, this
is the first public dataset which contains samples with sequential
dependence of click and conversion labels for CVR modeling.

Figure 1: Illustration of sample selection bias problem in
conventional CVR modeling. Training space is composed of
samples with clicked impressions. It is only part of the inference space which is composed of all impressions.

1

INTRODUCTION

Conversion rate (CVR) prediction is an essential task for ranking
system in industrial applications, such as online advertising and
recommendation etc. For example, predicted CVR is used in OCPC
(optimized cost-per-click) advertising to adjust bid price per click
to achieve a win-win of both platform and advertisers [3]. It is also
an important factor in recommender systems to balance users’ click
preference and purchase preference.
In this paper, we focus on the task of post-click CVR estimation. To simplify the discussion, we take the CVR modeling in
recommender system in e-commerce site as an example. Given
recommended items, users might click interested ones and further
buy some of them. In other words, user actions follow a sequential
pattern of impression → click → conversion. In this way, CVR
modeling refers to the task of estimating the post-click conversion
rate, i.e., pCVR = p(conversion|click, impression).
In general, conventional CVR modeling methods employ similar techniques developed in click-through rate (CTR) prediction
task, for example, recently popular deep networks [1, 2]. However,
there exist several task-specific problems, making CVR modeling
challenging. Among them, we report two critical ones encountered
in our real practice: i) sample selection bias (SSB) problem [9]. As
illustrated in Fig.1, conventional CVR models are trained on dataset
composed of clicked impressions, while are utilized to make inference on the entire space with samples of all impressions. SSB
problem will hurt the generalization performance of trained models. ii) data sparsity (DS) problem. In practice, data gathered for
training CVR model is generally much less than CTR task. Sparsity
of training data makes CVR model fitting rather difficult.
There are several studies trying to tackle these challenges. In [4],
hierarchical estimators on different features are built and combined
with a logistic regression model to solve DS problem. However, it
relies on a priori knowledge to construct hierarchical structures,
which is difficult to be applied in recommender systems with tens
of millions of users and items. Oversampling method [8] copies

CCS CONCEPTS
• Information systems → Learning to rank;

KEYWORDS
post-click conversion rate, multi-task learning, sample selection
bias, data sparsity, entire-space modeling
ACM Reference Format:
Xiao Ma, Liqin Zhao, Guan Huang, Zhi Wang, Zelin Hu, Xiaoqiang Zhu,
Kun Gai. 2018. Entire Space Multi-Task Model: An Effective Approach for
Estimating Post-Click Conversion Rate. In SIGIR ’18: The 41st International
ACM SIGIR Conference on Research and Development in Information Retrieval,
July 8–12, 2018, Ann Arbor, MI, USA. ACM, New York, NY, USA, 4 pages.
https://doi.org/10.1145/3209978.3210104

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
SIGIR ’18, July 8–12, 2018, Ann Arbor, MI, USA
© 2018 Association for Computing Machinery.
ACM ISBN 978-1-4503-5657-2/18/07.
https://doi.org/10.1145/3209978.3210104

1137

Short Research Papers II

SIGIR’18, July 8-12, 2018, Ann Arbor, MI, USA

2.2

rare class examples which helps lighten sparsity of data but is
sensitive to sampling rates. All Missing As Negative (AMAN) applies random sampling strategy to select un-clicked impressions as
negative examples [5]. It can eliminate the SSB problem to some
degree by introducing unobserved examples, but results in a consistently underestimated prediction. Unbiased method [7] addresses
SSB problem in CTR modeling by fitting the truly underlying distribution from observations via rejection sampling. However, it
might encounter numerical instability when weighting samples by
division of rejection probability. In all, neither SSB nor DS problem
has been well addressed in the scenario of CVR modeling, and none
of above methods exploits the information of sequential actions.
In this paper, by making good use of sequential pattern of user
actions, we propose a novel approach named Entire Space Multitask Model (ESMM), which is able to eliminate the SSB and DS
problems simultaneously. In ESMM, two auxiliary tasks of predicting the post-view click-through rate (CTR) and post-view clickthrough&conversion rate (CTCVR) are introduced. Instead of training CVR model directly with samples of clicked impressions, ESMM
treats pCVR as an intermediate variable which multiplied by pCTR
equals to pCTCVR. Both pCTCVR and pCTR are estimated over the
entire space with samples of all impressions, thus the derived pCVR
is also applicable over the entire space. It indicates that SSB problem
is eliminated. Besides, parameters of feature representation of CVR
network is shared with CTR network. The latter one is trained
with much richer samples. This kind of parameter transfer learning
helps to alleviate the DS trouble remarkablely.
For this work, we collect traffic logs from Taobao’s recommender
system. The full dataset consists of 8.9 billions samples with sequential labels of click and conversion. Careful experiments are
conducted. ESMM consistently outperforms competitive models,
which demonstrate the effectiveness of the proposed approach. We
also release our dataset1 for future research in this area.

2 THE PROPOSED APPROACH
2.1 Notation

N ,
We assume the observed dataset to be S = {(x i , yi → zi )}|i=1
with sample (x, y → z) drawn from a distribution D with domain
X × Y × Z, where X is feature space, Y and Z are label spaces, and
N is the total number of impressions. x represents feature vector
of observed impression, which is usually a high dimensional sparse
vector with multi-fields, such as user field, item field etc. y and z
are binary labels with y = 1 or z = 1 indicating whether click or
conversion event occurs respectively. y → z reveals the sequential
dependence of click and conversion labels that there is always a
preceding click when conversion event occurs.
Post-click CVR modeling is to estimate the probability of pCVR =
p(z = 1|y = 1, x). Two associated probabilities are: post-view
click-through rate (CTR) with pCTR = p(z = 1|x) and post-view
click&conversion rate (CTCVR) with pCTCVR = p(y = 1, z = 1|x).
Given impression x, these probabilities follow Eq.(1):

p(y = 1, z = 1|x) = p(y = 1|x) × p(z = 1|y = 1, x) .
|
{z
} | {z } |
{z
}
pCT CV R

pCT R

CVR Modeling and Challenges

Recently deep learning based methods have been proposed for CVR
modeling, achieving state-of-the-art performance. Most of them
follow a similar Embedding&MLP network architecture, as introduced in [2]. The left part of Fig.2 illustrates this kind of architecture,
which we refer to as BASE model, for the sake of simplicity.
In brief, conventional CVR modeling methods directly estimate
the post-click conversion rate p(z = 1|y = 1, x). They train models
M .
with samples of clicked impressions, i.e., Sc = {(x j , z j )|y j = 1}|j=1
M is the number of clicks over all impressions. Obviously, Sc is a
subset of S. Note that in Sc , (clicked) impressions without conversion are treated as negative samples and impressions with conversion (also clicked) as positive samples. In practice, CVR modeling
encounters several task-specific problems, making it challenging.
Sample selection bias (SSB) [9]. In fact, conventional CVR modeling makes an approximation of p(z = 1|y = 1, x) ≈ q(z = 1|xc )
by introducing an auxiliary feature space Xc . Xc represents a
limited 2 space associated with Sc . ∀xc ∈ Xc there exists a pair
(x = xc , yx = 1) where x ∈ X and yx is the click label of x. In
this way, q(z = 1|xc ) is trained over space Xc with clicked samples
of Sc . At inference stage, the prediction of p(z = 1|y = 1, x) over
entire space X is calculated as q(z = 1|x) under the assumption
that for any pair of (x, yx = 1) where x ∈ X, x belongs to Xc .
This assumption would be violated with a large probability as Xc
is just a small part of entire space X. It is affected heavily by the
randomness of rarely occurred click event, whose probability varies
over regions in space X. Moreover, without enough observations
in practice, space Xc may be quite different from X. This would
bring the drift of distribution of training samples from truly underling distribution and hurt the generalization performance for CVR
modeling.
Data sparsity (DS). Conventional methods train CVR model
with clicked samples of Sc . The rare occurrence of click event causes
training data for CVR modeling to be extremely sparse. Intuitively,
it is generally 1-3 orders of magnitude less than the associated CTR
task, which is trained on dataset of S with all impressions. Table 1
shows the statistics of our experimental datasets, where number of
samples for CVR task is just 4% of that for CTR task.

2.3

Entire Space Multi-Task Model

The proposed ESMM is illustrated in Fig.2, which makes good use
of the sequential pattern of user actions. Borrowing the idea from
multi-task learning [6], ESMM introduces two auxiliary tasks of
CTR and CTCVR and eliminates the aforementioned problems for
CVR modeling simultaneously.
On the whole, ESMM simultaneously outputs pCTR, pCVR as
well as pCTCVR w.r.t. a given impression. It mainly consists of two
sub-networks: CVR network illustrated in the left part of Fig.2 and
CTR network in the right part. Both CVR and CTR networks adopt
the same structure as BASE model. CTCVR takes the product of
outputs from CVR and CTR network as the output. There are some
highlights in ESMM, which have notable effects on CVR modeling
and distinguish ESMM from conventional methods.

(1)

pCV R

Xc equals to X under the condition that ∀X ∈ X, p(y = 1|x ) > 0 and the
number of observed impressions is large enough. Otherwise, space Xc is part of X .
2 space

1 https://tianchi.aliyun.com/datalab/dataSet.html?dataId=408

1138

Short Research Papers II

SIGIR’18, July 8-12, 2018, Ann Arbor, MI, USA

pCTCVR

element-wise x

pCVR

Table 1: Statistics of experimental datasets.

Auxiliary Tasks

Main Task

pCTR

MultiLayer
Perception

Concatenate

Concatenate

Embedding
Layer

user field

Shared
Lookup
Table

item field

element-wise +

user field

CVR-task features

item field

CTR-task features

Figure 2: Architecture overview of ESMM for CVR modeling. In ESMM, two auxiliary tasks of CTR and CTCVR are
introduced which: i) help to model CVR over entire input
space, ii) provide feature representation transfer learning.
ESMM mainly consists of two sub-networks: CVR network
illustrated in the left part of this figure and CTR network in
the right part. Embedding parameters of CTR and CVR network are shared. CTCVR takes the product of outputs from
CTR and CVR network as the output.
Modeling over entire space. Eq.(1) gives us hints, which can be
transformed into Eq.(2).
p(z = 1|y = 1, x) =

p(y = 1, z = 1|x)
p(y = 1|x)

+

N
Õ
i=1
N
Õ

#item

#impression

#click

#conversion

0.4M
48M

4.3M
23.5M

84M
8950M

3.4M
324M

18k
1774k

3 EXPERIMENTS
3.1 Experimental Setup

(2)

Datasets. To evaluate the proposed approach, we collect traffic
logs from Taobao’s recommender system and release a 1% random
sampling version of the whole dataset, whose size still reaches
38GB (without compression). We refer to the released dataset as
Public Dataset and the whole one as Product Dataset. Table 1
summarizes the statistics of the two datasets. Detailed descriptions
can be found in the website of Public Dataset1 .
Competitors. We conduct experiments with several competitive methods on CVR modeling. (1) BASE is the baseline model
introduced in section 2.2. (2) AMAN [5] applies negative sampling
strategy and best results are reported with sampling rate searched
in {10%, 20%, 50%, 100%}. (3) OVERSAMPLING [8] copies positive
examples to reduce difficulty of training with sparse data, with sampling rate searched in {2, 3, 5, 10}. (4) UNBIAS follows [7] to fit
the truly underlying distribution from observations via rejection
sampling. pCTR is taken as the rejection probability. (5) DIVISION
estimates pCTR and pCTCVR with individually trained CTR and
CTCVR networks and calculates pCVR by Eq.(2). (6) ESMM-NS is
a lite version of ESMM without sharing of embedding parameters.
The first four methods are different variations to model CVR
directly based on state-of-the-art deep network. DIVISION, ESMMNS and ESMM share the same idea to model CVR over entire space
which involve three networks of CVR, CTR and CTCVR. ESMM-NS

Here p(y = 1, z = 1|x) and p(y = 1|x) are modeled on dataset
of S with all impressions. Eq.(2) tells us that with estimation of
pCTCVR and pCTR, pCVR can be derived over the entire input space
X, which addresses the sample selection bias problem directly. This
seems easy by estimating pCTR and pCTCVR with individually
trained models separately and obtaining pCVR by Eq.(2), which we
refer to as DIVISION for simplicity. However, pCTR is a small number practically, divided by which would arise numerical instability.
ESMM avoids this with the multiplication form. In ESMM, pCVR is
just an intermediate variable which is constrained by the equation
of Eq.(1). pCTR and pCTCVR are the main factors ESMM actually
estimated over entire space. The multiplication form enables the
three associated and co-trained estimators to exploit the sequential
patten of data and communicate information with each other during training. Besides, it ensures the value of estimated pCVR to be
in range of [0,1], which in DIVISION method might exceed 1.
The loss function of ESMM is defined as Eq.(3). It consists of two
loss terms from CTR and CTCVR tasks which are calculated over
samples of all impressions, without using the loss of CVR task.

L(θcvr , θct r ) =

#user

Public Dataset
Product Dataset

where θct r and θcvr are the parameters of CTR and CVR networks
and l(·) is cross-entropy loss function. Mathematically, Eq.(3) decomposes y → z into two parts3 : y and y&z, which in fact makes
use of the sequential dependence of click and conversion labels.
Feature representation transfer. As introduced in section 2.2,
embedding layer maps large scale sparse inputs into low dimensional representation vectors. It contributes most of the parameters
of deep network and learning of which needs huge volume of training samples. In ESMM, embedding dictionary of CVR network is
shared with that of CTR network. It follows a feature representation
transfer learning paradigm. Training samples with all impressions
for CTR task is relatively much richer than CVR task. This parameter sharing mechanism enables CVR network in ESMM to learn
from un-clicked impressions and provides great help for alleviating
the data sparsity trouble.
Note that the sub-network in ESMM can be substituted with
some recently developed models [1, 2], which might get better
performance. Due to limited space, we omit it and focus on tackling
challenges encountered in real practice for CVR modeling.

Field-wise
Pooling Layer
element-wise +

dataset

l (yi , f (x i ; θct r ))

3 Corresponding to labels of CTR and CTCVR tasks, which construct training datasets as

(3)

follows: i) samples are composed of all impressions, ii) for CTR task, clicked impressions
are labeled y = 1, otherwise y = 0, iii) for CTCVR task, impressions with click and
conversion events occurred simultaneously are labeled y&z = 1, otherwise y&z = 0

l (yi &zi , f (x i ; θct r ) × f (x i ; θcvr )) ,

i=1

1139

Short Research Papers II

SIGIR’18, July 8-12, 2018, Ann Arbor, MI, USA

Table 2: Comparison of different models on Public Dataset.
AUC(mean ± std) on CVR task

AUC(mean ± std) on CTCVR task

66.00 ± 0.37
65.21 ± 0.59
67.18 ± 0.32
66.65 ± 0.28
67.56 ± 0.48
68.25 ± 0.44
68.56 ± 0.37

62.07 ± 0.45
63.53 ± 0.57
63.05 ± 0.48
63.56 ± 0.70
63.62 ± 0.09
64.44 ± 0.62
65.32 ± 0.49

74

72
70

72
BASE
AMAN
OVERSAMPLING
UNBIAS
DIVISION
ESMM-NS
ESMM

70
68
66
1

40

66
64
62

100
1
Train Set Size(%)

20

40

100

sampling rates, as illustrated in Fig.3. First, all methods show improvement with the growth of volume of training samples. This
indicates the influence of data sparsity. In all cases except AMAN on
1% sampling CVR task, BASE model is defeated. Second, ESMM-NS
and ESMM outperform all competitors consistently w.r.t. different
sampling rates. In particular, ESMM maintains a large margin of
AUC promotion over all competitors on both CVR and CTCVR tasks.
BASE model is the latest version which serves the main traffic in
our real system. Trained with the whole dataset, ESMM achieves
absolute AUC gain of 2.18% on CVR task and 2.32% on CTCVR task
over BASE model. This is a significant improvement for industrial
applications where 0.1% AUC gain is remarkable.

4

CONCLUSIONS AND FUTURE WORK

In this paper, we propose a novel approach ESMM for CVR modeling task. ESMM makes good use of sequential patten of user actions.
With the help of two auxiliary tasks of CTR and CTCVR, ESMM elegantly tackles challenges of sample selection bias and data sparsity
for CVR modeling encountered in real practice. Experiments on
real dataset demonstrate the superior performance of the proposed
ESMM. This method can be easily generalized to user action prediction in scenario with sequential dependence. In the future, we intend
to design global optimization models in applications with multistage actions like request → impression → click → conversion.

Results on Public Dataset

Table 2 shows results of different models on public dataset. (1)
Among all the three variations of BASE model, only AMAN performs a little worse on CVR task, which may be due to the sensitive of random sampling. OVERSAMPLING and UNBIAS show
improvement over BASE model on both CVR and CTCVR tasks.
(2) Both DIVISION and ESMM-NS estimate pCVR over entire space
and achieve remarkable promotions over BASE model. Due to the
avoidance of numerical instability, ESMM-NS performs better than
DIVISION. (3) ESMM further improves ESMM-NS. By exploiting the
sequential patten of user actions and learning from un-clicked data
with transfer mechanism, ESMM provides an elegant solution for
CVR modeling to eliminate SSB and DS problems simultaneously
and beats all the competitors. Compared with BASE model, ESMM
achieves absolute AUC gain of 2.56% on CVR task, which indicates
its good generalization performance even for biased samples. On
CTCVR task with full samples, it brings 3.25% AUC gain. These
results validate the effectiveness of our modeling method.

3.3

20

BASE
AMAN
OVERSAMPLING
UNBIAS
DIVISION
ESMM-NS
ESMM

68

Figure 3: Comparison of different models w.r.t. different
sampling rates on Product Dataset.

and ESMM co-train the three networks and take the output from
CVR network for model comparison. To be fair, all competitors
including ESMM share the same network structure and hyper parameters with BASE model, which i) uses ReLU activation function,
ii) sets the dimension of embedding vector to be 18, iii) sets dimensions of each layers in MLP network to be 360 × 200 × 80 × 2, iv)
uses adam solver with parameter β 1 = 0.9, β 2 = 0.999, ϵ = 10−8 .
Metric. The comparisons are made on two different tasks: (1)
conventional CVR prediction task which estimates pCVR on dataset
with clicked impressions, (2) CTCVR prediction task which estimates pCTCVR on dataset with all impressions. Task (2) aims to
compare different CVR modeling methods over entire input space,
which reflects the model performance corresponding to SSB problem. In CTCVR task, all models calculate pCTCVR by pCTR × pCVR,
where: i) pCVR is estimated by each model respectively, ii) pCTR is
estimated with a same independently trained CTR network (same
structure and hyper parameters as BASE model). Both of the two
tasks split the first 1/2 data in the time sequence to be training set
while the rest to be test set. Area under the ROC curve (AUC) is
adopted as performance metrics. All experiments are repeated 10
times and averaged results are reported.

3.2

CTCVR Task
74

AUC

BASE
AMAN
OVERSAMPLING
UNBIAS
DIVISION
ESMM-NS
ESMM

AUC

Model

CVR Task
76

REFERENCES
[1] Heng-Tze Cheng and Levent Koc. 2016. Wide & deep learning for recommender
systems. In Proceedings of the 1st Workshop on Deep Learning for Recommender
Systems. ACM, 7–10.
[2] Zhou G., Song C., et al. 2017. Deep Interest Network for Click-Through Rate
Prediction. arXiv preprint arXiv:1706.06978 (2017).
[3] Zhu H., Jin J., et al. 2017. Optimized cost per click in taobao display advertising.
In Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge
Discovery and Data Mining. ACM, 2191–2200.
[4] Lee K., Orten B., et al. 2012. Estimating conversion rate in display advertising
from past erformance data. In Proceedings of the 18th ACM SIGKDD international
conference on Knowledge discovery and data mining. ACM.
[5] Rong Pan, Yunhong Zhou, Bin Cao, Nathan N Liu, Rajan Lukose, Martin Scholz,
and Qiang Yang. 2008. One-class collaborative filtering. In Data Mining, 2008.
ICDM’08. Eighth IEEE International Conference on. IEEE, 502–511.
[6] Sebastian Ruder. 2017. An overview of multi-task learning in deep neural networks.
arXiv preprint arXiv:1706.05098 (2017).
[7] Zhang W., Zhou T., et al. 2016. Bid-aware gradient descent for unbiased learning
with censored data in display advertising. In Proceedings of the 22nd International
Conference on Knowledge Discovery and Data Mining. ACM.
[8] Gary M Weiss. 2004. Mining with rarity: a unifying framework. ACM Sigkdd
Explorations Newsletter 6, 1 (2004), 7–19.
[9] Bianca Zadrozny. 2004. Learning and evaluating classifiers under sample selection
bias. In Proceedings of the 21th international conference on Machine learning. ACM.

Results on Product Dataset

We further evaluate ESMM on our product dataset with 8.9 billions
of samples, two orders of magnitude larger than public one. To
verify the impact of the volume of the training dataset, we conduct careful comparisons on this large scale datasets w.r.t. different

1140

