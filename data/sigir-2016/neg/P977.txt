Retweeting Behavior Prediction Based on One-Class
Collaborative Filtering in Social Networks
Bo Jiang† , Jiguang Liang† , Ying Sha† , Rui Li† , Wei Liu§ , Hongyuan Ma§ , Lihong Wang§
†

Institute of Information Engineering, Chinese Academy of Sciences, Beijing 100093, China

{jiangbo, liangjiguang, shaying, lirui}@iie.ac.cn
§

National Computer Network Emergency Response Technical Team/Coordination Center of China,
Beijing 100029, China

mahongyuan@foxmail.com, {liuwei, wlh}@isc.org.cn
ABSTRACT

platform for the spread of information among users. The
process of information diffusion consists of user’s retweeting
behavior which has been considered as a key mechanism of
information diffusion in Twitter [6]. However, unlike the traditional recommendation systems such as Netflix, Amazon,
large amounts of social information is implicit data which
can be generated by user’s behaviors such as following, like,
retweeting, etc. In this paper, we focus primarily on user’s
retweeting behavior in which we can only observe explicit
retweeting information. This is a typically implicit feedback
setting referred to as one-class collaborative filtering (OCCF) problems [5].
Considerable work has been conducted for studying the
prediction of user’s retweeting behavior. For example, some
research work considers the retweeting behavior prediction
as a classification problem [3, 8]. These methods predict
whether a message will be retweeted or not by using defined
features as evidence. Besides, there are also some models proposed to handle this problem in matrix factorization
setting [2, 7]. They treat the prediction as a matrix completion task by integrating different social factors simultaneously from few observed entries. A common property of all the
above mentioned models is that all the missing data (namely
non-retweeting) is treated as negative examples. The drawback is that this biases the retweeting results because some
of the missing data might be positive. On the other hand,
these methods ignore all the missing examples and utilize
the positive examples only and then feed it into prediction
algorithms that only model non-missing data cause all the
predictions on missing values are positive examples. Meanwhile, as the retweeting positive examples are very sparse,
the prediction performance is less than satisfactory.
In this paper, we propose a strategy of incorporating user personal preference and social influence information into a one-class collaborative filtering model to predict user’s
retweeting behavior. More specifically, we argue that user’s
retweeting behavior not only indicates user interest preference in a message, but also reflects social influence from the
publisher. Therefore, we quantitatively measure the user
personal preference and social influence, and then combine
them using a linearly ensemble. Finally, we assign the linearly combine score for each negative example into collaborative filtering baseline model for user’s retweeting behavior prediction. Experiments on a large-scale dataset from
a real-world social network show that the proposed method
can obtain better performance of retweeting prediction than
state-of-the-art methods.

Social behaviors such as retweetings, comments or likes are
valuable information for human activities analysis. We focus
here on user’s retweeting behavior which has been considered as a key mechanism of information diffusion in social
networks. Since we can only observe on which messages user
retweet. It is a typically one-class setting which only positive
examples or implicit feedback can be observed. However,
few research works on retweeting prediction consider oneclass setting. In this paper, we analyze and study the fundamental factors that might affect retweetability of a tweet,
and then employ one-class collaborative filtering method by
quantitatively measure the user personal preference and social influence between users and messages to predict user’s
retweeting behavior. Experimental results on a real-world
dataset from social network show that the proposed method
is effective and can improve the performance of retweeting
behavior prediction over baseline methods through leveraging weighted negative examples information.

CCS Concepts
•Information Systems → Data Mining; •Applied computing → Social and Behavioral Sciences;

Keywords
Retweeting Prediction; One-Class Collaborative Filtering;
User Preference; Social Influence; Weighted Negative

1.

INTRODUCTION

In recent years, social network platforms, such as Twitter
and Facebook, have been emerged as a popular platform for
users to publish their messages, share their opinions and engage in interesting activities. Social user can follow any other users and receive the messages published by the followed
users. As a consequence, social networks provide a powerful
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from Permissions@acm.org.

SIGIR ’16, July 17-21, 2016, Pisa, Italy
c 2016 ACM. ISBN 978-1-4503-4069-4/16/07. . . $15.00
DOI: http://dx.doi.org/10.1145/2911451.2914713

977

2.

OCCF RETWEETING PREDICITON

2.1

represented the transition probability of message from user
u to user v.

Problem Formulation

P (u, v) =

The one-class collaborative filtering problem can be formalized as follows. Suppose that we have M users with the
ith user denoted as ui , and N messages with the j th message
denoted as mj . The user’s retweeting behavior for the messages can be represented by an M ×N user-message retweeting matrix R = [r1 , · · · , rN ], in which each row corresponds
to a user and each column corresponds to a message. Here,
the (i, j)th entry with R ∈ RM ×N can be represented as

1
if ui retweeted mj
Rij =
(1)
0
otherwise

where n(u, v) is the interaction frequency from u to v, tm
represents the posting timestamp of message m, tf denotes
the timestamp of the first interaction from u to v.
The social influence from u to v is measured as
Sinf luence (u, v) = wP (u, v) + (1 − w)H(u, v)

Measuring User’s Retweeting Confidence

2.2.3

S(u, m) = η ×Sinterest (u, m)+(1−η)×Sinf luence (u, v) (6)
where η is employed to control the contribution of each factor and we set η = 0.5 in this paper.

2.3

(2)

where u andP
m denote a user and a message, respectively.
1
I(i) = |D(i)|
a∈D(i) Ta , D(i) is the set of messages posted
by user u, Ta is the vector representations for message a.

2.2.2

OCCF Retweeting Prediction Model

Now we will formulate the retweeting behavior prediction
problem mathematically. Let U ∈ RM ×K be the latent user feature matrix, and V ∈ RK×N be the latent message
feature matrix, where K (K ≪ M, N ) is the number of
the latent features. In the OCCF setting, there are several
general strategies to tackle the one-class problem. The first
strategy is to simply treat all missing values in R as negative
examples, which corresponds to the AMAN. However, this
strategy doesn’t fully consider the missing examples where
some of the missing data might be positive. A better method
proposed in [5] is to treat all missing values as negative by
using low weights on the loss function (wAMAN):
X
L(U, V ) =
Wij ((Rij − Ui Vj )2 + λ(kU k2F + kV k2F )) (7)

Much research has pointed out that personal interest in
a message is the primary reason for retweeting. Moreover,
user’s interests can be profiled in the content of user’s messages, and users who repost similar kinds of messages may
share common interests. Therefore, we can mine user’s interests directly from their personal messages and extract topics
from a specific message by topic model. Then we calculate
the similarity between user’s interest set and a specific message’s topic set by using the cosine similarity as follows:
I(u)I(m)
kI(u)k kI(m)k

Retweeting Probability Score

Based on the above descriptions, we define the score of
retweeting probability that user u retweets message m published by user v by using an linearly ensemble from user’s
preference and social influence as follows:

Quantifying Interest Similarity

Sinterest (u, m) =

(5)

where w is employed to control the contribution of each factor and we set w = 0.5 in this paper.

The most common method for information diffusion in
social network platforms is retweeting, which allows user
to repost others’ tweets in their own content stream. Although a number of features that might affect retweetability
of tweets, such as user profile, content freshness and temporal informaion, have been analyzed by [6], the user survey results recently have been indicated that user’s personal
preferences and social influence from target user are the two
most important factors when users consider whether or not
to retweet a given message [1, 4]. Therefore, we will quantify
two strength metrics: interest similarity between user and
message, and social influence between two users.

2.2.1

(3)

where |τu→v | represents the number of interactive messages
sent from u to v, |τv | represents the number of messages
posted by v, Sinterest (u, v) represents the interest similarity
between users u and v which can be computed by Eq. (2).
The user’s activity means interaction frequency between
two users. More precisely, the activity can be measured as
follows:
n(u, v)
H(u, v) =
(4)
tm − t f

Note that Rij = 1 represents user ui favorited message mj
and Rij = 0 means user ui not seen or not liked message
mj . Our goal is to predict the missing retweeting examples
based on partially observed entities in R. Therefore we will
hide for evaluation a certain proportion of ’1’ values per user
and measure how well we predict them.

2.2

|τu→v |
× Sinterest (u, v)
|τv |

ij

where k·kF denotes the Frobenius norm fitting constraint,
λ is the regularization parameter. W ∈ RM ×N is a nonnegative weighted matrix in which Wij reflects the contribution of minimizing the term to the objective L(U, V ). The
last two regularization terms are added to avoid overfitting.
In wAMAN, they treat all missing examples as negative
examples by using a global weighting scheme. This assumption cannot be precisely represented the relationship between user and message. In many realistic scenarios, whether
a user retweets a message in social networks is determined
by the two most important factors: (1) how does the user
interest on the message content; and (2) who are the publishers. Therefore, we compute the user-message retweeting

Quantifying Social Influence

Since social influence is meant to come from both two users of interactive activities, a metric which can quantitatively
measure the influence strength is crucial to deeply understand user’s social actions. Related work has proved the
existence of social influence locality for user’s retweeting behavior [8]. Specifically, we argue that social influence can be
reflected from spreading capacity and activity among users.
Hence, we propose a new method that can make more accurate measurement the strength of social influence between
two users. More precisely, the spreading capacity can be

978

probability matrix S ∈ RM ×N by Eq. (6) as following:
Sij = S(ui , mj )

Algorithm 1 OCCF for Retweeting Prediction.
Require:
retweeting matrix Rij , weight matrix S;
′
Ensure:
predicted retweeting matrix: Rij ;
1: Initialize V
2: Initialize S, ∀1 ≤ i ≤ M, 1 ≤ j ≤ N
3: if Rij = 0 then
4:
Sij = S(ui , mj )
5: else
6:
Sij = 1
7: end if
8: repeat
P
9:
Ui := Ri S̃i V (V T S̃i V + λ( j Sij )I)−1 , ∀1 ≤ i ≤ M
P
10:
Vj := RjT S˜j U (U T S˜j U + λ( i Sij )I)−1 , ∀1 ≤ j ≤ N
11: until R(t) ← L(U (t) , V (t) ) reaches to convergence
′
12: return Rij = Ui Vj

(8)

where, similar to wAMAN, we only assign the weights to the
negative examples, and remaining the weights for positive
examples to be 1. Then given the user-message retweeting
probability matrix S, the previous optimization problem can
be rewritten as follows:
X
L(U, V ) =
Sij ((Rij − Ui Vj )2 + λ(kU k2F + kV k2F )) (9)
ij

We represent the proposed method as OCCFRP. We can
adopt a weighted alternating least squares scheme to solve
the problem. That is, starting from some random initialization on U (or V ), we solve each of them alternatively with
the another matrix fixed and proceed step by step until convergence. More specifically, holding V fixed, the update of
U amounts to the following optimization problem by taking
derivatives of L(U, V ) with respect to each entry of U ,

from Sina Weibo which allows users to follow other users and receive the messages from the followed users similar
to Twitter. Specifically, in this paper, we randomly sample
10,000 messages retweeted by 690,787 users from the above
dataset. The total number of retweetings are 1,435,720. To
validate the proposed method, we randomly sample 80% of
the retweetings from user-message retweeting matrix as the
training data to predict the remaining 20% of retweetings.
The corresponding entries in R of positive instances for testing data are set to 0. Calculated with number of users, number of messages and number of retweetings, the density of
conducted dataset is 0.02%. The sparsity problem is very
serious in the retweeting matrix.

X
X
1 ∂L(U, V )
=
Sij (Ui Vj − Rij )Vjk + λ(
Sij )Uik (10)
2 ∂Uik
j
j
for ∀1 ≤ i ≤ M, 1 ≤ k ≤ K. Then we have
∂L(U, V )
1 ∂L(U, V )
1 ∂L(U, V )
= (
, ...,
)
2 ∂Ui
2
∂Ui1
∂UiK
X
= Ui (V T S̃i V + λ(
Sij )I) − Ri S̃i V

(11)

j

N ×N

where S̃i ∈ R
is a diagonal matrix with the elements
of ith row in Si on the diagonal, and I is a K × K identity
matrix.
)
Fixing V and solving ∂L(U,V
= 0, we have
∂Ui
X
Ui = Ri S̃i V (V T S̃i V + λ(
Sij )I)−1 , ∀1 ≤ i ≤ M (12)

3.2

• Naive Bayes: The retweeting prediction can be considered as a binary classification task, where each message is labelled either positive or negative instance to
represent whether it will be retweeted or not.

j

Similarly, The update of V with fixed U by taking derivative of L(U, V ) with respect to each entry of V , we have
X
Vj = RjT S˜j U (U T S˜j U + λ(
Sij )I)−1 , ∀1 ≤ j ≤ N (13)

• LRC-BQ: The method proposes a notion of social influence locality based on pairwise influence and structural diversity, and then uses a logistic regression classifier to predict user’s retweeting behavior [8].

i

where S˜j ∈ RM ×M is a diagonal matrix with the elements
of j th column in Sj on the diagonal. Thus, we apply the
following iterative algorithm on our retweeting prediction
model in Algorithm 1.
Complexity Analysis Assume that the number of iterations is T . The complexity of one-class collaborative filtering
model for retweeting behavior prediction is analyzed as follows. For the runtime performance, since in each iteration it
takes time O(K 2 M N ) to update the U (or V ), the computational complexity of running Algorithm 1 is O(T K 2 M N ).

3.

• MNMFRP: This method utilizes nonnegative matrix
factorization to predict retweeting behavior from user
and content dimensions by using strength of social relationship to constrain objective function [7].
• CRPM & IRPM: The two methods use the clustering relationships of messages to predict retweeting
behavior based on matrix factorization [2].
• AMAN: The method treats all missing as negative example. We can directly apply traditional collaborative
filtering algorithm to solve the problem.

EXPERIMENTS

• wAMAN: The method considers all missing data as
negative examples by assigning a uniform weighting
scheme [5].

In this section, we conduct several experiments to compare
the prediction performance of our OCCFRP approach with
other state-of-the-art retweeting prediction methods.

3.1

Baselines and Evaluation Metrics

We implement the following baselines for comparison with
our proposed model.

To quantitatively evaluate the performance of the proposed model, we employ four metrics to evaluate the performance of retweeting prediction in terms of Precision (Prec.),
Recall (Rec.), F1 -score (F1 ), and Accuracy (Acc.).

Dataset and Experimental Settings

We evaluate our proposed method on a large-scale publicly
available dataset released by [8]. The dataset was crawled

979

0.7

0.9

0.9

0.85

0.85

F1−score

0.8

F1−score

F1−score

0.9

0.8

0.75

0.6
1e−10 1e−8

1e−6

1e−4

1e−2

1e−0

λ

(a) F1 -score v.s. λ

0.7
0

0.8

0.75

20

40

60

80

0.7
0

Latent Feature Number

(b) F1 -score v.s. #Feature

20

40

60

80

Iteration Number

(c) F1 -score v.s. #Iteration

Figure 1: F1 -score vs. (a) λ and (b) Latent Feature Number and (c) Iteration Number on Weibo Dataset

3.3

Table 1: Performance
Method
Prec.
Naive Bayes
0.562
LRC-BQ
0.698
MNMFRP
0.796
CRPM
0.814
IRPM
0.817
AMAN
0.524
wAMAN
0.785
OCCFRP
0.853

Parameter Settings

Parameter λ: The parameter λ plays the role of adjusting the strengths of different terms in the objective function.
Taking the scales of U and V into account, we scan orders
of magnitude and try a number of different parameters as
shown in Figure 1(a). The results show that the parameter
set λ = 10−4 produce the best performance. In our following
experiments, we just use this parameter setting.
Number of Latent Features: To find a K-dimensional
joint latent space for users and messages, we train U and
V using gradient descent method. Specifically, we conduct
extensive experiments with K from 2 to 80 on the dataset as
shown in Figure 1(b). From the figure, we can see conclude
that the proposed model can converge at around 30 features.
Hence, we use K = 30 as the latent space dimension.
Number of Iterations: We preset the number of updating iterations to get a good performance while avoid overfitting. Figure 1(c) shows the impacts of the number of iterations on F1 -score. Considering the trade-off between the
computational efficiency and the accuracy of prediction, we
conduct 30 iterations for the solution in our experiments.

3.4

5.

ACKNOWLEDGMENTS

This work is supported by National Key Technology R&D
Program (No.2012BAH46B00), Strategic Leading Science
and Technology Projects of CAS (No.XDA06030200), Natural Science Foundation of China (No.61402123, No.61170230).

6.

REFERENCES

[1] N. A. Abdullah, D. Nishioka, Y. Tanaka, and
Y. Murayama. User’s action and decision making of
retweet messages towards reducing misinformation
spread during disaster. Journal of Information
Processing, 23(1):31–40, 2015.
[2] B. Jiang, J. Liang, Y. Sha, and L. Wang. Message
clustering based matrix factorization model for
retweeting behavior prediction. In CIKM, pages
1843–1846. ACM, 2015.
[3] Z. Luo, M. Osborne, J. Tang, and T. Wang. Who will
retweet me?: finding retweeters in twitter. In SIGIR,
pages 869–872. ACM, 2013.
[4] P. Metaxas, E. Mustafaraj, K. Wong, L. Zeng,
M. O’Keefe, and S. Finn. What do retweets indicate?
results from user survey and meta-review of research.
In ICWSM, pages 658–661. AAAI Press, 2015.
[5] R. Pan, Y. Zhou, B. Cao, N. N. Liu, R. Lukose,
M. Scholz, and Q. Yang. One-class collaborative
filtering. In ICDM, pages 502–511. IEEE, 2008.
[6] B. Suh, L. Hong, P. Pirolli, and E. H. Chi. Want to be
retweeted? large scale analytics on factors impacting
retweet in twitter network. In Socialcom, pages
177–184. IEEE, 2010.
[7] M. Wang, W. Zuo, and Y. Wang. A multidimensional
nonnegative matrix factorization model for retweeting
behavior prediction. Mathematical Problems in
Engineering, 2015:1–10, 2015.
[8] J. Zhang, J. Tang, J. Li, Y. Liu, and C. Xing. Who
influenced you? predicting retweet via social influence
locality. ACM TKDD, 9(3):25, 2015.

Prediction Performance

Our goal is to find who will be retweeted based on partially observed retweeting instances. Therefore, we will demonstrate the prediction performance of the proposed method,
and compare it with other methods. Specifically, we set the
optimal parameters when running the baselines. Then all
experiments are performed 5 runs. We list the average results of each method in Table 1. From these results, we can
see the following conclusions: (1) The proposed OCCFRP
model significantly outperforms the baseline methods in our
experimental results; (2) The OCCFRP can obtain better
performance than CRPM & IRPM using message clustering
information, which demonstrates that social influence can
impact the performance of the prediction; (3) The prediction performance of OCCFRP is better than AMAN and
wAMAN, which reveals that the weight for each negative
example is effectiveness of factor for retweeting prediction.

4.

of retweeting prediction.
Rec.
F1
Acc.
0.555
0.558
0.555
0.770
0.733
0.719
0.791
0.793
N/A
0.833
0.823
0.821
0.833
0.825
0.823
0.546
0.535
0.546
0.692
0.736
0.692
0.842
0.847
0.845

CONCLUSIONS

In this paper we cast the problem of retweeting prediction
as the one-class collaborative filtering task. We propose a
new weighting strategy which measure retweeting probability score between user and message to improve the OCCF
performance. Empirical study on real world dataset demonstrates that our proposed approach can achieve better performance than state-of-the-art methods.

980

