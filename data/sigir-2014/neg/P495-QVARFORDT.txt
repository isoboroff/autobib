SearchPanel: Framing Complex Search Needs
Pernilla Qvarfordt1, Simon Tretter2, Gene Golovchinsky1, Tony Dunnigan1
1

2

FX Palo Alto Laboratory, Inc.
3174 Porter Drive
Palo Alto, CA

University of Amsterdam
Amsterdam
The Netherlands

{pernilla, tonyd}@fxpal.com

s.tretter@gmail.com
Thus, we decided to explore ways in which searchers’ interactions
with search engines could be enhanced to support these more
complex information-seeking tasks.

ABSTRACT
People often use more than one query when searching for
information. They revisit search results to re-find information and
build an understanding of their search need through iterative
explorations of query formulation. These tasks are not wellsupported by search interfaces and web browsers. We designed
and built SearchPanel, a Chrome browser extension that supports
people in their ongoing information seeking. This extension
combines document and process metadata into an interactive
representation of the retrieved documents that can be used for
sense-making, navigation, and re-finding documents. In a realworld deployment spanning over two months, results show that
SearchPanel appears to have been primarily used for complex
information needs, in search sessions with long durations and high
numbers of queries. When process metadata was present in the UI,
searchers in explorative search sessions submitted more and
longer queries and interacted more with the SERP. These results
indicate that the process metadata features in SearchPanel seem to
be of particular importance for exploratory search.

We created a web browser extension, SearchPanel, which enriches
common web search engine interfaces and addresses important
deficits with respect to open-ended exploratory search and refinding. Our extension visualizes search results and metadata to
help users find the right document or documents.
Following Golovchinsky et al. [18], we distinguish document
metadata from process metadata. Document metadata (titles,
dates of publication, hosting websites, etc.) are basic
characteristics of documents that are independent of the means by
which these documents were retrieved. Process metadata, on the
other hand, characterize aspects of documents in relation to the
searcher’s activity: how many times a document was retrieved,
whether it was viewed before, etc. Today, browsers display only
one type of process metadata by changing the color of links that
have been visited by the user. We believe that process metadata
can play an important role during searchers’ information seeking
process, in that it can help searchers to remember, understand, and
plan their search processes to a larger extent than is done today.

Categories and Subject Descriptors
H.5.m. Information interfaces and presentation (e.g., HCI):
Miscellaneous.

The SearchPanel browser plugin enhances searchers’ ability to use
process metadata to understand their search results and plan
subsequent activities by displaying surrogates for the current set
of retrieved documents. It presents the process metadata in an
integrated overview appearing to the side of the browser window
and includes prior retrieval state, whether a document had been
opened, and whether it was bookmarked. SearchPanel also makes
it possible to examine multiple documents without returning to the
search results. In a two month real-world deployment, we studied
the effects of supplying the users with visualizations of process
metadata on re-finding and exploratory search activities.

Keywords
Search User Interfaces; Exploratory Search; Search Results
Visualization; Log Analysis

1. INTRODUCTION
Although knowledge of users’ different search needs when
performing web searches has expanded over the years, relatively
little support is available for more complex informational search,
such as exploratory search [7], [22] or re-finding search tasks [30].
Search engines such as Google, Yahoo! Search, or Bing offer
simple and efficient interfaces for navigational and transactional
searches, as defined by Broder [10]. But complex informational
search is not unimportant: Teevan et al. [30] reported that 39% of
queries are re-finding queries. Furthermore, 20-30% of searches
address open-ended exploratory informational needs [27].
Qvarfordt et al. [25] found query overlap rates of 50-60% in
exploratory search, and suggested that awareness of this overlap
may be useful in supporting more efficient searching behavior.

2. RELATED WORK
Complex informational needs are not easily expressed in single
queries. Instead, exploratory search and re-finding searches
involve multiple queries with many retrieved documents
potentially spanning multiple search sessions [7], [30]. To manage
the information load that complex search tasks generate, searchers
tend to make heavy use of bookmarking, re-searching to locate
previously seen content, and printing, emailing and saving pages
[4], [16]. A number of features exist within experimental search
systems to support complex search tasks, although studies have
shown that these features are rarely found in the wild [11].

Permission to make digital or hard copies of all or part of this work for personal
or classroom use is granted without fee provided that copies are not made or
distributed for profit or commercial advantage and that copies bear this notice
and the full citation on the first page. Copyrights for components of this work
owned by others than ACM must be honored. Abstracting with credit is
permitted. To copy otherwise, or republish, to post on servers or to redistribute
to lists, requires prior specific permission and/or a fee. Request permissions from
permissions@acm.org.
SIGIR’14, July 6–11, 2014, Gold Coast, Queensland, Australia.
Copyright © 2014 ACM 978-1-4503-2257-7/14/07…$15.00.
http://dx.doi.org/10.1145/2600428.2609620

Early experimental systems such as Ariadne [31] made it possible
to review a search session after the fact to get a retrospective
sense of the distribution of activities between top-level menu
selections, search commands, and the examination of specific
search results. This was accomplished through captured
screenshots that facilitated review, but without the ability to

495

experience of web search. The SearchPreview extension [21] for
both Chrome and Firefox fetches screen shots of the result pages
and shows them next to each search result. This extension is
similar to page previews explored by Dziadosz and
Charandrasekar [14]. BetterSearch [1] is a Firefox extension that
performs a similar task, but also enriches the results page with
more features and links, such as allowing users to open a search
result in a new tab.

interact with the earlier states of the system. C-TORI [20] made it
possible to keep track of and share queries in a search session, but
did not allow sense-making of the retrieved documents.
Ahn et al. [3] integrated cues from group use of documents into
the display of search results, showing that aggregations of prior
document use could be useful. This system relied on aggregating
long-term user behavior; this is quite different from aggregating
results over successive queries in the same session, independent of
any document’s retrieval outside the given search task.

3. SearchPanel: A BROWSER EXTENSION

SearchPad [6] and SearchBar [24] keep track of users’ queries,
URLs visited, and documents saved, but do not help assess or
manage the overlap in results among the various queries run
during a session. Session Highlights is an example of a
bookmarking tool that saved URLs [17] to a repository to help revisitation, but it did not provide any specific awareness of the
structure of search activity. Yahoo! search pad [13] automatically
detects when queries are related and summarizes search results
based on user behavior.

We created a browser extension, SearchPanel, to compensate for
deficiencies in traditional search result pages (SERPs) with regard
to re-finding and exploratory search activities (Figure 1).
SearchPanel combines document and process metadata in a visual
representation of search results that helps people manage their
information seeking over longer search sessions. When designing
SearchPanel, we aimed to create a light-weight method for
presenting both kinds of data to the user throughout the search
process, not only during query formulation. Rather than building a
dedicated system, we built a tool that can be used with any of the
major search engines (Bing, Google, and, Yahoo), and is inserted
into the search results page and any links the user follows from it.
This allows us to leverage high performance engines, while
providing needed support for complex search tasks. Users need
not switch to a new search engine because support is incorporated
into their regular search page.

Information overload due to large numbers of results is a common
problem in information seeking [5]. This problem has been
explored by providing various visualizations of search results.
MetaSpider [12] uses a 2D map to display and classify retrieved
documents. Grokker [19] uses nested circular and rectangular
shapes to present results and also shows them grouped in a
hierarchical way. Sparkler [26] uses a star plot for the result
presentation, where every star represents a document.
As more information and visualizations get added to a user
interface, it becomes more complex and risks introducing usability
problems. Complex interfaces allow powerful controls, but simple
interfaces allow a broader spectrum of users to use them. This
tradeoff is difficult to manage; standard Internet search interfaces
tend to be quite simple. For re-finding activities, Teevan [29]
explored rearrangements of the results list to make re-found
documents more prominent, rather than building a dedicated UI.
However, re-arranging the result list for one particular purpose
may decrease the efficiency for a different search activity.
Supporting the searcher’s decision making process can be crucial
for effective search performance for complex information needs.
This support can take the form of enhanced representations of
documents. Document metadata (author, date, images of the
document, etc.) is often used for this purpose. Even et al. [15] has
shown that the decision making process can be improved by
adding process metadata (in our case information related to the
search process) to the user interface. Other research has shown
that presenting simple tasks in a slightly different way may help
users understand how their search is performing and what can be
done to gain better results [32]. Qvarfordt et al. [25] implemented
a preview control that allowed searchers to estimate how many
new, previously retrieved, and previously visited documents a
new query will retrieve before submitting it. With the preview
control, users retrieved a more diverse result set. This result
illustrates how simple glance-able visualization can promote a
more efficient search process. Subtle changes in the user
interfaces can impact query formulation as well, as shown by
Agapie et al. [2].

Figure 1. SearchPanel with its parts: 1. search engine selector,
with current search engine highlighted; 2. favicon from site of
retrieved page; 3. bar color represents a page’s retrieval and
visited status; 4. current-selected page; 5. length of bars to
indicate number of visits; 6. bookmark indicator.
We chose the browser extension approach rather than creating a
proxy for several reasons. A browser extension has some
advantages for enabling parsing and for augmenting both SERPs
and document pages. It scales better with respect to storing user
history data, since storage is on the user’s machine. It ensures a
higher level of data privacy, since search data that could
potentially reveal user interests (query keywords, selected URLs,
etc.) can be logged as non-human-readable hashed values. Finally,
a browser extension has access to bookmarks and local browsing
history for creating process metadata.

Spoerri [28] showed that users benefit from different or additional
visualizations of web search results. However, none of the
techniques above have been integrated into the primary interface
of any major search engine. In some cases, extension developers
have used ideas from research literature to enhance the user

496

have developed dedicated tools for supporting note-taking and
bookmarking capabilities.

3.1 Role of Document and Process metadata
In complex search tasks with an evolving information need, search
user interfaces need to support users’ full range of activities. We
break the design space into three categories: search activity,
navigation activity, and organization activity. We consider the
different search and sense-making activities in light of the kinds of
information required to satisfy them. Table 1 summarizes possible
features supporting the three activities involved in a search
process, and if the feature provides document and process
metadata. Next, we discuss how these features can be manifested
in a search user interface.

Since the purpose of SearchPanel is to complement the SERP and
provide persistent metadata as the user digs into the search results
by following links, we wanted the design to convey critical
information in a minimalistic way. The design of SearchPanel
should not interfere with examining search results or reading
documents retrieved. Some features listed in Table 1 are too
complex for our current purpose, such as organization of
bookmarks. Others may appear insignificant, such as favicons.
However, simple graphics can serve as a memory support of
retrieved documents and assist navigation in a minimal UI.
Another consideration is that users may actively create process
metadata, by for instance annotating documents, or whether users’
actions are monitored to create process metadata. We choose a
monitoring, or implicit, approach to minimize users’ distractions
from their information seeking process.

Table 1. Activities and supporting features related to
document and process metadata.
Activity
Search

Navigation

Organization

Feature
perform search
switch search engine
results list
visit status
visualize # of visits
access results:
mark current result path
identify results: preview
snippet
identify results: favicon
Bookmarking
Organize bookmarks

Document
yes
no
yes
no
no

Process
no
yes
no
yes
yes

no
yes

yes
no

yes
no
no

no
yes
yes

3.2 Implementation
SearchPanel is designed to visualize process and document
metadata to allow the user a quick overview of the search results.
SearchPanel displays immediately after a search has been
performed on a supported web search engine (currently, Google,
Google Scholar, Yahoo, Bing, and Microsoft Academic Search). It
remains visible when a searcher follows links from retrieved
documents. If a searcher chooses to open a link in a new browser
window, SearchPanel will be copied with the same information
that is displayed on the SERP. SearchPanel also provides a
shortcut to return directly to the original SERP, or to re-run the
query on a different search engine.

Historically, web UI support for the search process is focused on
query formulation and understanding the current query. However,
web browsers offer limited support for comparing the current
result set with earlier search activity. During complex search
tasks, the searcher often needs to build an understanding of which
results were returned by previous queries so they can adjust future
queries to better align with their search need. Current user
interfaces represent this by changing link colors of explored
results. However, this process information is distributed over the
page, making it hard to get an easy overview for quick
comparison of search tasks.

SearchPanel is automatically displayed on the right side of the
browser window after a search (Figure 1). This side of the content
page was chosen because this location is often free from relevant
document content. In cases of overlap, SearchPanel’s vertical
position can be adjusted manually to accommodate page content
that may be occluded. The vertical orientation of SearchPanel was
chosen as a direct representation of how SERPs are organized.

3.2.1 Document metadata visualization

Process metadata can affect how searchers interact with a
retrieved result. One such representation is the number of visits
and the previous retrieval status for a particular search result. In a
re-finding search task, for example, searchers wish to ignore
newly-found documents or pages that were not opened and may
wish instead get a strong visual indication of which results are
frequently visited and thus probably more relevant to the
searchers’ current task. However, in an exploratory search task the
newly-found and not-yet-visited documents may be the searcher’s
primary focus.

SearchPanel displays several kinds of document metadata. Bars
representing each document are arranged in an order
corresponding to the search result list; clicking on a bar is
equivalent to clicking on a link on the SERP. Almost all websites
have icons (favicons) to help re-identify the web page quickly.
SearchPanel parses the retrieved documents to collect and display
the icons. These icons are shown to the right of the bar (Figure
1.2). A tooltip with the document title is displayed when the
mouse is over a bar. Other document metadata, such as such as
document MIME type, could be added. However, there is a need to
balance the information richness of the display with its ability to
provide a highly glance-able tool for assessing search progress.

When engaged with a web search task, users need to shift their
attention between a search results page and the actual documents
retrieved. In some cases, the desired information is not present in
a document retrieved by a query, but in a document linked to it. It
is not uncommon that users need to navigate through hyperlinks to
reach the desired information. This navigation activity can be an
important part of the information seeking process and may need
better support than the browser’s back button.

3.2.2 Process metadata visualization
Process metadata is also incorporated into SearchPanel. First,
icons representing available search engines can be found in the
top bar, where the search engine that was used for the search is
highlighted (Figure 1.1). Clicking an icon re-runs the query with
the selected search engine. The search engines are grouped into
two categories (web search and academic research); only the
relevant engines are shown depending on which type of search
engine that was first used after the browser, or browser tab, was

When searchers find useful web pages, they may save those
documents for future access. This functionality is most often
supported only by the browser’s bookmarking capability. Some
search systems such as Hunter Gatherer [23] and Querium [18]

497

bypassing the SERP. To fully support this shortcut, the relevant
SERP snippet is shown when the mouse hovers over a bar in
SearchPanel. This can be seen in Figure 3, where a preview of a
Wikipedia page snippet is shown. These features enable it easier
and more efficient to navigate the search results.

opened. If users click on the highlighted search engine, they will
be taken back to the SERP.
Each bar can have one of three colors, depending on retrieval and
visited status of the document (Figure 1.3). If a document has
never been retrieved before, its bar is teal. Bars for results
retrieved by a prior query, but not visited, are blue. Bars of visited
documents are violet. The colors were chosen to mimic the
commonly used link colors on web pages. The local browser
history is examined to retrieve the document status. This also
allows us to incorporate page views that occurred before
SearchPanel was installed.

3.3 Design Process
We took an iterative approach to designing SearchPanel. Figure 4
illustrates how SearchPanel evolved through our iterations until
we were satisfied with the UI’s balance of unobtrusiveness and
saliency. Some versions of SearchPanel were deployed in our
research lab to collect feedback during the design process. In the
first iteration, SearchPanel consisted only of colored bars in
varying lengths, intruding into the right side of the SERP.
However, this implementation was too hard for users to discover
and could not contain all the information that we wanted to
provide to searchers. In later iterations, a background was added
to increase the discoverability of SearchPanel.

Each bar’s length reflects the retrieval frequency of its
corresponding page. The more frequently a document has been
retrieved, the shorter the bar (Figure 1.5). The choice to make the
bars shorter was made to show less frequently retrieved results
more prominently than more frequently retrieved. The retrieval
history is stored locally in the browser for privacy reasons and can
be deleted through SearchPanel’s options.

Since the first iteration, the bars have remained the main feature
of SearchPanel. As the design evolved a simple “back to results”
button was added. This eventually became the current design’s
search engine selector (Figure 1.1). We based our current
bookmark indicator (Figure 1.6) on the standard bookmark icon in
the Chrome interface. To provide users with an indication of the
source of each result, we added favicons (two last iterations,
Figure 4). We chose favicons over text because they are quite
small and easy to recognize.

In SearchPanel, the bookmarking indicator (Figure 1.6) shows the
bookmark status of documents (unfilled or yellow star for
bookmarked document) and allows the user to bookmark a
document by clicking on its associated star. This allows quicker
re-finding of web pages, as users do not need to navigate to a
document to know if they have previously bookmarked it.

3.2.3 Navigational support
The selection indicator (Figure 1.4) indicates the current
document after navigating from the SERP. If a link in a result
document is clicked, the selection indicator will stay on the last
retrieved document to indicate where the navigation started.

Figure 2. Snippet highlighting on the SERP when the mouse is
over SearchPanel

Figure 3. When off the SERP, SearchPanel shows the SERP
snippet when the mouse is over a bar in SearchPanel
Hovering over a result bar highlights the bar and its corresponding
snippet in the SERP (Figure 2). The SERP is scrolled as the mouse
moves up and down the bars to bring the associated snippet into
view. Similarly, when the mouse is over a snippet, the related bar
jiggles left to right, reinforcing the connection between them.

Figure 4. Some of the design iterations of SearchPanel

4. STUDY
To study the effects of introducing process metadata to support refinding and exploratory search activities, SearchPanel was
deployed in two versions, called complex and simple, to separate
groups of users. Figure 5 shows the simple version, while the
complex version is shown in Figure 1. The complex version had
all the process metadata and navigation support features discussed

When the user navigates off the SERP to a found document,
SearchPanel remains active. If the user opens a found document in
a new browser window or tab, SearchPanel remains active as well.
Clicking on any bar navigates the user to its retrieved document,

498

In total, 4,582 valid queries were recorded: 2,593 queries from the
complex and 1,989 from the simple version. Note that a query is
valid when the user interacted with either the SERP or SearchPanel. Since it was not possible to distinguish between the search
page being reloaded and a query submitted from the logs, we
choose to not to include queries with no actions recorded. Moving
the mouse over a snippet in the SERP was considered an action.

in Section 3. Table 2 summarizes the features present in both the
complex and simple versions of SearchPanel. In the simple
version, most of the features related to process metadata were
removed, but visited and retrieval status of documents was
retained. Showing the visited and retrieval status is analogous to
browsers displaying the visited links status. However, no
indication was given of the numbers of visits, or the bookmarked
status of documents in the simple version. Another difference was
that the SERP snippets were not shown when moving the mouse
over the simple SearchPanel when off the SERP. Instead, a tool-tip
with document title was shown.

4.3 Logging
SearchPanel was instrumented with a logging mechanism to
capture searchers’ information-seeking behaviors. The following
activities were logged: submitting a query, turning SearchPanel
off, mouse clicks on the SERP or SearchPanel, mouse movements
over snippets on the SERP or over on bars in SearchPanel, and
repositioning of the SearchPanel. All activities were logged with a
unique anonymous user id and timestamp. URLs and query strings
were logged as hashed strings for query events and mouse clicks
on links to guarantee reasonable privacy and anonymity for the
participants. This procedure allows us to identify recurrent queries
without being able to read the content of the query, and to identify
documents previously retrieved by another query.

Table 2. Features present in the complex
and simple versions of SearchPanel used in
the study. P indicate process metadata,
D document metadata, and N navigational
feature
Feature
Complex Simple
Navigating search results
yes
yes
(N)
Visited and retrieval status
yes
yes
(bar color, P)
Search engine access (N)
yes
yes
Favicons (P)
yes
yes
Highlighting / bookmarking
yes
no
(D)
Number of retrievals (P)
yes
no
Preview snippets and
yes
no
snippet highlighting (P)

4.4 Search session classification
We classified search sessions into three categories: exploratory
search, re-finding and single query searches. Our classification
was by necessity simplistic. Since the queries were hashed, query
terms could not be used for classifying search sessions.

4.4.1 Exploratory search session
Exploratory search is characterized by an evolving information
need. Queries submitted during an exploratory search session will
have some results overlap since searchers continually refine their
query formulation [25]. We classified search sessions as exploratory when some of the URLs of top ten results of consecutive
queries had overlap. This is by necessity a crude definition, since
SearchPanel only parsed the SERP shown to the user. However,
only one example of exploratory search was needed for the whole
session to be classified as exploratory search.

Figure 5. The
simple version of
SearchPanel

4.1 Research focus
Our primary research focus is to investigate effects of
communicating process metadata during complex information
seeking activities, such as exploratory search and re-finding.
Specifically, for this deployment we were interested in how users
incorporated SearchPanel into their search practices. What were
the characteristics of the search sessions when SearchPanel was
used and when it is not used, in terms of search session duration,
number of queries, or actions? Would SearchPanel be used
differently during exploratory search and re-finding search?

4.4.2 Re-finding search session
The purpose of a re-finding search activity is to find a document
previously retrieved and viewed. In this work, search sessions are
classified as re-finding when the last document viewed in a search
session was a document that had been previously viewed. A previously viewed document is a document that has been recorded in a
user’s search history. This definition is limited to sessions where
users have accessed documents from the SERP or SearchPanel.

4.2 Deployment

4.4.3 Single query search session

SearchPanel was deployed through the Chrome Web Store on
June 12, 2013. The data collection ran until Sept 3, 2013. The
deployment was advertised through social media.

Single query searches have a “look-up” character. Even when a
search session consists of multiple queries, the queries are likely
unrelated. Any search session that cannot be categorized as either
a re-finding or an exploratory search session is defined as a single
query search for the purpose of this study.

Users were randomly assigned one of the two SearchPanel
versions at installation. A short tutorial page was displayed after
installation, which was also available through the options menu.
Users could also disable logging, or delete the recorded search
history from this menu.

4.5 Data Analysis
For the data analysis, the logs were parsed and single queries were
merged into search sessions. For queries to be grouped together,
the time separating a query’s last event and the next query’s first
event could at most be 1,124 seconds long (18 min 44 seconds).
This was the 70th percentile of durations of inactivity between
actions of the last query and a new query.

A total of 150 users installed SearchPanel and allowed logging,
and queries were recorded from 120 users. Of these, 62 had the
complex version and 58 had the simple version. The amount of
time SearchPanel was installed varied greatly, but 58% of all users
had it for more than two days. The distribution of active users for
the two versions remained equal over the data collection period.

499

To compare how the number of search sessions changed over
time, we divided the available time (max 83 days) into two
equally large groups, i.e. days before the 42nd day and days after.
When comparing the number of search sessions for the two
SearchPanel versions and the two time levels using a two-way
ANOVA, we found an interaction between the number of search
sessions for the two SearchPanel versions before and after day 42
(F(1, 960)=10.03, p<0.01). Furthermore, there were main effects
on SearchPanel version (F(1, 960)=24.00, p<0.001) and on early
vs. late usage (F(1, 960)=24.89, p<0.001).

After the search sessions were identified, each session was classified as a re-finding session, exploratory search session or single
query session. The search sessions were first tested as a re-finding
search session, next as an exploratory search session. If the search
session failed to be classified as either re-finding or exploratory
search, it was classified as single search session. All queries
within a search session were assigned the same classification.
For each search session, the number of user actions was measured.
User actions were any action performed during a session, such as
submitting queries, following links, adding/removing bookmarks
and moving the mouse over SERP snippets or the SearchPanel.

4
Avgerage number of search sessions per day

Before any data was analyzed, outliers were removed. Any search
sessions with duration above three standard deviations from the
mean were considered outliers. Search sessions that did not have
any duration or actions were also removed. The total number of
remaining search sessions were 2,118.
For all analysis, except as noted, we used a three way ANOVA
with the factors: SearchPanel version, session type and interaction
location, i.e. if the users interacted with the SERP only or if they
interacted with both the SearchPanel and the SERP during a search
session.

5. RESULTS AND DISCUSSION
We first present results from looking at how SearchPanel’s usage
changed over time, before diving into what characterized the
search sessions that contained user interactions with SearchPanel.
Finally, we discuss how SearchPanel was used in exploratory and
re-finding search sessions.

Complex
Simple
3

2

1

0
Day 1-42

Day 43-83

Figure 7. Avg. number of search sessions per user per day for
days 1 through 42, and days 43 through 83 using the complex
and simple versions of SearchPanel
As Figure 7 shows, during days 1-42 the simple version had more
search sessions per user than the complex version (Tukey HSD
post hoc, p < 0.001). But after day 43, we found that the complex
version had more search sessions per user than the simple version
(Tukey HSD post hoc test, p < 0.001). In addition, the simple
version decreased the number of search sessions per user after
Day 42 (Tukey HSD post hoc, p < 0.001), while in the complex
version the number of search sessions per day had not changed
after Day 42 (Tukey HSD post hoc, p = 0.515).

5.1 Usage adaptation over time
To get a sense of how the usage of SearchPanel evolved over
time, we investigated the number of search sessions found during
our data collection period. On average, the number of search
sessions per user did not differ significantly (t(141.803) = 0.170)
between the complex (mean = 12.3, SD = 23.37) and simple
versions (mean = 11.8, SD = 17.11). When examining the patterns
of sessions over time (Figure 6), we could see that the simple
version had a higher number of search sessions during early usage
compared to the complex version (day 1 to about day 15), while
the complex version had fewer search sessions early on, but
slowly overtook the simple version as time went on. Time was
normalized over the users’ usage, meaning that day 1 is the day
SearchPanel was installed for each participant.

These results illustrate that usage of the complex version of
SearchPanel appears to slowly increase over time compared to the
simple version where usage declined. However, these results were
not expected. Since the users were randomly assigned to one of
the two conditions, we had anticipated that users would have the
same information need over time and hence perform the same
number of search sessions using both versions. However, if the
users experienced that one version of SearchPanel supported the
search task better they may have been more inclined to use it.

5.2 SearchPanel search session characteristics
The SearchPanel users were free to use SearchPanel when they
felt it could assist them in their search need. To further investigate
when users turned to SearchPanel during a search session, we
investigated the characteristics of the search sessions when
SearchPanel was used and when it was not used. Using this
information, we explored how search sessions where SearchPanel
was used differed from search sessions where the user only
interacted with the SERP. Table 3 summarizes the various
dependent variables analyzed: the duration, number of queries and
number of user actions for search sessions classified as
exploratory search and re-finding search.

Figure 6. Total number of search sessions over time. Day 1
corresponds to day of installation by each user

500

12% of single search sessions. In the next section, we will
investigate further how the simple and complex version of
SearchPanel influenced users’ behavior.

As Table 3 shows, there are some striking differences between
search sessions where users interacted with SearchPanel compared
to when they did not. In sessions where SearchPanel was used, the
numbers of queries were on average 190% higher, the session
durations were 307% higher and the number of actions performed
on the SERP was 243% higher than in search sessions where
SearchPanel was not used. All these differences were significant.

5.3 SearchPanel version & Search session
type

Table 3. Variables describing search session characteristics
when users only interacted with SERP and when they
interacted both with SearchPanel and SERP (SP+SERP).
* significant at 0.001 level
Variable

SERP
M
SD

Queries
Session
Duration (min)
Actions, SERP
Query/Session
duration
# query terms

2.9 2.57
7.0 11.00

5.5
21.5

5.77 22.097* 1, 2106
18.71 10.967* 331.979

6.9 15.62
45% 44.8

16.8
71%

26.97 64.778* 1, 2106
36.4 9.409* 1, 2100

3.4

3.68

SP + SERP
M
SD

3.3

2.21

F

df

0.938 1, 4570

We also compared the query duration’s proportion of the total
search session duration. This measure gives an indication of how
much of the search session duration was spend on search formulation versus examining search results. We found that when users
interacted with the SERP only, the query duration portion of the
search session was 45% (SD = 44.8), while when also interacting
with SearchPanel the portion was significantly higher at 71%
(SD = 36.4).

SearchPanel was designed to support exploratory search and refinding search tasks in particular. We now turn our attention to
how users used SearchPanel during these two types of search
sessions and contrast them with single search sessions. Table 4
shows summary statistics for search session duration, number of
queries per search session, number of SERP actions per search
session, and number of terms per query for the two SearchPanel
versions and the three session types. The results from each of
these dependent variables will be presented first followed by a
discussion of the implications of the results for the two versions of
SearchPanel in particular for re-finding and exploratory search.
Table 4. Average duration (min.), number of queries, actions
per search session, and number of search terms per query for
each SearchPanel version (standard deviation)
Factor
Complex
Simple
Exploratory
Re-Finding
Single

Duration
10.5 (14.65)
8.1 (12.35)
13.6 (15.89)
9.0 (13.63)
6.2 (10.62)

Queries
3.4 (3.51)
3.3 (3.29)
5.2 (4.19)
2.8 (3.94)
2.1 (1.63)

Actions
9.5 (19.91)
7.5 (16.46)
14.7 (24.45)
5.2 (10.14)
5.1 (12.33)

Terms
3.4 (2.41)
3.2 (3.51)
3.6 (2.48)
2.8 (1.89)
3.1 (3.47)

5.3.1 SearchPanel comparison
Of all 986 search sessions performed with the complex
SearchPanel, 35% were exploratory search sessions, 11% were refind search sessions, and the remaining 54% of the search sessions
were in single query search sessions. In comparison, of all 1132
search sessions collected with the simple SearchPanel, 8% were
re-finding and 38% were exploratory search sessions. This
difference in distribution between the two SearchPanel versions
was significant (χ2(2) = 7.658, p < 0.05).

These results appear to indicate that the users had more complex
search needs when interacting with SearchPanel than when only
interacting with the SERP. The users formulated more queries with
less time between queries, and interacted more with the SERP.
However, no differences in number of query terms were found.
One possible alternative interpretation is that interacting with
SearchPanel took time away from the search task hence resulting in
longer durations. However, this interpretation is unlikely since for
each action on SearchPanel the user interacted on average 3.6 times
(SD = 8.75) with the SERP. Also, we could not find any correlation
between the number of actions on SearchPanel and the search
session duration (r = 0.056, n = 323, p = 0.309), but we found
significant correlations between both search session duration and
actions on SERP (r = 0.337, n = 323, p < 0.001) and search session
duration and number of queries (r = 0.491, n = 323, p < 0.001) for
search session where users interacted with SearchPanel.

Most of the dependent variables in Table 4 show similar pattern.
The complex SearchPanel resulted in longer search sessions (F(1,
2106) = 22.097, p < 0.01), queries with more search terms (F(1,
9927) = 48.260, p < 0.001) and more interactions with the SERP
during the search sessions (F(1, 1611) = 9.932, p < 0.01). We did
not find any difference in the number of actions on SearchPanel
based on the SearchPanel version (F(1, 317) = 2.74, p = 0.10) and
the search session type (F(1, 317) = 0.784).
One interesting result was that the number of search terms per
query was significantly affected by the SearchPanel version (F(1,
4570) = 5.156, p < 0.05). Generally, more search terms are
regarded to result in better queries during exploratory search [8],
[9]. Hence, if the complex version of SearchPanel encourages
users to add more search terms to their queries, it could result in
better search performance using SearchPanel, which possibly
could explain why users of the complex SearchPanel used it more
often than users of the simple version did.

In addition to the results above, we found that users of the complex
version of SearchPanel used SearchPanel in their search sessions to
a significantly higher degree (χ2(1) = 39.903, p < 0.001), than users
of the simple version. Of all search sessions recorded by the
complex version, 21% percent had actions on SearchPanel, while
users of the simple SearchPanel, interacted with SearchPanel in 11%
of the search sessions. This result shows that the complex
SearchPanel got more use than the simple version, presumably
indicating that the complex version met the needs of the users to a
higher extent than the simple version.

Given that the complex SearchPanel provided more information to
the user than the simple SearchPanel, our hope was it would
provide faster search sessions with fewer actions. However, since
our results show that the complex SearchPanel was more used in
in the long term than the simple SearchPanel, as we see in Section
5.1, the interpretation of the results are likely more complex than
to claim that the simple SearchPanel supports the users’ need

We also found that the search session type significantly changed the
likelihood that users would interact with the SearchPanel
(χ2(2) = 18.206, p < 0.001). In 19% of the exploratory search
sessions, users interacted with SearchPanel, while users interacted
with SearchPanel in only 14% of re-finding search sessions and in

501

compared to the re-finding sessions (Tukey HSD, p < 0.001) and the
single query sessions (Tukey HSD, p < 0.001). There was no
significant difference in number of search terms between the refinding search sessions and the single query search sessions. Also,
the complex SearchPanel had significantly more terms per query in
exploratory search sessions (Tukey HSD, p < 0.01), but for refinding and single query sessions there was no significant difference
in number of search terms per query.

better than the complex SearchPanel, since we got lower search
session duration during this condition. The users had the choice of
using SearchPanel, and they used the complex version more than
the simple version in the long run.

5.3.2 Search session type
SearchPanel was designed with exploratory search and re-finding
search tasks in mind. The results above show that there are some
differences in how the two versions of SearchPanel were used.
Next, we will look into how users used SearchPanel during each
specific search session type.

These results indicate that the users behaved differently during the
three different types of search sessions. Single query and re-finding
search sessions displayed similar patterns, with little difference in
terms of duration, number of queries and number of search terms per
query. Exploratory search sessions, however, presented a quite
different pattern; these search sessions had longer durations,
although not significant, more queries per search session with longer
queries, and more actions on the SERP. In particular, we noticed that
the usage of the complex SearchPanel during exploratory search
sessions stood out.

When investigating the search session duration, we did not find
any significant interaction between SearchPanel version and
search session type. However, we noticed that during exploratory
search sessions, users of the complex SearchPanel spent a longer
time searching, an average difference of 4 min, than users of the
simple version, see Figure 8. Post-hoc analysis showed that the
exploratory search sessions were significantly longer (Tukey HSD,
p<0.05).

Figure 9. Average number of queries per search session for the
two SearchPanel versions and the three search session types
(Error bars: ±1 Std Err.)

Figure 8. Average search session duration for the two
SearchPanel versions and the three search session types
(Error bars: ±1 Std Err.)
The number of queries per search session and the number of actions
on the SERP both showed significant interaction between
SearchPanel version and search session type (# Queries: F(2, 2106)
= 5.114, p < 0.01, # Actions on SERP: F(2, 2106) = 4.565, p < 0.01).
Figure 9 and 10 illustrate these interactions. During exploratory
search, the complex SearchPanel had significantly more queries per
search session (Tukey HSD, p < 0.05) and significantly more actions
on the SERP (Tukey HSD, p < 0.01) than the simple version. There
were no significant differences between the SearchPanel versions for
the two other search session types.
The number of search terms per query was significantly affected by
the search session type (F(2, 4570) = 20.199, p < 0.001). There was
also a significant interaction between SearchPanel version and
search session type (F(2, 4570) = 5.795, p < 0.01), as illustrated in
Figure 11. The post-hoc analysis showed that the exploratory search
sessions had significantly higher number of search terms per query

Figure 10. Average number of actions on the SERP per search
session for the two SearchPanel versions and the three search
session types (Error bars: ±1 Std Err.)

502

exploratory search since it would allow easy access and quick
overview when exploring the search results.
There were differences in user behavior between the two versions
of SearchPanel during exploratory search. The search sessions
with the complex version had more queries and more actions, but
also longer session duration. These results suggest that users of
the complex version made more effective use of SearchPanel
during their exploratory search than users of the simple version.
The process metadata visualization appears to allow a faster
review of the search results, which in turn can result in more
queries. Although the precise effect of process metadata on
explorative search still needs to be further investigated, this work
indicates the usefulness of process metadata during exploratory
search.
That users of the complex version of SearchPanel used more
search terms in their queries is particularly noteworthy. Longer
queries are generally associated with better performance during
exploratory search [8][9]. Previous research has shown that subtle
hints during query formulation can affect how many search terms
a user enters [2]. In the case of SearchPanel, it is possible that the
visualization of the metadata allows users to build an
understanding of how query formulation corresponds to retrieval
of documents. This understanding in turn, may nudge users to put
more thought into their query formulation.

Figure 11. Average number of search terms per query for the
two SearchPanel versions and the three search session types
(Error bars: ±1 Std Err.)

5.4 Results summary and implications
Comparing the two versions of SearchPanel, reveals distinctive
patterns. One is that the complex SearchPanel had better long term
viability; as time went on the number of search sessions slowly
increased. By voting with their feet, the users chose the complex
version of SearchPanel over the simple version.
Another pattern is that the search sessions in which users
interacted with SearchPanel had different characteristics from
those sessions in which they did not interact with it. SearchPanel
appears to have been used primarily in sessions with longer
durations, more queries and more actions on the SERP. These
characteristics can be seen as signs of a more complex search need
that is not easily solved with a single query. The fact that
SearchPanel was used in these circumstances can be seen as
evidence that it supported the searchers’ activities.

6. CONCLUSION
Our aim when creating SearchPanel was to support complex
information needs by means of a light-weight tool integrated with
common search engines. If the users had need for it, the tool
would be there supplying important information for the task at
hand. If the users did not have need for it, it would be out of the
way and not interfering. In our real-world deployment study, we
show that this light-weight approach appears to work. In cases in
which the information need is easily satisfied, the searchers do not
tend to use SearchPanel. However, when the information need is
more complex, searchers turned to SearchPanel. We see that
SearchPanel is used in search sessions with more queries and
longer duration than when users exclusively interact with the
search result page. In particular, exploratory search sessions
attract more interactions with SearchPanel.

5.4.1 Re-finding documents using SearchPanel
For the re-finding search activity, SearchPanel provided feedback
to the user by changing the colors of the bars (both versions) and
the length of the bars (complex version only) to reflect the
retrieval and visited status of documents. Also, the complex
version indicated whether a retrieved document had previously
been bookmarked. Based on the results above, there appears to be
little difference in the way the two SearchPanel versions were
used in re-finding search sessions. The added features, such as the
bookmark indicator and signaling the frequency of visits seem to
make only a limited contribution to re-finding search.

SearchPanel was deployed in two versions, a simple version
focused on visualizing document metadata, and a complex version
providing visualizations of both document and process metadata.
In re-finding search activities, we can see little impact of the
added process metadata the complex version provides. The visited
and retrieval status information appears to support the users
sufficiently well.

We draw the conclusion that the two versions support re-finding
search activities equally well. Both versions appear indicate if a
document has been visited before. In the complex version, the
visited status of a document is amplified by also indicating
number of views. However, for re-finding search tasks, we do not
find any evidence that this extra process metadata feature made a
significant difference in users’ re-finding search processes.

By contrast, process metadata appears particularly useful for
exploratory search. In these search sessions, we can see that users
submit more queries with more search terms and interaction in
search sessions with longer duration. This intriguing result
suggests that the users of the complex version were able to use the
visualization of the process metadata to inform their information
seeking process. With appropriate visualization, users can quickly
scan the results list for documents relevant to their current
information needs. Future research is needed for deeper
understanding of how process metadata influences the search
process, but the results presented here are promising.

5.4.2 Exploratory search
When engaged with an exploratory search session, users have a
need to keep track of previously explored documents to more
easily focus on new documents the present query retrieves. Both
SearchPanel versions indicate documents’ visited and retrieval
status, but the complex version also indicates how often a
document has been visited. The complex version provides extra
navigational support, which could be an important feature during

Our study shows that these simple visualizations have potential
long-term viability. The features in SearchPanel are flexible

503

[14] Dziadosz, S. and Chandrasekar, R. Do thumbnail previews help
users make better relevance decisions about web search results?
In Proc. SIGIR ’02 (2002). p365-p366

enough to provide support for both exploratory search and re-find
search activities, although these activities have different search
processes. Simple, well designed extensions to traditional search
result pages, especially when they permit searchers to use familiar
search engines, can provide a powerful boost to complex search
activities such as exploratory search.

[15] Even, A., Shankaranarayanan, G., and Watts, S. Enhancing
decision making with process metadata: Theoretical framework,
research tool, and exploratory examination. In Proc. of HICSS’06
(2006), p209a-p209a.

7. ACKNOWLEDGMENTS

[16] Jones, W., Bruce, H., and Dumais, S. Keeping found things found
on the web. In Proc. of CIKM ‘01, (2001), p119-p126

This was the last project we had the pleasure of working on with
Gene. All of us at FXPAL were saddened by the passing of our
brilliant colleague and good friend; our sense of loss has made us
all the more determined to complete this project. We appreciate
the opportunity to publish this work at SIGIR, a conference
particularly meaningful to Gene. We are grateful to Gene’s
widow, Jill Berman, for her encouragement and support. Special
thanks to Thea Turner for her comments on the early drafts of this
paper.

[17] Jhaveri, N., and Räihä, K. The advantages of a cross-session web
workspace. In CHI ‘05 Extended Abstracts (2005), p1949-p1952.
[18] Golovchinsky, G., Diriye, A., and Dunnigan, T. The future is in
the past: designing for exploratory search. In Proceedings of IIIX
‘12, (2012), p52-p61.
[19] Hong-li, Q. A novel visual search engines: Grokker. Journal of
Library and Information Sciences in Agriculture 8 (2008), 047.
[20] Hoppe, H.U. and Zhao, J. (1994). C-TORI: an interface for
cooperative database retrieval. In Karagiannis, D. (Ed.) Database
and Expert Systems Applications, pp. 103-113. Berlin: SpringerVerlag.

8. REFERENCES
[1] ABAKUS. BetterSearch a Firefox add-on for enhancing search
engines. http://mybettersearch.com/, 2010. [Online; accessed
06/06/2013].

[21] SearchPreview, the browser extension previously known as
GooglePreview. http://searchpreview.de/, 2013. [Online; accessed
06/06/2013].

[2] Agapie, Elena, Gene Golovchinsky, and Pernilla Qvarfordt.
Leading people to longer queries. In Proceedings of CHI’13,
(2013), pp. 3019-3022

[22] Marchionini, Gary. Exploratory search: from finding to
understanding. Communications of the ACM 49, 4, (2006): 41-46.

[3] Ahn, J.-W., Brusilovsky, P., and Farzan, R. Investigating users’
needs and behavior for social search. In Proc. Workshop on New
Technologies for Personalized Information Access (2005), p1-p12

[23] schraefel, m.c., Zhu, Yuxiang, David Modjeska, Daniel Wigdor,
and Shengdong Zhao. Hunter gatherer: interaction support for the
creation and management of within-web-page collections.
In Proceedings of the 11th international conference on World Wide
Web, pp. 172-181. ACM, 2002.

[4] Aula, A., Jhaveri, N., and Käki, M. Information search and reaccess strategies of experienced web users. In Proc. WWW ‘05.
(2005), p583-p592
[5] Baeza-Yates, R., Ribeiro-Neto, B., Modern information retrieval,
ACM Press New York, 1999.

[24] Morris, D., Morris, M., R., and Venolia, G. SearchBar: a searchcentric web history for task resumption and information re-finding.
In Proc. CHI ‘08, (2008). p1207-p1216

[6] Bharat, K. SearchPad: explicit capture of search context to support
Web search. Computer Networks 33.1 (2000): 493-501.

[25] Qvarfordt, P., Golovchinsky, G., Dunnigan, T., and Agapie, E.
Looking ahead: Query preview in exploratory search. In Proc.
SIGIR ‘13, (2013).

[7] Bates, Marcia J. The design of browsing and berrypicking
techniques for the online search interface. Online Information
Review 13, 5 (1989): 407-424.

[26] Roberts, J., Boukhelifa, N., and Rodgers, P. Multiform glyph
based web search result visualization. In Proc. IV’02 (2002), p549p554.

[8] Belkin, N.J., Cool, C., Kelly, D., Kim, G., Kim, J.-Y., Lee, H.-J.,
Muresan, G., Tang, M.-C., Yuan, X.-J. Query Length in Interactive
Information Retrieval. In Proc. SIGIR 2003 (2002). ACM Press.

[27] Rose, D. E., and Levinson, D. Understanding user goals in web
search. In Proc. WWW’04 (2004) p13-p19.

[9] Belkin, N.J., Cool, C., Jeng, J., Keller, A., Kelly, D. Kim, J., Lee,
H.-J., Tang, M.-C., Yuan, X.-J. Rutgers’ TREC 2001 Interactive
Track Experience. In Proc. TREC 2001 (2002) pp.465-472.
Washington, DC: GPO.

[28] Spoerri, A. How visual query tools can support users searching the
internet. In Proc. IV 2004 (2004), p329-p334.
[29] Teevan. J. The re:search engine: simultaneous support for finding
and re-finding. In Pro. UIST ‘07 (2007), p23-p32

[10] Broder, A., A taxonomy of web search. SIGIR Forum 36, 2 (Sept.
2002), 3-10.

[30] Teevan, J., Adar, E., Jones, R., and Potts, M. A. S. Information reretrieval: repeat queries in Yahoo’s logs. In Proc. SIGIR ’07
(2007), p151-p158.

[11] Capra, R., Marchionini, G., Velasco-Martin, J., and Muller, K.
Tools-at-hand and learning in multi-session, collaborative search.
In Proceedings CHI ’10 (2010). p951-p960

[31] Twidale, M., and Nichols, D. M. Designing interfaces to support
collaboration in information retrieval. Interacting with
computers 10, 2 (1998) 177-193.

[12] Chen, H., Fan, H., Chau, M., and Zeng, D., Metaspider: Metasearching and categorization on the web. Journal of the American
Society for Information Science and Technology 52, 13 (2001),
1134-1147.

[32] Wang, T. D., Deshpande, A., and Shneiderman, B. A temporal
pattern search algorithm for personal history event visualization.
IEEE Transactions on Knowledge and Data Engineering, 24, 5
(2012), 799-812

[13] Donato, Debora, Francesco Bonchi, Tom Chi, and Yoelle Maarek.
Do you want to take notes?: identifying research missions in
Yahoo! search pad. In Proceedings of the 19th international
conference on World Wide Web (2010) pp. 321-330.

504

