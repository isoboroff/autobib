Predicting Trending Messages and Diffusion Participants
in Microblogging Network
Jingwen Bian† , Yang Yang†,∗ , and Tat-Seng Chua†
†

National University of Singapore, Singapore
∗
The University of Queensland, Australia

{bian_jingwen, chuats}@comp.nus.edu.sg, dlyyang@gmail.com
ABSTRACT

1.

Microblogging services have emerged as an essential way to
strengthen the communications among individuals. One of
the most important features of microblog over traditional
social networks is the extensive proliferation in information
diﬀusion. As the outbreak of information diﬀusion often
brings in valuable opportunities or devastating eﬀects, it
will be beneﬁcial if a mechanism can be provided to predict whether a piece of information will become viral, and
which part of the network will participate in propagating
this information. In this work, we deﬁne three types of inﬂuences, namely, interest-oriented inﬂuence, social-oriented
inﬂuence, and epidemic-oriented inﬂuence, that will aﬀect a
user’s decision on whether to perform a diﬀusion action. We
propose a diﬀusion-targeted inﬂuence model to diﬀerentiate
and quantify various types of inﬂuence. Further we model
the problem of diﬀusion prediction by factorizing a user’s
intention to transmit a microblog into these inﬂuences. The
learned prediction model is then used to predict the future
diﬀusion state of any new microblog. We conduct experiments on a real-world microblogging dataset to evaluate our
method, and the results demonstrate the superiority of the
proposed framework as compared to the state-of-the-art approaches.

Recent years have witnessed the development of microblogging services and the important role they played in changing
the way people live and communicate. As a novel type of social network, microblog integrates the specialities of various
other traditional social media. Similar to Facebook, people
can use it to manage the interpersonal relationships with
their friends and post updates about their daily activities to
keep themselves socially active. Microblog also operates like
news media, where bountiful oﬃcial accounts (by ordinary
users in some cases, such as the witness of an accident) keep
publishing the latest and miscellaneous news about the society. Additionally, microblog also serves as an interest discovery tool, assisting people in exploring and disseminating
the content conforming to their personal interests.
The extent to which a social network spreads information is a key measurement that impacts the degree of user
engagement as well as its revenue. Unlike friendship-based
networks, in which the content spread is conﬁned to close
group of friends, content-centric microblogging network promotes the spread of information with no restriction: it allows
users to connect with any people sharing common interests
with them, and repost any content they deem interesting.
Therefore, we could observe plenty of diﬀusion actions (i.e.,
the action that a user disseminates a microblog from his
friend instead of posting original content) in microblogging
platforms, and the number of diﬀusion actions could in turn
reﬂects the distinction of the associated microblog, in terms
of its novelty, popularity and importance. It has been reported [9] that the size of information cascades ﬁts powerlaw, which means that of all the microblogs posted everyday, only a tiny proportion of them will break out (i.e., a
large number of users participate in propagating these microblogs), while most will diminish. It will be of great beneﬁt
if a trending microblog could be predicted early before the
outbreak actually happens. For instance, if a user predicts
that a piece of information will emerge in the near future
and propagates this information in the early stage, then his
ideas or comments will have more chances to be exposed to
other people, which could help to increase his reputation and
inﬂuence. In addition to predicting trending microblogs, the
ability to predict which users may participate in the diﬀusion process of a particular microblog is also desirable and
valuable in many cases, e.g., analysing the predicted future
participants to choose better advertisement strategy, recommending a microblog to potential participants to accelerate
the information propagation process, etc.

Categories and Subject Descriptors
J.4 [Computer Applications]: Social and Behavioral Sciences; H.1 [Information Systems]: Models and Principles—Human information processiong

General Terms
Algorithms, Experimentation

Keywords
Social network; Social inﬂuence analysis; Diﬀusion prediction
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
SIGIR’14, July 6–11, 2014, Gold Coast, Queensland, Australia.
Copyright 2014 ACM 978-1-4503-2257-7/14/07 ...$15.00.
http://dx.doi.org/10.1145/2600428.2609616 .

531

INTRODUCTION

In recent years, information diﬀusion has drawn considerable research interest in computer science, and a variety of
techniques and models have been developed to capture the
information diﬀusion in online social networks [14]. Some researchers focus on building standard models to explain the
general information diﬀusion process, such as the two seminal models, namely Independent Cascades (IC) model [10]
and Linear Threshold (LT) model [16]. These models are
useful for simulating the information ﬂow in social networks.
However, they cannot be directly applied to predict the diffusion process. Another research direction lies in detecting
the outbreak of information cascades [20], which focuses on
the cascades that have already broken out. In this work, we
target at a diﬀerent problem: given a new microblog, we intend to predict whether it will become trending in the near
future, and we also try to predict which users will participate
in the future diﬀusion process of this microblog.
A user’s action of propagating a microblog from a friend
may be aﬀected by various factors. Generally, there are three
factors that contribute to a diﬀusion action: 1) the content
of the microblog is in accordance with this user’s interest; 2)
the microblog is posted by this user’s close friend, and his
repost action is due to social needs; and 3) the information
is epidemic (e.g., a piece of breaking news), and his propagation action is a result of conformity behavior (i.e., the act
of matching attitudes, beliefs, and behaviors to group norms
[23]). These factors exhibit diﬀerent types of inﬂuences exerted on a user from diﬀerent sources: his friends, his interests, and the information content. It is diﬃcult to quantify
these inﬂuences due to several challenges. The ﬁrst challenge
is how to diﬀerentiate these inﬂuences. In our scenario, only
the diﬀusion action is observable, while the underlying inﬂuences that trigger this action is implicit. Therefore, it is
impractical to directly infer the degree of diﬀerent inﬂuences
based on the performed diﬀusion actions. Second, in order
to obtain the interest-oriented inﬂuence, we need to generate the user’s interest proﬁle, i.e., what kind of content he is
interested in, from his microblogging history. Nowadays, a
growing proportion of microblogs contain multimedia information [3, 8], e.g., both texts and images, and images could
provide more information than the short texts contained in
a microblog. How to discover the interest proﬁle of a user
from these multimedia contents remains a problem. A third
challenge is in constructing a uniﬁed model that can jointly
leverage various types of inﬂuences to model and predict the
information diﬀusion process.
To solve the proposed problem and tackle the above challenges, we propose a novel scheme to quantify the three types
of inﬂuences and adopt the learned inﬂuences to model and
predict users’ diﬀusion actions. Speciﬁcally, the proposed
framework comprises three essential stages: user interest
proﬁle learning, diﬀusion-targeted inﬂuence learning, and
microblog diﬀusion modeling and prediction. First, in order
to learn a user’s interest proﬁle, we need to map the user’s
microblogs into the corresponding interest categories. We
devise a classiﬁcation approach, termed Multi-Task Transfer Learning, to jointly classify the multimedia microblogs
posted by a user into various interest categories. In order to
address the deﬁciency of labeled training data, we bring in
external knowledge domain where labeled samples are easy
to acquire, and the transfer learning technique is adopted to
project data samples from diﬀerent domains into the same
embedding space. Meanwhile, a multi-task co-learning pro-

cess is integrated for the classiﬁcation task, which will beneﬁt from the joint information shared by diﬀerent media contents. In the second part, we propose a diﬀusion-targeted
inﬂuence model to quantify various inﬂuences a user receives.
Three types of inﬂuences are formally deﬁned, and a factor
graph model is elaborated to categorize and analyse these
inﬂuences. Finally, given the history diﬀusion action set,
we learn how the various inﬂuences could aﬀect a user’s decision of whether to perform a particular diﬀusion action.
The learned weighting conﬁguration for various inﬂuences
will eventually contribute to the prediction of future diﬀusion status with regard to a new microblog.
The rest of the paper is organized as follows. Related
works are brieﬂy summarized and discussed in Section 2. In
Section 3, we describe the formal deﬁnition of the problem
addressed in this paper, and give a brief overview of the
whole framework. In Sections 4, 5 and 6, respectively, we
introduce the three main stages of our framework. Section
7 presents the experimental design and evaluation results.
Finally, we conclude our work in the last section.

2.

RELATED WORK

Inﬂuence analysis. Social inﬂuence is the behavioral
change of a person because of the perceived relationship with
other people, organizations and society in general. It has
been a widely accepted phenomenon for decades, and many
works have been done to demonstrate the existence of social
inﬂuence in online social networks [1, 19, 13]. One important
research direction is the problem of inﬂuence maximization.
Given a network with inﬂuence estimates, inﬂuence maximization tries to select an initial set of users such that they
will eventually inﬂuence the largest number of users. Kempe
et al. introduced a fundamental work [16]. Following this,
many other methods [6, 12, 5, 27] have been proposed to improve the eﬃciency. All the related works discussed above
assume the inﬂuence probability on the edges are given as
input, which is impractical for real-world problems. Some
works have been done to infer the degree of inﬂuence from a
given social network [11, 24, 2]. A probabilistic model was
proposed in [11] to learn inﬂuence probabilities by mining
past inﬂuence cascades. Tang et al. studied the topic-level
social inﬂuence in [24], and a Topical Aﬃnity Propagation
(TAP) method was proposed to model this problem. Other
works include the detection of inﬂuential users [26], inﬂuence
measurement in Twitter [4], etc.
Outbreak detection. The target of outbreak detection
is to select a set of nodes from a social network in order to
detect the spread of a virus as fast as possible. Leskovec dt
al. presented a general methodology for near-optimal sensor
placement in [20]. By exploiting submodularity they developed an eﬃcient algorithm much faster than the greedy
algorithm. The work in [18] conducted evolutionary analysis
in blog networks, and showed that the blogspace had been
expanding in metrics of community structure and connectedness. The goal of the above works is to detect existing
outbreaks, which is diﬀerent from our target of predicting
the outbreak of a microblog diﬀusion process before it happens. Recently, Cui et al. [9] raised the question of cascading
outbreak prediction. Based on the historical cascade data,
a data driven approach was proposed to select important
nodes as sensors. The prediction is based on the cascading
behaviors of these sensors. Although the problem is similar to ours, the above method could only predict whether a

532

cascade will breakout, but could not provide more detailed
information about the scale of the cascade or which of the
users will participate in the future diﬀusion process. Besides,
the limitation with the small number of sensors results in low
recall in prediction performance. The models described in
[22] and [23] aim at modeling and predicting users’ social
actions based on the past action history. However, since a
model needs to be trained for each information diﬀusion process, and the training process requires a considerable number
of actions, these models could not be adopted for the diﬀusion prediction of a relatively new microblog. Unlike these
methods, our proposed framework could quantify general inﬂuence degree. The prediction model is trained with regards
to the behavior of users while is not constrained to any speciﬁc diﬀusion process. Therefore, our model can handle new
incoming microblogs without the need to train a new model
every time.

Social network

User Interest
Profile Learning

Diffusion-targeted
Influence Learning

Microblog data
Texts
Images

v

z

+

+

c

u

c

+
Texts
Images
External Knowledge
Users’microblogging
history

New microblog
streaming

3. PROBLEM DEFINITION AND FRAMEWORK OVERVIEW
We denote the social network as a directed graph G =
(V, E), where V is the user set and E ∈ V ×V represents the
social relationships between users. We denote a user u′ as a
friend of u if there is a edge (u, u′ ) ∈ E, i.e., u is a follower
of u′ . The basic action of a user is to post microblogs, which
can either be original or reposted from friends. A microblog
m contains two multimedia components: the textual part mt
and the visual part mv (either mt or mv could be empty).
We denote Mu as the set of all microblogs the user u has
posted, and the overall microblog set as M = ∪u∈V Mu .
Next, we present the formal deﬁnitions of some terms used
in this paper.
Definition 1. Interest Proﬁle. The microblogs could
be related to various interest categories. We denote C =
{c1 , ..., c|C| } as the collection of all interest categories. The
interest proﬁle of user u, I(u), is a |C|-dimensional vector
which represents the user’s interest distribution over all interest categories C.
Definition 2. Diﬀusion action. The users in the social network interact with each other through reposting microblogs published by their friends. A diﬀusion action is
deﬁned as a triple a = (u, u′ , m), representing the user u reposts a microblog with content m from his friend u′ . Here,
m can either be original microblog sent by u′ or a microblog
reposted by u′ from his friend.
The input to our problem is the social network G, the past
microblogging history of all users M , as well as the diﬀusion
action set A which contains the past diﬀusion actions of all
users. For a new incoming microblog mnew , we intend to
predict: (1) whether it will become trending in the near
future, and (2) which of the users will participate in the
diﬀusion process of this microblog.
Figure 1 presents the overall ﬂowchart of our proposed
framework, which comprises three main stages: user interest proﬁle learning, diﬀusion-targeted inﬂuence learning and
microblog diﬀusion modeling. The ﬁrst component aims
to discover a user’s interest proﬁle based on his microblogging history. Speciﬁcally, each microblog is ﬁrst classiﬁed
into a interest category, then the interest proﬁle is generated based on the aggregation of these classiﬁcation results.
In the second stage, we deﬁne three types of inﬂuences,
namely, interest-oriented inﬂuence, social-oriented inﬂuence

z

z

Multi-task transfer
learning

Learn different type of
influences

Diffusion
Prediction

Microblog
Diffusion Modeling

Predict trending
microblogs and future
diffusion participants

Configuration
maximization to learn
weighting matrix for all
influences.

Figure 1: Overview of our framework.

and epidemic-oriented inﬂuence, which will aﬀect a user’s decision of whether to perform a diﬀusion action. We propose
the diﬀusion-targeted social inﬂuence model to distinguish
and quantify the degree of these three types of inﬂuences.
Finally, in the third part, we take in the learned inﬂuences
as factors, and analyze the weighting parameters of each inﬂuence in aﬀecting a user’s diﬀusion decision based on the
diﬀusion action history. The learned weighting parameters
are then adopted for predicting the trending microblog and
the future diﬀusion activity of a new microblog.

4.

USER INTEREST PROFILE LEARNING

Generally, a user will show diﬀerent level of interest and
possess diﬀerent level of expertise for various interest categories, e.g., sports, music, history, etc. Therefore, the degree
of inﬂuence he exerts to his friends, as well as his interest
in propagating further information, will be diﬀerent for various categories. As a result, learning the interest proﬁle will
be crucial for detailed analysis of a user’s inﬂuence on his
friends, his diﬀusion actions, and the prediction of his future
action.
Given a user’s historical microblogging data, the target
of interest proﬁle learning is to map the microblogs to the
interest categories C, which in essence is a microblog classiﬁcation problem. Under the circumstance of microblogging,
we are confronted with the following two problems:
• It is diﬃcult to collect labeled training microblog data,
as the data labeling task is tedious and expensive. Besides, as the users tend to talk about the latest trends,
the contents of microblogs are highly dynamic and the
data vocabulary changes continuously. Consequently,
even if we can get some labeled data, they will quickly
become out-dated over time.
• Microblog contains multimedia data which contains
both text and image. Therefore, instead of traditional
short-text classiﬁcation task, the problem becomes crossmedia classiﬁcation where both textual and visual in-

533

formation should be incorporated to better capture the
various aspects of a microblog.

then TCA tackles the domain adaptation problem by minimizing the MMD distance between the two domains:
min tr(QT KLKQ) ,

In order to address the ﬁrst problem, we propose to include external knowledge into the training process to assist
the classiﬁcation of microblogs into the related interest categories. The well-edited articles from portal website (such
as Sina.com1 ) are chosen as the external knowledge with
the following reasons: 1) the articles in portal website are
well-categorized, which means we can directly get the interest category labels for these articles; 2) the contents of
these articles cover nearly all aspects; and 3) these articles
contain rich multimedia information, which is appropriate
for our cross-media classiﬁcation problem. We denote the
external knowledge as E = {(et , ev )}, where each data sample includes the textual content et and the visual content
ev . Besides, we also have the |E| × |C| label matrix Y of
the external knowledge, with each element yij ∈ {−1, 1} indicating whether the i-th data sample belongs to the j-th
interest category.
Although the microblog domain and the external knowledge domain are relevant, their data distribution are diﬀerent, which makes it infeasible to directly use external data
as training samples. Domain adaption is a solution to this
problem [29]. Domain adaption aims at solving a learning
problem in the target domain by utilizing training data in
the source domain, allowing data from the both domains
to be transferred to the same embedded space. Traditional
domain adaption problems usually target at a single media type, while the problem in our scenario contains two
modalities. One naive solution is to apply domain adaption
techniques on each media type separately, and then train
two unrelated classiﬁers for text and image. However, the
contents of the two media types are not isolated and there
is interrelationship between them. For example, the text
and image contained in the same microblog data are usually
related to the same topic. By applying the classiﬁcation separately, these beneﬁcial relationship will be ignored. With
the above consideration, we propose the Multi-Task Transfer
Learning (MTTL) model, which targets at the cross-media,
domain-adaptive classiﬁcation task.

Q

where Q ∈ R(|M |+|E|)×d is the embedding matrix; d is the
dimensionality of the embedding space; and Lij = 1/|M |2 if
both xi and xj ∈ M , Lij = 1/|E|2 if both xi and xj ∈ E,
and Lij = −1/(|M | × |E|) otherwise.
2) Objective 2: Locality Preserving. We would like to
preserve the local structures of both the microblog and external knowledge data, i.e., if two data samples are close to
each other in the original domain, this relationship should
be preserved in the embedded space [28]. Let G be the
k nearest neighbors graph of the original data with gij =
exp(−d2ij /σ 2 ) for xi , xj ∈ M ∪ E if xi and xj are in the
same data domain and xi belongs to the k nearest neighbor
set of xj , or vice versa, and gij = 0 otherwise. Let dij represents the distance of xi and xj , and the graph Laplacian
matrix of G be L. Note that after domain adaption using
TCA, the data projection in the embedded space is QT K,
where the i-th column [QT K]i provides the embedding coordinates of xi . Hence, we minimize the following objective
function for locality preserving:
∑
2
(3)
gij [QT K]i − [QT K]j = tr(QT KLKQ).
i,j

With the above two objectives, we are able to map the unlabeled microblog and the labeled external knowledge data
into the same embedded space. In order to jointly learn
both the textual and visual classiﬁers, we propose to utilize the following multi-task model to explores the intrinsic
correlation:
2
∑

min

{Qt ,Wt ,bt }|2
t=1

∥Kt Qt Wt + 1bTt − Yt ∥2F + ρ∥W ∥2,1

t=1

s.t. Qt QTt = I, t = 1, 2

(4)

where t = 1 indicates the text classiﬁcation task and t = 2
indicates the image classiﬁcation task. {Wt , bt } are classiﬁcation regression parameters. Qt is the embedding matrix of
the t-th task. The cross-media consistency is preserved by
the ℓ2,1 regulation term ∥W ∥2,1 , where W = [W1 , W2 ] and
∑
∥W ∥2,1 = dj=1 ∥wj ∥2 with wj representing the j-th row of
W.
Combining the three objectives in Eq.(2), (3) and (4), the
ﬁnal optimization problem for MTTL can be written as:

4.1 The MTTL Model
Given the unlabeled microblog data M and the labeled
external knowledge E, we target at jointly handling both
the textual and visual classiﬁcation tasks in microblogs. In
each task, the external knowledge and microblog data need
to be transferred to the same embedded space.
We ﬁrst delineate two desirable properties for the transfer
learning task, namely: 1) maximal alignment of distribution
between the source and target domain data in the embedded
space; and 2) preservation of the local geometry.
1) Objective 1: Distribution Matching. We employ transfer component analysis (TCA) [21] for transfer learning.
Speciﬁcally, let the kernel matrices deﬁned on the microblog
domain, external knowledge domain, and cross-domain data
in the embedded space be KM,M , KE,E and KM,E , respectively, and the kernel matrix deﬁned on all the data be
[
]
KM,M KM,E
K=
∈ R(|M |+|E|)×(|M |+|E|) ,
(1)
KE,M KE,E
1

(2)

min

{Qt ,Wt ,bt }|2
t=1

2
∑
T
2
(tr(QT
t At Qt )+µ∥Kt Qt Wt +1bt −Yt ∥F )
t=1

+ρ∥W ∥2,1 ,

s.t. Qt QT
t = I, t = 1, 2

(5)

where At = Kt Lt Kt + δKt Lt Kt , and δ, µ and ρ are the
balance parameters.

4.2

Optimization

The problem in Eq.(5) can be reformulated as
min

2
∑
T
2
(tr(QT
t At Qt ) + µ∥Kt Qt Wt + 1bt − Yt ∥F )

{Qt ,Wt ,bt }|2
t=1 t=1

+ ρtr(W T SW )

http://www.sina.com.cn/

534

(6)

where S is a diagonal matrix with Sjj = 2∥w1j ∥2 . We design
the following iteration strategy which includes two steps:
Step 1 : Keep Qt ﬁxed, and update Wt and bt . By setting
the derivative of Eq.(6) w.r.t. bt to zero, we obtain
1
(Yt − Kt Qt Wt )T 1,
bt =
nt

a2 = (u, u ', m2 )

u'

γ −1 T
S) Ut Vt
µ

f E (u, m3 )
f I (u, u ', C (m1 ))

(8)

z1 = 1
a1 = (u, u ', m1 )

z3 = 3

a3 = (u, u ', m3 )

Figure 2: Graphical representation of the diﬀusiontargeted inﬂuence model. Three example diﬀusion
actions of user u from the friend u′ are shown as
examples.

mintr(QTt At Qt ) + µ∥Kt Qt Wt + 1bTt − Yt ∥2F
Qt

(9)

This optimization problem can be eﬃciently solved by the
algorithm introduced in [25].
The whole algorithm is summarized in Algorithm 1.

• Interest-oriented Inﬂuence: A user is likely to repost a microblog if the content is interesting to him.
Consider a friend u′ of u. If u′ shares similar interests
with u, or if u′ is an expert for the interest category
that u is interested in, then the friend u′ is likely to
have high inﬂuence on the user u.

Algorithm 1 Muti-Task-Transfer-Learning (MTTL)
Input:
Microblog data M , external knowledge data E and the
label matrix for external data Y .
Output:
Transformation matrix Qt and regression parameters Wt
and bt , for both text task (t=1) and image task (t=2).
1: Construct the kernel matrix K based on Eq.(1), the
MMD matrix L, Laplacian matrix L.
2: for t = 1 to 2 do
3:
Initialize Qt , Wt and bt ;
4: end for
5: repeat
6:
Update the matrix S;
7:
for t = 1 to 2 do
8:
Update bt according to Eq.(7);
9:
Update Wt according to Eq.(8);
10:
Solve Eq.(9) to update Qt ;
11:
end for
12: until convergence

• Social-oriented Inﬂuence: In this case, the repost
action is based purely on the needs of social interaction. In other words, the action is triggered by the
social inﬂuence exerted by his friend, instead of the
information contained in this microblog.
• Epidemic-oriented Inﬂuence: If a microblog is epidemic (e.g., breaking news), it will be very probable to
result in a repost action. In this situation, the inﬂuence is highly related to the epidemic-degree of this
information rather than the content or the friend who
post it.
Formally, let FI (u, u′ , c) denote the interest-oriented inﬂuence receive by user u from his friend u′ related to the
interest category c; FS (u, u′ ) the social-oriented inﬂuence
receives by u from u′ ; and FE (u, m) the epidemic-oriented
inﬂuence of the microblog m. A user may receive diﬀerent degree of inﬂuences from diﬀerent friends according to
either the closeness of their social connection, the friend’s
authority in the corresponding interest category, or simply
the epidemic-degree of the disseminated information. In the
following subsection, we elaborate a diﬀusion-targeted inﬂuence model, which eﬃciently diﬀerentiates and quantiﬁes
diﬀerent types of inﬂuences.

The learned transformation matrix and regression parameters could be adopted to classify new microblogs. By denoting km as the kernel vector of microblog m, the classiﬁcation
output of m is lt (m) = WtT QTt ktm + bt , t = 1, 2, then the
corresponding interest category of m, C(m), is the category
with largest classiﬁcation output in either textual or visual
domain. The interest proﬁle of the user u is then deﬁned as:
I(u)c =

m3

u

m1

where Ut = Ht Kt Qt , Vt = Ht Yt , and Ht = I − n1t 11T is the
centering matrix.
Step 2 : We update Qt by ﬁxing Wt and bt . With Wt and
bt ﬁxed, the objective function in Eq.(6) is reduced to

s.t. Qt QTt = I, t = 1, 2.

z2 = 2

(7)

where nt is the number of training samples in the t-th task.
Then substituting the derived bt into Eq.(6) and setting the
derivative w.r.t. Wt to zero, we get
Wt = (UtT Ut +

f S (u, u ')

5.1

Diffusion-targeted Influence Model

Consider a diﬀusion action a = (u, u′ , m) ∈ A. As aforementioned, this action could be triggered by three types of
inﬂuences. We introduce a latent variable z, which indicates
the source of the inﬂuence that leads to the diﬀusion action
a. More precisely, z = k, k ∈ {1, 2, 3} indicates that a is
caused by the k-th type of inﬂuence. In order to infer the
latent inﬂuence-indicator z for each diﬀusion action, as well
as to quantify the degree of FI , FS and FE , we propose the

|{m ∈ Mu |C(m) = c}|
, c = 1, 2, ..., |C|.
|Mu |

5. DIFFUSION-TARGETED INFLUENCE
LEARNING
Generally, the reposting action of a user may be aﬀected
by the following three types of inﬂuences:

535

where µ is the passed message; f ′ ∼ z\f represents that f ′ is
a neighbor node of the variable z on the factor graph except
factor f ; z ′ ∼ f \z indicates that z ′ is a neighbor node of the
factor f on the factor graph except variable z, and ∼ {z}
represents all the variables in Z except z.
After the learning process, the interest-oriented inﬂuence
FI (u, u′ , c), social-oriented inﬂuence FS (u, u′ ) and epidemicoriented inﬂuence FE (u, m) could be achieved by calculating
fI (u, u′ , c), fS (u, u′ ) and fE (u, m), respectively.

Diﬀusion-targeted Inﬂuence Model. Figure 2 shows an illustrative example of three diﬀusion actions between user u
and his friend u′ . Our model comprises the following three
feature functions which models the three types of inﬂuences
FI , FS and FE , respectively.
• Interest-related feature function fI (u, u′ , c), which
contains two factors. The ﬁrst factor is deﬁned as
the ratio between the number of microblogs that u reposted from u′ in the interest category c and the total
number of microblogs that belongs to interest category c posted by u′ . The second factor refers to the
weight of the interest category c in the interest proﬁle of user u′ . Intuitively, a higher weight represents
a higher authority level in the corresponding interest
category, which should cause larger inﬂuence. This
function is deﬁned as follows:
fI (u, u′ , c) =

6.

After learning the inﬂuence between the users and their
friends, our next target is to utilize these inﬂuences for microblog diﬀusion analysis and prediction. Let h ∈ {−1, 1}
indicates whether an action (u, u′ , m) is actually performed,
i.e., whether user u reposts the microblog m of his friend
u′ . We maximize the conditional probability of user actions given the input social network G and history action
set A, i.e., Pθ (H|G, A). More precisely, for each action in
A, we construct a training instance. We target at ﬁnding
the optimal parameter θ∗ to maximize the joint conditional
probability for all the actions.
Note that the diﬀusion action set A used for training in
Section 5 contains only those performed actions. As the
task here is to predict whether a user will perform a diﬀusion action, we also include unperformed diﬀusion actions as
negative samples into the training set A. Suppose u′ post
a microblog m at time tu′ , and u does not repost this microblog. Then we add the unperformed actions (u, u′ , m)
into A if only tu − tu′ < ∆, where ∆ is the threshold time
interval, and tu is the activation time stamp of the user u,
i.e., u performs certain activity at the time. The underlying reasons for choosing these unperformed actions is as
follows. If the interval between the posting time of a microblog post and the activation time is too large, then unperformed diﬀusion action may probably because the user
misses the corresponding microblog. On the contrary, if the
microblog is presented within the time duration (tu − ∆, tu )
and this user does not repost this microblog, then we have
good reason to believe that the unperformed diﬀusion action is actually caused by the lack of inﬂuence, and thus is
suitable to be included to the training set.
In order to maximize the probability P (H|G, A), we factorize the global probability as the product of several local
factor functions. We adopt the inﬂuences learned in the
previous stage as the input factors, and learn the weighting
parameters. Integrating all the factors together, we obtain
the following log-likelihood objective function:

|{a = (u, u′ , m)|C(m) = c ∧ za = 1}|
×I(u′ )c .
|{m ∈ Mu′ |C(m) = c}|

• Social-related feature function fS (u, u′ ), which is
deﬁned as the ratio between the number of actions that
u diﬀuses a microblog from u′ , over the total number
of microblogs belonging to u′ :
fS (u, u′ ) =

|{a = (u, u′ , ·)|za = 2}|
.
|Mu′ |

• Epidemic-related feature function fE (m), which
is deﬁned as the ratio between the number of friends
who repost microblog m, over the total number of
friends of user u:
fE (m) =

|{a = (·, u′ , m)|u′ ∈ (N )(u)}|
,
|N (u)|

where N (u) denotes the friends of user u.
Typically, the target of this inﬂuence model is to best ﬁt
(reconstruct) the observation data, which is usually achieved
by maximizing the likelihood function. With these feature
functions, we deﬁne the objective likelihood function as:
P (Z) =

1
R
×

∏

fI (u, u′ , C(m))

(u,u′ ,m)∈A,z=1

∏

∏

fS (u, u′ ) ×

(u,u′ ,·)∈A,z=2

(10)
fE (m)

(·,·,m)∈A,z=3

where Z = {z1 , z2 , ..., z|A| } represents the hidden variables
corresponding to all the actions in A, and R is a normalization factor. Figure 2 describes an illustration of this factorization. Each feature function (denoted in black box) is
connected to the corresponding variables.

5.2 Model Learning

O(θ) = log Pθ (H|G, A)

∑
∑

=

We intend to ﬁnd the optimal parameter conﬁguration
that maximizes the objective function in Eq.(10). We propose to use the sum-product algorithm [17] to infer the latent
variables. Two update rules are deﬁned, one for message
sent from variable node to factor node:
∏
µz→f (z) =
µf ′ →z (z) ,

i,j,d

+

f ′ ∼z\f

+


αijc g(hk , FI (ui , uj , c))

ak =(ui ,uj ,m)∈A∧C(m)=c

∑
ij

and one for message sent from factor node to variable node:


∑
∏
′
f (Z)
µf →z (z) =
µz′ →f (z ) ,
∼{z}

MICROBLOG DIFFUSION MODELING
AND PREDICTION

∑
i







∑

βij g(hk , FS (ui , uj ))

ak =(ui ,uj ,·)∈A

∑





γi g(hk , FE (ui , m)) − log R

ak =(ui ,·,m)∈A

(11)

z ′ ∼f \z

536

where g(hk , F (·)) acts as the feature functions to link the
factors to the corresponding variables, which is deﬁned as
{
F (·) , if hk = 1,
g(hk , F (·)) =
(12)
1 − F (·) , if hk = 0.

in Eq.(12) as:
g(hk , F (·)) =

{

λl F (·) , if hk = 1
1 − λl F (·) , if hk = 0

where 0 < λ < 1 is the decay parameter and l is the length
of the diﬀusion path when information reaches the predicted
user. This new feature function penalizes long pathes.
With the above prediction process, we are able to predict
the future hotness of a microblog in terms of its estimated
reposting number, as well as the users who will participate
in the diﬀusion process.

α, β and γ are the factor weights, and R is a normalization factor which ensures that the distribution is normalized
with the sum of the probabilities equals to 1. With the
function deﬁned in Eq.(11), the objective of the training
process is to estimate an optimial parameter conﬁguration
of θ∗ = {α∗ , β ∗ , γ ∗ } from the training set A that maximizes
O(θ). The learning process contains two steps: 1) compute the gradient for each parameter; and 2) optimize all
parameters with gradient descents. Speciﬁcally, we ﬁrst approximate the marginal distribution Pθ (hk |G, A). With the
marginal probabilities, the gradient of a parameter can be
obtained by summing over all the corresponding factor functions. Next, we use a gradient descent method to solve the
above problem.
Diﬀusion Prediction. Given a new microblog mnew ,
and the action set Anew consisting of all existing diﬀusion
actions related to mnew , the learned inﬂuences and weighting parameters can be used to predict the future participants
in disseminating this new microblog. In practice, it is meaningless to do prediction for every new microblog since only a
small portion will ﬁnally break out according to the powerlaw of information cascades [9]. Therefore, we devise certain
criteria for starting the monitoring and prediction, e.g., we
delay the prediction until the number of existing diﬀusion
actions |Anew | exceeds some minimum number Ndelay .
The diﬀusion of microblogs through the social network ﬁts
the Independent Cascade (IC) model [16]. IC starts with
an initial set of active nodes, and the process unfolds in
discrete steps according to the following rule: when a node
becomes active, it is given a single chance to activate each
currently inactive neighbor. If it succeeds, the corresponding
neighbor will become active and follow this rule to activate
more neighbors. But whether or not this node succeeds,
it cannot make further attempts to active its neighbors in
the subsequent rounds. This process runs until no more
activations are possible. Following the IC model, for each
active user (user that has already performed the diﬀusion
action) u and each of his friend u′ , we predict whether the
action anew = (u, u′ , mnew ) will be performed by predicting
the corresponding indicator h according to:

7.

EXPERIMENTS

In this section, we present the experimental results for
evaluating our proposed approach.

7.1

Dataset and Experimental Settings

We conduct the experiments on a real-world dataset collected from Tencent Weibo2 , one of the largest microblogging platforms in China. We crawled a network with around
2.62 million users and all the microblogs posted by them
from July 1st to August 31th in 2013, which gives rise to
a total number of 192.3 million microblogs. We could observe a very high percentage of diﬀusion actions in the collected dataset, in which 63% of these microblogs are reposted
from friends. The statistics of this dataset is shown in Table
1. In this experiment we focus on the original microblogs,
and predict how they will be diﬀused through this social
network. In order to estimate the diﬀusion lifetime of a
microblog, we calculated the average duration between the
time a microblog is originally posted to the time that the
repost number of this microblog reaches 90% of the total
repost number. The average time is less than 4 days, which
means most of the diﬀusion actions are performed within 4
days after a microblog is posted. According to this observation, we divided our dataset into two parts, the training set
with microblogs posted in the ﬁrst 50 days, and the testing
set with microblogs posted in the following 8 days, while
we exclude the original microblogs posted in the last 4 days
from the testing set, as the diﬀusion process of these microblogs may not have been ﬁnished and could not provide
a valid groundtruth for our evaluation. For the external
knowledge required in the MTTL classiﬁcation model, we
crawled 0.65 million articles (with 0.83 million images) from
20 categories3 from Sina.com4 .
Before the evaluation, we ﬁrst pre-processed the texts
and images. Texts were ﬁrstly segmented, then stop words,
low-frequency words, mentions and urls were removed from
the text vocabulary. For visual feature extraction, scaleinvariant feature transform (SIFT) descriptors were ﬁrst extracted from each image. We then trained a code book of
1,000 visual words. With the trained codebook, each descriptor was quantized into a visual word. Each image was
further represented as a 1,000-D bag-of-visual-words feature.
The parameters in MTTL were empiricially set as follows:
σ = 1, ρ = 0.1, µ = 0.1, δ = 0.01. The threshold time
interval ∆ is set to 10 minutes.
One important parameter which will inﬂuence the experiment performance is the decay factor λ, which reﬂects the

h∗ = arg max log P (h|G, A)
h
(
= arg max αijC(mnew ) g(h, FI (ui , uj , C(mnew )))
h

)
+ βij g(h, FS (ui , uj )) + γi g(h, FE (ui , mnew )) .
The above prediction process simply assumes that the delay in receiving the information will not aﬀect the diﬀusion
action. In other words, no matter how long the message is
received after the original posting time, the user will make
the same diﬀusion decision. However, this assumption will
not hold under the microblogging circumstance, where people have more intention in reposting fresh microblogs, and
the outbreak of a microblog usually happens during a relatively short time period. To handle this problem, we propose
to incorporate a time decay factor to the feature functions

2

http://t.qq.com/
The 20 categories are listed in the Appendix.
4
http://www.sina.com.cn/
3

537

0.9

Table 1: Statistics of our dataset.
#Microblogs #Original #Repost #Image #Days
192.3m

71.5m

120.9m

129.2m

62

Training set

154.7m

60.3m

94.5m

103.9m

50

Testing set

25.3m

9.4m

15.9m

9.7m

8

F1

0.85
Whole dataset

Ndelay=10
Ndelay
Ndelay
Ndelay=50
Ndelay=100
Ndelay
Ndelay=150
Ndelay
Ndelay
Ndelay=200

0.8

0.75
108

63.9m

107

0.7

6.6m

0.8 0.82 0.84 0.86 0.88 0.9 0.92 0.94 0.96 0.98 1

961k

106

λ

105
32.6k

104

Figure 4: Inﬂuence of λ, in terms of F1 value of
predicting trending microblogs.

7.9k
1325

103
792

• PMP [15]: This method is able to predict popular messages in Twitter. Similarly, several features are deﬁned
and a multi-class classiﬁcation method is adopted to
predict the volume of retweets.

102

0~10

10~50 50~100 100~500 500~1k 1k~2k

>2k

Figure 3: The distribution of repost number for all
microblogs in our dataset.

Furthermore, we also design two comparing methods by
replacing the diﬀusion-targeted inﬂuence model of our framework with other inﬂuence learning model, and build the prediction model based the new types of inﬂuence. Speciﬁcally,
the following inﬂuence models are adopted:

simulation for time delay, i.e., the time duration between the
initial posting of a microblog and the time that it reaches
the user. Figure 4 shows the inﬂuence of λ in aﬀecting the
performance of predicting trending microblogs in terms of
F1 value (refer to the following subsection for experiment
details). As we can see, a large λ fails to provide enough
decay ability, and a small λ causes too many potential diﬀusion actions to be rejected. Therefore, we adopt the optimal
value of 0.95 for λ.

• TFG [24]: The topical factor graph model targets at
quantifying the topic-level social inﬂuence between each
pair of users.
• IPL [11]: The inﬂuence probabilities learning method
adopts a probabilistic approached to assign each pair
of users an inﬂuence probability.

7.2 Predicting Trending Microblogs

The delaying number Ndelay (refer to Section 6) is set
in the range of {10, 50, 100, 150, 200}. Precision, recall and
F1 score are used as the evaluation measures. The results
for our proposed TMP and the comparing methods are presented in Figure 5. From this ﬁgure, we have the following observations. 1) In terms of F1 measurement, TMP
signiﬁcantly outperforms the comparing methods. Larger
delaying number will beneﬁt the prediction performance as
more information about the diﬀusion process is available.
2) OSLOR achieves slightly better performance on precision
as compared to TMP, however, the recall performance of
OSLOR is far worse than that of TMP. OSLOR is designed
to only monitor the most inﬂuential users, who are probable
to trigger many reposting actions while inevitably less likely
to participate in many outbreaking diﬀusion processes. In
contrary, instead of the global inﬂuential measurement, our
method models the local inﬂuences for each user and takes
more factors into consideration in the prediction procedure,
leading to more comprehensive results. 3) In general, the
inﬂuence based methods, i.e., TMP, TFG and IPL, perform
better than feature based methods, i.e., ETL and PMP. This
is because those simple features deﬁned on the small number
of early participating users do not possess suﬃcient prediction ability. 4) By comparing TMP with the other two inﬂuence based methods, i.e., TFG and IPL, the performance

Our ﬁrst task is to predict whether a new coming microblog will become trending in the near future. Figure 3
shows the power-law distribution of the repost number in
our dataset. We empirically deﬁne the trending microblog
as one with repost number exceeding 1,000. This results in
168 trending microblogs in the testing set. We also randomly
selected 832 non-trending microblogs with more than 200
repost number from the testing set. The prediction performance is measured for these 1,000 microblogs. We repeated
the random selection 20 times, and the average result is reported. We compare our approach (denoted as TMP) to the
following state-of-the-art methods:
• OSLOR [9]: The orthogonal sparse logistic regression
model is a data-driven approach for cascading outbreak prediction. This method selects a set of nodes
as sensors, and predicts the outbreaks based on the
cascading behaviors of these sensors.
• ETL [7]: In the hot emerging topic learner, features
are proposed for outbreak training and prediction. Although this method was originally used for emerging
topic prediction, the proposed features and learning
methods can also be applied to our task.

538

1
ETL
IPL

0.9

0.8

0.7

TMP
PMP

OSLOR
TFG

ETL
IPL

0.8

50

100

150

200

ETL
IPL

0.8

0.6

0.6
10

OSLOR
TFG

0.7

0.7

0.6

TMP
PMP

0.9

F1

OSLOR
TFG

Recall

Precision

0.9

1

1
TMP
PMP

10

50

Ndelay

100

150

10

200

50

100

150

200

Ndelay

Ndelay

Figure 5: The results of predicting trending microblogs.
0.9
0.8

TMP

SVM

NTT-FGM

TMP

0.8

0.7

SVM

NTT-FGM

0.6
0.5

0.5

0.4

0.4

0.4
0.3

0.3
10

50

100

150

200

# Early Participants

NTT-FGM

0.6

0.5

0.3

SVM

0.7

F1

0.6

TMP

0.8

0.7

Recall

Precision

0.9

0.9

10

50

100

150

200

10

# Early Participants

50

100

150

200

# Early Participants

Figure 6: The results of predicting future diﬀusion participants.
improvement demonstrates the eﬀectiveness of our proposed
inﬂuence model. While our proposed TMP characterizes the
network in a more comprehensive way, the other two inﬂuence models only model either the interest-related inﬂuence
or pair-wise inﬂuence among users.

method also shows more stable prediction performance over
diﬀerent early participant numbers. The underlying reason
is that our training procedure does not depend on these early
diﬀusion activities. On the other hand, the two comparing
methods need to train a prediction model for each microblog
diﬀusion process, and the performance heavily relies on the
number of training samples, i.e., the early participants.

7.3 Predicting Diffusion Participants
The second task targets at predicting which users will participate in propagating a particular microblog. We compare
our proposed TMP with the
Ȝ following methods:

7.4

Component Contribution Analysis

In this part, we evaluate the eﬀects of the three types of inﬂuences deﬁned in our framework, namely, interest-oriented
inﬂuence, social-oriented inﬂuence and epidemic-oriented inﬂuence; while the interest-oriented inﬂuence is closely related to the result of user interest proﬁle learning. Specifically, the following cases are evaluated: 1) TMP-P, which
replaces our interest proﬁle learning component with LDA
to generate topics and infer user interest proﬁle. 2) TMPI,TMP-S and TMP-E, which removes the interest-oriented
inﬂuence, social-oriented inﬂuence and epidemic-oriented inﬂuence from our framework, respectively. The results of
predicting trending microblogs in terms of F1 measurement
are shown in Figure 7. From the ﬁgure, we can see that
the performance drops signiﬁcantly by removing any of the
proposed components. Specially, epidemic-oriented inﬂuence has the strongest correlation with the diﬀusion process of trending microblogs, hence removing it will decrease
the prediction performance the most. Besides, by replacing
our proposed interest proﬁle learning component with other
proﬁle learning method, the performance decreases, which
demonstrates the eﬀectiveness of our model.

• SVM: It uses the associated interest proﬁle of users as
well as the states of their
Ȝ neighbors to train a microblog
classiﬁer, which is then employed to predict the user
actions.
• NTT-FGM [22]: The noise tolerant time-varying factor
graph approach simultaneously models social network
structure, user attributes and user action history for
predicting the users’ future actions.
Both of the two comparing methods need to train a prediction model, which requires a suﬃciently large number
of positive training samples to achieve satisfactory performance. We randomly select 1,000 microblogs whose ﬁnal
repost numbers exceed 200, and we want to predict all the
diﬀusion participants when the retweet number of this microblog (denoted as # early participants) reaches 10, 50,
100, 150 and 200, respectively. The average prediction results for these 1,000 microblogs are presented in Figure 6.
The results demonstrate the superiority of our proposed
method under all evaluation measurements. In addition, our

539

0.90

[8] T.-S. Chua, H. Luan, M. Sun, and S. Yang. Next:
Nus-tsinghua center for extreme search of user-generated
content. IEEE MultiMedia, 19(3):81–87, 2012.
[9] P. Cui, S. Jin, L. Yu, F. Wang, W. Zhu, and S. Yang.
Cascading outbreak prediction in networks: a data-driven
approach. In SIGKDD, pages 901–909, 2013.
[10] J. Goldenberg, B. Libai, and E. Muller. Talk of the
network: A complex systems look at the underlying process
of word-of-mouth. Marketing letters, 12(3):211–223, 2001.
[11] A. Goyal, F. Bonchi, and L. V. Lakshmanan. Learning
inﬂuence probabilities in social networks. In WSDM, pages
241–250, 2010.
[12] A. Goyal, F. Bonchi, and L. V. Lakshmanan. A data-based
approach to social inﬂuence maximization. PVLDB,
5(1):73–84, 2011.
[13] D. Gruhl, R. Guha, D. Liben-Nowell, and A. Tomkins.
Information diﬀusion through blogspace. In WWW, pages
491–501, 2004.
[14] A. Guille, H. Hacid, C. Favre, and D. A. Zighed.
Information diﬀusion in online social networks: A survey.
SIGMOD Record, 42(2):17, 2013.
[15] L. Hong, O. Dan, and B. D. Davison. Predicting popular
messages in twitter. In WWW, pages 57–58, 2011.
[16] D. Kempe, J. Kleinberg, and É. Tardos. Maximizing the
spread of inﬂuence through a social network. In SIGKDD,
pages 137–146, 2003.
[17] F. R. Kschischang, B. J. Frey, and H.-A. Loeliger. Factor
graphs and the sum-product algorithm. TIT,
47(2):498–519, 2001.
[18] R. Kumar, J. Novak, P. Raghavan, and A. Tomkins. On the
bursty evolution of blogspace. WWW, 8(2):159–178, 2005.
[19] T. La Fond and J. Neville. Randomization tests for
distinguishing social inﬂuence and homophily eﬀects. In
WWW, pages 601–610, 2010.
[20] J. Leskovec, A. Krause, C. Guestrin, C. Faloutsos,
J. VanBriesen, and N. Glance. Cost-eﬀective outbreak
detection in networks. In SIGKDD, pages 420–429, 2007.
[21] S. J. Pan, I. W. Tsang, J. T. Kwok, and Q. Yang. Domain
adaptation via transfer component analysis. TNN,
22(2):199–210, 2011.
[22] C. Tan, J. Tang, J. Sun, Q. Lin, and F. Wang. Social action
tracking via noise tolerant time-varying factor graphs. In
SIGKDD, pages 1049–1058, 2010.
[23] J. Tang, W. Sen, and J. Sun. Conﬂuence: conformity
inﬂuence in large social networks. In SIGKDD, pages
347–355, 2013.
[24] J. Tang, J. Sun, C. Wang, and Z. Yang. Social inﬂuence
analysis in large-scale networks. In SIGKDD, pages
807–816, 2009.
[25] Z. Wen and W. Yin. A feasible method for optimization
with orthogonality constraints. Mathematical
Programming, pages 1–38, 2013.
[26] J. Weng, E.-P. Lim, J. Jiang, and Q. He. Twitterrank:
ﬁnding topic-sensitive inﬂuential twitterers. In WSDM,
pages 261–270, 2010.
[27] R. Xiang, J. Neville, and M. Rogati. Modeling relationship
strength in online social networks. In WWW, pages
981–990, 2010.
[28] Y. Yang, Y. Yang, Z. Huang, H. T. Shen, and F. Nie. Tag
localization with spatial correlations and joint group
sparsity. In CVPR, pages 881–888, 2011.
[29] Y. Yang, Y. Yang, and H. T. Shen. Eﬀective transfer
tagging from image to video. TOMCCAP, 9(2):14, 2013.

F1

0.85

0.80
TMP
TMP-S

TMP-R
TMP-E

TMP-I

0.75
1

10

50

100

150

200

Ndelay
Figure 7: Eﬀects of diﬀerent components, in terms
of F1 value of predicting trending microblogs.

8. CONCLUSION
In this work, we presented a novel approach for predicting the trending microblogs and the subsequent diﬀusion
actions in microblogging network. Speciﬁcally, we deﬁned
three types of inﬂuence, namely, interest-oriented inﬂuence,
social-oriented inﬂuence, and epidemic-oriented inﬂuence,
which jointly determine the user diﬀusion action. We devised a multi-task transfer learning model for identifying the
interest categories of microblogs. A diﬀusion-targeted inﬂuence model was proposed for quantifying diﬀerent types of
inﬂuences. We formulated the diﬀusion prediction as a factorization of the user intention of reposting a microblog. Extensive experiments have been conducted on a real-world microblogging dataset to show the superiority of our proposed
approach as compared to the state-of-the-art methods.

9. ACKNOWLEDGMENTS
This research is supported by the Singapore National Research Foundation under its International Research Centre
@ Singapore Funding Initiative and administered by the
IDM Programme Oﬃce.

10. REFERENCES
[1] A. Anagnostopoulos, R. Kumar, and M. Mahdian.
Inﬂuence and correlation in social networks. In SIGKDD,
pages 7–15, 2008.
[2] E. Bakshy, J. M. Hofman, W. A. Mason, and D. J. Watts.
Everyone’s an inﬂuencer: quantifying inﬂuence on twitter.
In WSDM, pages 65–74, 2011.
[3] J. Bian, Y. Yang, and T.-S. Chua. Multimedia
summarization for trending topics in microblogs. In CIKM,
pages 1807–1812, 2013.
[4] M. Cha, H. Haddadi, F. Benevenuto, and P. K. Gummadi.
Measuring user inﬂuence in twitter: The million follower
fallacy. ICWSM, 10:10–17, 2010.
[5] W. Chen, C. Wang, and Y. Wang. Scalable inﬂuence
maximization for prevalent viral marketing in large-scale
social networks. In SIGKDD, pages 1029–1038, 2010.
[6] W. Chen, Y. Wang, and S. Yang. Eﬃcient inﬂuence
maximization in social networks. In SIGKDD, pages
199–208, 2009.
[7] Y. Chen, H. Amiri, Z. Li, and T.-S. Chua. Emerging topic
detection for organizations from microblogs. In SIGIR,
pages 43–52, 2013.

APPENDIX
The 20 interest categories adopted in this work are:
Military, Society, Stocks, Sports, Constellation, Automobile, Variety, History, Fashion, Health, Entertainment, Travel, Apps,
Phone, Technology, Household, Education, Amusement, Movie,
Music.

540

