A Revisit to Social Network-Based Recommender Systems

∗

Hui Li, Dingming Wu, Nikos Mamoulis
Department of Computer Science
The University of Hong Kong, Hong Kong
{hli2,dmwu,nikos}@cs.hku.hk

ABSTRACT

usually turn to our family, friends and acquaintances for
suggestions when we want to make a decision or a purchase.
Also, we tend to affiliate and establish relationships with
people who share the same interests with us. Since social
influence may affect users’ acceptance of recommendations,
researchers have proposed to mine valuable contextual information (e.g., time, location, mood and relationship) from
OSNs and take social influence into consideration in the recommendation process, to supplement the traditional data
(i.e., user ratings). These social-based recommendation approaches are briefly introduced in Section 2.2.
In this paper, we improve the state-of-art social networkbased recommender system (SNRS) [3]. Specifically, we (i)
classify the correlations between pairs of users’ ratings to
improve the recommendation accuracy and (ii) make SNRS
robust against sparse data. Our experiments on real data
confirm the effectiveness of our improvements over the original SNRS and a collaborative filtering approach.

With the rapid expansion of online social networks, social
network-based recommendation has become a meaningful
and effective way of suggesting new items or activities to
users. In this paper, we propose two methods to improve
the performance of the state-of-art social network-based recommender system (SNRS), which is based on a probabilistic
model. Our first method classifies the correlations between
pairs of users’ ratings. The other is making the system
robust to sparse data, i.e., few immediate friends having
few common ratings with the target user. Our experimental study demonstrates that our techniques significantly improve the accuracy of SNRS.

Categories and Subject Descriptors
H.3.3 [Information Search and Retrieval]: Information
Filtering; J.4 [Computer Applications]: Social and Behavioral Sciences

2.

BACKGROUND

Keywords
2.1

Recommender System, Social Network, Social Influence

1.

INTRODUCTION

Recommender systems have become an important and independent research area since the mid-1990s [1], achieving
great success in e-commerce. Many famous online vendors
such as Amazon and Netflix leverage recommender systems
to advertise products to customers. These systems also serve
as effective tools to help users in finding useful information
and overcoming the problem of information overload.
Recently, many online social networks (OSNs), such as
Facebook and LinkedIn, have emerged and attracted a vast
number of users. Social networks contain enormous information which is still growing rapidly as more and more users
join them. Besides, it is a common phenomenon that we
∗

Social Network Based Recommendation

The state-of-the-art SNRS [3] utilizes the information in
social networks to improve the performance of traditional
recommender systems. The idea behind SNRS is to use a
simplified homogeneous social network as a Bayesian network. The probability distribution of the target user U ’s
rating on the target item I is calculated as:
1
P r(RU I = k) = P r(RU J = k|aJ = aI ) × P r(RI = k)
Z
Y
1
×
HU V (RU I − RV I ), (1)
ZV
V ∈N (U )

where aI and aJ are the attribute values for item I and
item J in a m dimensional attribute space A. For example,
aI = {Italian, Low} are the attribute values for restaurant
I in a restaurant rating system with A = {Cuisine, P rice}.
P r(RU J = k|aJ = aI ) is U ’s preference for items similar
to I, i.e., the conditional probability that the target user
U will give a rating k to a item J with the same attribute
values aI as item I. P r(RI = k) is the general acceptance
of the target item I, i.e., the prior probability that the target item I receives a rating value k. HU V is a histogram
recording the differences in ratings between users U and V .
For example HU V (−1) is the number of items J such that
RU J = RV J − 1. N (U ) denotes the immediate friends of
U ; influences of all users in N (U ) to U can be modeled as
a product of the normalized histograms of individual friend

Work supported by grant 715413E from Hong Kong RGC.

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are not
made or distributed for profit or commercial advantage and that copies bear
this notice and the full citation on the first page. Copyrights for components
of this work owned by others than ACM must be honored. Abstracting with
credit is permitted. To copy otherwise, or republish, to post on servers or to
redistribute to lists, requires prior specific permission and/or a fee. Request
permissions from permissions@acm.org.
SIGIR’14, July 06–11 2014, Gold Coast, QLD, Australia
Copyright 2014 ACM 978-1-4503-2257-7/14/07 ...$15.00.

1239

Q
pairs: V ∈N (U ) Z1V HU V (RU I − RV I ), where ZV is the normalizing constant for the histogram of each immediate friend
pair. Z serves as the normalizing constant to guarantee
P
k (P r(RU I = k) = 1). The estimated value of RU I is the
expectation of the distribution P r(RU I = k).
The drawback of Equation 1 is that it cannot be used
if the target user has no immediate friends or the immediate friends have no ratings on target item. For this reason,
SNRS uses an iterative classification method [10] to utilize
friend-of-friends inference, based on the fact that estimating
the class of an entity often depends on the class estimations of its neighbors. It predicts the user U ’s rating on
each target item on a limited user set N 0 (U ) = U ∪ N (U ).
Each iteration processes all users of N 0 (U ) at a random permutation. A user is skipped if lacking immediate friends’
information. The process stops after M iterations or when
no more updates happen in the current iteration.
Table 1: Ratings
Item
I1
I2
I3
I4
I5
I6
I7

Price
High
High
Low
High
Low
Low
Low

RUA
5
4
3
4
4
?
?

E
D

F
G

A

Figure 1: Example Social Network

2.2

Item
I1
I2
I3
I4
I5
I6
I7

∆RUA
1
0
-1
0
0
?
?

∆RUB
0
-1
-1
0
1
-1
1

3.

Example 1. Figure 1 and Table 1 show an example social network and the items rated by users UA and UB . Suppose that we are targeting user UA ’s rating on item I6 . The
limited user set N 0 (UA ) contains users UA , UB , and UC ,
since users UB and UC are UA ’s immediate friends in the
social network. Consider a random order (UA , UC , UB ) of
N 0 (UA ) in the first iteration. User UA is firstly considered.
Assume that only UB has a rating on I6 . According to Table 1, the histogram of rating differences between UA and UB
are HUA UB (0)
= 2 and HUA UB (−1) = 1.
Q = 2, HUA UB (1)
1
Therefore,
V ∈N (UA ) = ZU HUA UB (RUA I6 − RUB I6 ) =
B
0, 0.2, 0.4,
P0.4, 0 when RUA I6 = 1, 2, 3, 4, 5, RUB I6 = 3 and
ZUB =
HUA UB = 5. Hence, there are three possible ratings 2, 3 and 4 for RUA I6 . Then, user preference can be
calculated using:
P r(RU

AJ

= k|aJ = {Low}) = P r(RU
=

|I(RU

A

= k) × P r(aJ = {Low}|RU

= k)| + 1

A
|I(UA )| + n

×

|I(aJ = {Low}, RU
|I(RU

A

A

3.1

Classifying User Correlations

The correlations between the target user and his/her immediate friends learned from their common rated items are
based on the assumption that each pair of friends behave
consistently on reviewing the items. However, disagreement
exists among friends in practice. We propose to use a Bipolar distribution to classify correlations between friends into
two categories: LIKE and DISLIKE, such that conflict ratings (the target user likes item I, while one immediate friend
dislikes it, or vice versa) can be ignored when doing recommendation. In addition, each user may have a personal rating preference. For instance, given a 5 scale rating system,
a strict user may give ratings ranging from 1 to 3, while a
lenient user usually offers ratings ranging from 3 to 5. If
these two users are immediate friends, such different ratings
may have a negative effect on each other’s recommendation.
Thus, we propose to use the differences between rating deviations from each user’s average rating values when computing the correlations, instead of the original rating differences.
Specifically, the existing rating of each user U on each
item I is firstly converted into the deviation ∆RU I from the
average rating value RU for U and then the rated items for
LIKE
DISLIKE
each user U are classified into SU
and SU
categories. Note that ∆RU I is rounded to the nearest integer.
Formally,

= k)
,

where n = 5 and m = 1 represent the possible ratings and
dimensionality of A, respectively. I(Q) is the set of items
which meet the conditions of Q. To be precise, P r(RUA J =
k|aJ = {Low}) = 0.2, 0.4, 0.4, when k = 2, 3, 4, after normalization. When user attributes are not available, item
acceptance can be calculated using:
P r(RI6 = k) =

OUR PROPOSAL

In this paper we improve the SNRS described in Section
2.1 in two ways. First, we classify the correlations between
pairs of users ratings to improve the accuracy of the system.
Second, we make the system robust to sparse data, i.e., when
there are few immediate friends with few common ratings
with regard to the target user.

= k)| + 1

A
= k)| + m

Other Related Work

With the popularity of social networks, traditional recommender systems take advantage of additional information,
such as user friendships and social influence, to improve
their effectiveness. Social network-based collaborative filtering approaches [2, 6, 7] give higher weight to friends of
users rather than considering a set of anonymous similar
users. Matrix factorization based social recommender systems [8,9] also leverage the information from social networks
and take the influence from friends into consideration. Besides, there are some other approaches that consider social
influence [3, 5, 11].

Table 2: Conversion

RUB
4
3
3
4
5
3
5

C

B

|I(RI6 = k)| + 1
|I(I6 )| + m

Thus, P r(RI6 = k) = 0.25, 0.5, 0.25 when k = 2, 3, 4 after
normalization. Finally, the probability distribution that user
UA will give item I6 a rating of k, after the first iteration
can be obtained using Equation 1, i.e., P r(RUA I6 = k) =
0.0769, 0.6154, 0.3077 when k = 2, 3, 4. The predicted rating is the expectation of the probability distribution which is
3.2308.

LIKE
SU
= {Ii |∆RU Ii = RU Ii − RU ≥ 0}
DISLIKE
SU
= {Ii |∆RU Ii = RU Ii − RU < 0}

1240

(2)

The correlations between the target user U and all the
immediate friends V are calculated as
(Q
1
H LIKE
(∆RU I − ∆RV I )
, ∆RU I ≥ 0
V
QV ∈N (U ) ZV1 UDISLIKE
(3)
H
(∆R
−
∆R
),
UI
V I ∆RU I < 0
UV
V ∈N (U ) ZV

I4 (at timestamp t2 ) before UB did (at timestamp t4 ). User
UH can reach user UA via temporal influence links, since
temporal influence links E(UH , UF ), E(UF , UC ), E(UC , UA )
exist. Suppose we are estimating user UA ’s rating on an
item. By considering the temporal influence links, the user
set N 0 (UA ) includes users UA , UB , UC , UD , UF , UH in one iteration. Recall that in the SNRS system, only UA , UB , and
UC are considered in one iteration.

Example 2. Consider the social network and the ratings
in Figure 1 and Table 1. Users UA ’s and UB ’s average rating
values are 4 and 3.9, respectively. The converted ratings
are shown in Table 2. The items rated by UA and UB are
classified into two categories which are displayed in Table 3.
Table 3: Item Categories
User

S LIKE

UA

I1 , I 2 , I 4 , I 5

I3

UB

I1 , I 4 , I 5 , I 7

I2 , I3 , I6

F(I3, t3)

S DISLIKE

G

C(I3, t4)

B(I4, t4)

When estimating user UA ’s rating on item I6 , we obtain
DISLIKE
DISLIKE
DISLIKE
SU
= SU
∩ SU
= {I3 }, since ∆RUB I6 =
A UB
A
B
−1 < 0 falls in the DISLIKE category. Then we have the
histogram of converted rating differences
Q between UA and UB
are HUDISLIKE
(0) = 1. Therefore, V ∈N (UA ) Z1V HUDISLIKE
AV
A UB
(∆RUA I6 −∆RV I6 ) = ZU1 HUDISLIKE
(∆R
−∆R
U
I
U
U
A 6
B I6 ) =
A B
B
1 when ∆RUA I6 = −1, ∆RUB I6 = −1 and ZUB = 1. At
last, the probability distribution of UA ’s rating on I6 can be
estimated using Equation 1.
Similarly, when estimating UA ’s rating on I7 , we obtain
LIKE
LIKE
LIKE
SU
= SU
∩ SU
= {I1 , I4 , I5 }, since ∆RUB I7 =
A UB
A
B
1 > 0 falls in the LIKE category. Then we have the histogram of converted rating differences between UA and UB
are HULIKE
(−1) = 1, HULIKE
(0) = 1, HULIKE
(1) = 1. ThereA UB
A UB
QA UB
LIKE
1
fore, V ∈N (UA ) ZV HUA V (∆RUA I7 −∆RV I7 ) = ZU1 H LIKE

A(I3, t6)
A(I4, t5)

Figure 2: Example Temporal Influence Links

4.

EXPERIMENTS

4.1

Dataset

We crawled a dataset from a real social network-based
recommender system called Dianping1 , which is a leading
local restaurant search and review platform in China. The
dataset contains a social network of 11,352 users and users’
ratings on 10,657 restaurants, where a 5-scale rating system
is used. The statistics of the dataset are displayed in Table 4. Figure 3 illustrates the rating differences d between
friends on restaurants in this dataset. For example, 248 for
rating difference of -4 means that there are 248 pairs of rating records where a user gave a rating which is 4 less than
the previous rating given by one friend on the same restaurant. Note that the counts for ± |d| are not equal since we
consider the chronological order. From Figure 3 we can see
that indeed disagreements may exist among friends, as we
describe in Section 3.1. Each user in the dataset has rated
at least one restaurant. Ratings are ordered in ascending
order of the time when they are created. The K% most recent ratings from each users are held out for testing and the
(100-K)% older ratings are used for training.

B

(∆RUA I7 − ∆RUB I7 ) = 0.33, 0.33, 0.33 when ∆RUB I7 =
0, 1, 2, ∆RUB I7 = 1 and ZUB = 3. At last, the probability distribution of UA ’s rating on I7 can be estimated using
Equation 1.

3.2

H(I3, t1)

E
D(I4, t2)

Temporal Influence Links

In a social network, some users may have few immediate
friends, and friends may have few common ratings; then, the
user set N 0 (U ) (including the target user and the immediate
friends) considered in each estimation iteration may be too
small and the social influence may not be well considered in
the recommendation. To address this data sparsity problem,
we define temporal influence links in the social network. In
each iteration, N 0 (U ) is extended to also include all users
that can reach the target user via temporal influence links.

Table 4: General statistics of Dianping dataset
Statistics
Users
Social Relations
Items
Ratings
Sparsity

Definition 1. A temporal influence link E(V, U ) is a directed edge from user V to user U if and only if (i) U and
V are immediate friends, (ii) they both rated at least one
common item I, and (iii) V rated I (at timestamp t) before
U did (at timestamp t + ∆t).

4.2

Dianping
11,352
759,289
10,657
501,472
99.59%

Performance Metrics

Most of the recommender systems adopt the coverage
Definition 2. User V0 can reach user Vn via temporal
and accuracy metrics to evaluate performance [1]. Coverage
influence links if there exists a sequence of users V1 , V2 , · · · , Vn−1 , measures the percentage of items for which a recommender
such that temporal influence links E(Vi , Vi+1 ), i = 0, 1, · · · , n−
system can make predictions. We use Mean Absolute Error
1 exist.
(MAE), which is defined as the average absolute deviation
of the predicted rating to the real rating, to measure the
Example 3. Figure 2 shows exemplary temporal influaccuracy of our approach because it is widely used in the
ence links in a social network. Edge E(UD , UB ) is an tempoevaluation of rating-based recommendation [1, 4]. We apply
ral influence link, since (i) users UD and UB are immediate
1
http://www.dianping.com
friends, (ii) they both rated item I4 , and (iii) user UD rated

1241

Also, the breaking of temporal influence links may result
in the decrease of coverages of SNRS* and SNRS**, since
the percentage of training data decreases. Still, SNRS**
performs no worse than CF in terms of coverage. Compared
to SNRS*, SNRS** has a better coverage, indicating that
temporal influence links can incorporate more information
that increases the estimation probability.

180000
163200
160000
140000

Count

120000
100000
79756

80000

83893

5.

60000

20000
0

15384

13700
248

2027

-4

-3

-2

-1
0
1
Rating Difference

2

2199

296

3

4

Figure 3: Rating Difference Between Friends
a leave-one-out technique, which means hiding a real rating
and trying to predict it in our test. The definition of MAE
is as follows:
P
P
0
uU
iI |Rui − Rui |
M AE =
(4)
N
where Rui is the real rating of target user u on target restau0
is the predicted rating, and N denotes the numrant i, Rui
ber of tested ratings.

4.3

Competitors

We compare our proposed recommendation approaches to
two methods:
• CF: standard user-based collaborative filtering algorithm using Pearson correlation to measure user similarity.
• SNRS: the social network-based recommender system
[3] before applying our enhancements.

4.4

6.

Results

90%
80%

Metrics

CF

SNRS

SNRS*

SNRS**

MAE
Coverage
MAE
Coverage

0.8062
0.7153
0.7900
0.6204

0.6941
0.7033
0.6532
0.7076

0.5859
0.7033
0.5584
0.5917

0.5910
0.7416
0.5642
0.6252

REFERENCES

[1] G. Adomavicius and A. Tuzhilin. Toward the next
generation of recommender systems: A survey of the
state-of-the-art and possible extensions. IEEE TKDE,
17(6):734–749, 2005.
[2] X. Cai, M. Bain, A. Krzywicki, W. Wobcke, Y. S.
Kim, P. Compton, and A. Mahidadia. Collaborative
filtering for people to people recommendation in social
networks. In Australasian Conference on Artificial
Intelligence, 2010.
[3] J. He and W. W. Chu. A social network-based
recommender system (snrs). In Data Mining for Social
Network Data, pages 47–74. 2010.
[4] J. L. Herlocker, J. A. Konstan, L. G. Terveen, and
J. Riedl. Evaluating collaborative filtering
recommender systems. ACM TOIS, 22(1):5–53, 2004.
[5] M. Jamali and M. Ester. TrustWalker: a random walk
model for combining trust-based and item-based
recommendation. In KDD, 2009.
[6] H. Kautz, B. Selman, and M. Shah. Referral web:
combining social networks and collaborative filtering.
Communications of the ACM, 40(3):63–65, 1997.
[7] F. Liu and H. J. Lee. Use of social network information
to enhance collaborative filtering performance. Expert
Systems with Applications, 37(7):4772–4778, 2010.
[8] X. Liu and K. Aberer. Soco: a social network aided
context-aware recommender system. In WWW, 2013.
[9] H. Ma, D. Zhou, C. Liu, M. R. Lyu, and I. King.
Recommender systems with social regularization. In
WSDM, 2011.
[10] J. Neville and D. Jensen. Iterative classification in
relational data. In Proc. AAAI-2000 Workshop on
Learning Statistical Models from Relational Data,
2000.
[11] Y. Pan, F. Cong, K. Chen, and Y. Yu. Diffusion-aware
personalized social update recommendation. In
RecSys, 2013.

The experimental results on Dianping dataset are displayed in Table 5. Approach SNRS* uses the classified correlations (Section 3.1) and Approach SNRS** incorporates
both enhancements proposed in Section 3.
Table 5: Results on Dianping dataset
Training
Data

CONCLUSIONS AND FUTURE WORK

In this paper, we extended a social network-based recommender system (SNRS) [3], which utilizes the information
in social networks to improve the performance of traditional
recommender systems. Two methods were proposed to improve performance. One is classifying the correlations between pairs of users ratings to improve the accuracy of the
system. The other is making the system robust to sparse
data, i.e., when there are few immediate friends with few
common ratings with regard to the target user. Experiments on a real dataset demonstrate that our approach has
a better performance compared to a collaborative filtering
method and the original SNRS. In the future, we plan to
further study the impact of social influence in recommendation and investigate ways to improve the coverage of our
method when the data is sparse.

40000

From the results, we can see that:
(1) SNRS* and SNRS** outperform CF (more than 26%)
and SNRS (more than 13%) in terms of MAE, since classifying friends’ correlations based on their rating histories and
incorporating more social influences by the temporal influence links can help improving the accuracy of recommendation. SNRS also has lower MAE than CF, showing the effectiveness of social network-based recommendation. SNRS**
is slightly worse than SNRS* on MAE showing that the expanding of the user set may have side effect, since some less
similar users are taken into account in recommendation.
(2) As for coverage, SNRS has a stable performance of
around 0.7. CF also has a good performance since it can
always give prediction if the target item has at least one rater
and the Pearson correlation similarity between this rater
and the target user is calculable. The filtering of ratings
where friends disagree is a possible reason why SNRS* and
SNRS** do not have a good coverage compared to SNRS.

1242

