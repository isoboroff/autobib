Modularity-Based Query Clustering for Identifying Users
Sharing a Common Condition
Maayan Harel

Elad Yom-Tov

EE Department of Technion, Haifa, Israel

Microsoft Research, Herzliya, Israel

maayanga@tx.technion.ac.il

eladyt@microsoft.com

ABSTRACT

thresholding the number of times a user asked about a specific medical topic [12]. Another approach is to find users
who use a small set of highly indicative queries [15]. Both
these methods provide a way to identify patients with a high
precision, but at the cost of very low recall.
Here we propose a method for identifying users who likely
share a medical condition. We begin with a small set of seed
queries which are highly indicative of the population of interest. We apply graph-based clustering to the queries made
by the target population, e.g., the population that makes
use of the seed queries, giving a different weight (and thus
emphasis) to the subgraph that includes the seed queries.
Following query clustering, we use information on how users
transition between clusters over time to find queries that are
temporally close to the target queries. The list of extracted
queries and clusters can be used as features for a classifier
that identifies users that share the condition of interest.
The proposed method is not applicable solely to the medical domain. In online advertising, it is a common goal to
find populations which may share a common interest, for
example, motorcycles, so that ads for this interest can be
shown to them. This is usually done implicitly though the
users’ demographics, queries, and site visits. However, clickthrough rates on ads are typically low, indicating that such
fine-grained identification of interests is difficult to achieve.
Wang et al. [13] have proposed related ideas for modeling
users from search engine queries and clicked documents by
development of a generative model.
Query clustering to identify topic queries has been a common topic for research, but is hampered by the fact that
queries are usually very short. To overcome this limitation,
several researchers have proposed to add the clicks on documents following the queries to the textual features (see, for
example [3], [14] and [2]). Aiello et al. [1] added temporal
and textual attributes to identify “missions”, that is, activity
fragments that express a coherent user intent, on the basis of
their topical affinity. However, the goal of these algorithms
is to identify related queries, not to identify a common trait
of users issuing them.

We present an algorithm for identifying users who share a
common condition from anonymized search engine logs. Input to the algorithm is a set of seed phrases that identify
users with the condition of interest with high precision albeit at a very low recall. We expand the set of seed phrases
by clustering queries according to the pages users clicked
following these queries and the temporal ordering of queries
within sessions, emphasizing the subgraph containing seed
phrases. To this end, we extend modularity-based clustering
such that it uses the information in the initial seed phrases
as well as other queries of users in the population of interest.
We evaluate the performance of the proposed method on two
datasets, one of mood disorders and the other of anorexia,
by classifying users according to the clusters in which they
appeared and the phrases contained thereof, and show that
the area under the receiver operating characteristic curve
(AUC) obtained by these methods exceeds 0.87. These results demonstrate the value of our algorithm for both identifying users for future research and to gain better understanding of the language associated with the condition.

1.

INTRODUCTION

A majority of internet users turn to the internet when they
have a medical concern [7]. Data generated while people
search for information on their medical concerns has been
shown to be a fruitful source for insights on the health of
large populations. The best known area where internet data
was shown to provide medical insights is in influenza tracking [8, 10]. Other examples of such research include an examination of information needs of cancer patients [12], the
links between media and the development of anorexia [15],
and linking food-borne illnesses to specific restaurants [9].
One of the basic problems in conducting such research is
identifying a relevant cohort for study, that is, given a medical condition, identify a group of (often anonymous) users
who are likely to be suffering from this condition. A common
method for identifying people suffering from a condition is

2.

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from Permissions@acm.org.
SIGIR’15, August 09 - 13, 2015, Santiago, Chile.
c 2015 ACM. ISBN 978-1-4503-3621-5/15/08 ...$15.00.
DOI: http://dx.doi.org/10.1145/2766462.2767798.

2.1

METHODS
Clustering Algorithm

We begin by constructing a network of the users’ queries.
In this graph, nodes are queries and the edges are constructed according to the URLs clicked by users in response
to the list of results presented by the search engine. Intuitively, if users click on the same URLs following two differ-

819

2.2

ent queries, they are giving a strong indication that these
two queries are similar. We construct a (sparse) representation of the number of times each URL is clicked in response
to the query. The similarity between any two queries is computed as the cosine similarity between these representations.
To infer which of the queries form dense clusters in the
graph we use the modularity index [11], a common quality index for a partition of a graph. Informally, for a given
clustering of the graph, modularity quantifies the difference
between the fraction of the edges in the clusters and the
expected number of edges in the clusters if edges were randomly distributed. A clustering with high modularity indicates there are strong connections within the clusters –
stronger than one would expect by mere randomness. Thus,
a clustering of a graph can be found by maximizing the modularity on the graph.
In our query graph, only a few queries contain the original
seed words. Therefore, their ability to induce clusters may
be insufficient. That is, since the number of queries containing the seed words is minuscule compared to the total
set of queries, we may only find clusters that reflect poorly
the connections to the seed words and combine unrelated
queries to them. The known resolution limit of the modularity index [6] also indicates that the modularity may fail to
detect small clusters that reflect relations to the seed words.
To answer the need to focus on the subgraph with the
seed queries without completely removing other queries, we
extend the modularity maximization principle as follows.
The graph is modified to have two edge types between the
queries: positive edges and negative edges. We further denote a positive session as a session that contains a query
with a seed word, and a negative session as one that does not
contain such a query. Sessions comprise of all queries made
by a user until a 30 minute or longer break. The weight of
the positive (negative) edges is computed by the query-URL
similarity of the queries in the positive (negative) sessions.
Note that some queries appear in both positive and negative
sessions. The resulting graph has the same query vertices
as the original graph, but with different edge weights, where
some pairs of query nodes have two types of edges.
We modify the modularity index such that it combines
information on the two edge types by optimizing a convex
combination of the modularity on the two edge sets. Finding
the clustering with the maximal modularity is NP-hard [5],
but there several ways to approximate it. Here we used the
Louvain method [4], a greedy approach that evaluates the
gain in moving vertices from one cluster to another, and
iteratively builds new networks whose nodes are the clusters
found by moving the vertices according to this measure.
We adapt the Louvain method to fit our implicit two
graphs. Let ∆QP (i) and ∆QN (i) be the gain, computed
on the set of positive and negative edges respectively, of
moving node i to one of the clusters. Then, for a chosen
rate α ∈ (0, 1), we define the combined gain as
∆Q(i) = α∆QP (i) + (1 − α)∆QN (i).

Transitions between Queries

Having obtained a clustering of the queries based on their
proximity in clicked URLs, we apply a second phase of inference using the information in the proximity of queries in
time. This phase is based on the notion that consecutive
queries have a higher chance of being related to the same
information need of a user.
Define a directed graph whose vertices, denoted by V, are
the clusters found by the modularity based optimization.
A transition T (CA , CB ), from cluster CA ∈ V to cluster
CB ∈ V is defined by the queries that constitute the clusters.
Namely, a transition takes place whenever there is a crossing
from query qt1 ∈ CA to qt2 ∈ CB , for time stamps t1 <
t2 that belong to the same session. Let S = {(CA , CB ) :
|T (CA , CB )| ≥ 5, CA , CB ∈ V} define the set of all cluster
pairs for which the number of transitions are at least 5.
The edge weights of the graph are a function of the transitions between the clusters, and are computed as follows: We
define an incoming query to a cluster as the event of a transition that ends in a query that belongs to the cluster, and
an outgoing query to a cluster as the event of a transition
that begins in the cluster. For each pair (CA , CB ) ∈ S we
compute the mutual information (MI) between the outgoing
queries of cluster CA and the incoming queries of cluster CB .
The MI encodes the association between the outgoing and
incoming queries of the two clusters. Note that these are
two discrete random variables, therefore, the observations
of the data can be summarized in a contingency table, and
the MI can be efficiently computed. To verify that a high
MI is a result of a dependency in the right “direction”, i.e.
as a result of queries transitioning from cluster CA to CB ,
rather than transitioning from V \ CA to CB , we add a simple verification step. Namely, we check that the probability,
P (CA → CB ), of transitioning from cluster CA to cluster
CB is grater than P (Ci ∈ V \ CA → CB ), the probability
to transition to CB from a cluster other than CA . Finally,
for all couples (CA , CB ) ∈ S for which the above condition
holds, we add a final thresholding step to the MI value, and
remove the edges whose weight is in the 5% quantile.

2.3

Extracted Query List (EQL)
The result of the above computation is a graph whose
edges imply plausible crossings during a user’s search from
one cluster to another. We define the zero-order vertices
on this graph as cluster vertices that contain queries with
the seed terms, and first-order vertices as clusters that have
incoming edges from first order clusters.
The queries that form all zero and first order clusters were
taken as the Extracted Query List, denoted henceforce as
EQL. This list will be used to identify users that share the
condition of interest in Section 4. We note that we also
looked at higher order connections and their propagation
on the graph. However, we observed the existence of many
transitions to unrelated popular queries (e.g. “Facebook”),
and thus looking beyond first order clusters results in an
overly noisy query list.

(1)

As in the Loavain method, the vertices are iteratively
joined to clusters until there is no further gain in moving
vertices. The only parameter in the extended method is
the weight α; In Section 4 we explore the sensitivity of the
algorithm to the choice of this parameter.

3.

DATA SET DESCRIPTION

We analyzed two datasets which are comprised of browsing information of a major search engine1 .
1

820

Name removed for anonymization.

Table 1: Example of words from the queries in the order-01 clusters with high positive weight in classification.
Dataset 1 skinny, weight, lose, diet, thin, fitspo, eating, nervosa, calorie, gap, bulimia, thigh, diet, bmi, fast, starve, tumblr.
Dataset 2 seroquel, zyprexa, effects, side, drugs, bipolar, icd, abilify, risperdal, anxiety, trazodone, lithium, disorder, seizures.

Dataset 1

interest group. Nonetheless, even with this noisy labeling,
we expect a good predictive ability if the EQL reflects the
interest group. Also note that the binary classification task
is highly imbalanced: roughly 0.01% of the users of dataset
1 and 0.1% of users in dataset 2 were labeled as positive.
The aggregated queries of each user, after excluding the
ones with the seed phrases, were used to construct features
for classification. In our first experiment, we tested three
types of features: (1) counts in zero-order clusters (order-0),
(2) counts in zero- and first-order clusters (order-01), and
(3) order-01 term counts (see Section 2.3 for definitions of
zero and first order clusters). The cluster-based features are
counts of how many queries of each user appeared in each
cluster, to which we add five more features: the number of
queries in the order-0 and order-1 clusters, and the number
of unique order-0, order-1 and order-01 clusters visited. The
word counts, in (3), are the number of times a user made use
of a given word in their queries, where, by the manner the
data was extracted, were only queries within order-0 and
order-1 clusters. For each feature set we trained a linear
classifier with Stochastic Gradient Decent with l2 regularization. The regularization parameter was chosen as the
default parameter2 . Classifier performance was measured
by the AUC.
The receiver operating characteristic curve (ROC) and
AUC value for each of the feature types of dataset 1 is shown
in Figure 1. The curves are averaged over the three months
of the experiment. It is observed that there is a substantial
gain in the quality of the classifier when using the information in the first order clusters in addition to the zero order
clusters. The performance of the order-01 cluster-based features is similar to the performance of the features based on
the terms in the queries in the order-01 clusters, with the
cluster based features obtaining a better true positive rates
at low false positive rates. This result validates that the clustering partition is highly representative of the condition, as
it performed as well as the term features but with a reduced
dimensionality (to less than 150 features). We also observed
that the feature with the highest weight, when using our
cluster based features, was the number of unique order-01
clusters visited by the user.
Our second experiment was done with the term counts features, namely, the counts of words within the queries that
are in the order-01 clusters. The AUC values for the two
datasets are shown in Table 2. A number of example words
with high positive weight values are presented in Table 1.
The main parameter of our proposed method is α in Equation (1), the weight given to the modularity of the graph
with the positive edges. We tested three configurations of
this parameter3 . The AUC values for all the parameter values tested are high. While in some cases a specific choice of
this selection gives superior performance, this choice is not

Queries in this dataset were related to anorexia nervosa,
an eating disorder. We extracted queries submitted to the
search engine for a period of 6 months, beginning June 2013.
We used the seed set of queries that included one of the following phrases: anorexia tips, how to anorexia, ana buddy,
thinspo, and thinspiration. This list includes words that are
likely to be used in anorexia related activity search. A total of 10,703 users and 5,566,611 queries were found in the
period of the study. For each query of the selected users,
we extracted the query text, time and date, a list of pages
visited by the user as a result of the query (i.e. URLs clicked
by the user), and an anonymized user identifier.

Dataset 2
Queries in Dataset 2 were related to mood disorders. The
query data was comprised of 5 months of query data beginning March 2014. The list of terms used to select users that
share this condition was comprised of drugs used to treat
mood disorders, including: eskalith, lithobid, lithonate,
lithotabs, valproic acid, divalproex, valproate, depakote, and
depakene, as well as the term “mood stabilizing” (and its
derivatives). We wanted to focus on users who are likely using mood stabilizing drugs, therefore we chose a threshold of
5 queries that contain one of the terms to identify users. A
total of 3,101 users who made 1,009,642 queries were found
in the data. The information extracted for each query was
the same as in Dataset 1.

4.

EVALUATION

Obtaining annotations of whether the users share the condition of interest without breaching privacy is difficult. This
makes the validation of our algorithm challenging. In the following, we provide a validation that is based on the power
of our extracted query list (EQL), that is, queries in zero
and first order clusters, to predict whether a user is in the
original condition group. That is, we check that the EQL
can be useful for prediction of users for which we have high
precision labeling (the seed phrases).
As an initial step for the quality assessment we extracted
all the queries in a given month that have at least a 50%
overlap of words with a query in the EQL. The data included
all the searches in a three month period. Then, we selected
users with at least 5 queries, and aggregated all the queries
of each user. This process resulted in ∼ 20 million users for
the anorexia condition and ∼ 10 million users for the mood
disorder, for each month of the experiment. We conducted
binary classification on intervals of one month, where in each
month half the users were used for training and the other
half for validation.
A positive label was given to users that have at least one
query with a seed phrase, and a negative label to the rest of
the users. Note that there are unavoidable false negatives
in this list, as there are users that did not use a seed phrase
but belong to the interest group. We also expect to have
some false positives, namely, users that queried for a seed
phrase, but whose remaining queries are unrelated to the

2
Initially, we applied a grid search with cross validation, but
the effect of the choice of the model parameter was found
negligible on the large datasets.
3
Note that setting α = 0.5 is not equivalent to regular modularity maximization.

821

whether a user is in the interest group. The results show
that the predictive power of both the extracted clusters and
queries is high. This is in contrast with the use of the set
of queries made by the users, even when coupled with feature selection, which achieves very poor performance. We
suspect that the reason for this failure is the highly imbalanced nature of the data, which means that even though the
training set is large, it includes a very small set of positive
users and a very high initial dimensionality.
Our algorithm does not use any textual information. We
assume that an additional phase of processing which will
use the textual similarities, either to the initial queries or
the final extended list, can further boost the performance.
This is left for future research.

Figure 1: ROC curve - different features sets (α = 0.1).
See text for descreption of the three feature types.

6.

Table 2:

Prediction quality (AUC) of the extracted
query list (EQL) with different convex weighting selection.

α
0.1
0.5
0.9

Anorexia
0.876 (± .004)
0.817 (± .013)
0.813 (± .008)

Mood disorder
0.877 (± .007)
0.874 (± .005)
0.879 (± .007)

consistent. Importantly, we observe that the algorithm is
not highly sensitive to this choice.
For our third experiment we extracted all the queries of
the users that were found by the EQL in dataset 1. We compared our ability to identify the positive users, using either
the terms counts in the queries of the order-01 clusters, or
the terms in all the queries (without the use of the clustering
algorithm). We also applied two types of feature selection
methods on the term count features of all the queries: recursive feature elimination (RFE), which recursively considers a
smaller set of features by pruning the features with the lowest absolute weights of the trained classifier, and selection
of the best features according to the chi-square statistic for
each class-feature. Dimensionality was reduced to match the
dimensionality of the term counts in queries of the order-01
clusters. These standard feature selection methods, as well
as the prediction using the full term dictionary of the user
queries broke down completly with a mean AUC value of
0.526 ± 0.003. The performance of the terms count of words
in queries that belong to the order-01 clusters (on the same
set of users) was 0.898 ± 0.005.

5.

REFERENCES

[1] L. M. Aiello, D. Donato, U. Ozertem, and F. Menczer.
Behavior-driven clustering of queries into topics. In 20th
ACM international conference on Information and
knowledge management, pages 1373–1382, 2011.
[2] R. Baeza-Yates, C. Hurtado, and M. Mendoza. Query
clustering for boosting web page ranking. In Advances in
Web Intelligence, pages 164–175. Springer, 2004.
[3] D. Beeferman and A. Berger. Agglomerative clustering of a
search engine query log. In Proceedings of the sixth ACM
SIGKDD international conference on Knowledge discovery
and data mining, pages 407–416. ACM, 2000.
[4] V. D. Blondel, J.-L. Guillaume, R. Lambiotte, and
E. Lefebvre. Fast unfolding of communities in large
networks. Journal of Statistical Mechanics: Theory and
Experiment, 2008(10):P10008, 2008.
[5] U. Brandes, D. Delling, M. Gaertler, R. Gorke, M. Hoefer,
Z. Nikoloski, and D. Wagner. On modularity clustering.
Knowledge and Data Engineering, IEEE Transactions on,
20(2):172–188, 2008.
[6] S. Fortunato and M. Barthélemy. Resolution limit in
community detection. Proceedings of the National Academy
of Sciences, 104(1):36–41, 2007.
[7] S. Fox and M. Duggan. Health online 2013. Health, 2013.
[8] J. Ginsberg, M. Mohebbi, R. Patel, L. Brammer,
M. Smolinski, and L. Brilliant. Detecting influenza
epidemics using search engine query data. Nature,
457(7232):1012–1014, 2009.
[9] C. Harrison, M. Jorder, H. Stern, F. Stavinsky, V. Reddy,
H. Hanson, H. Waechter, L. Lowe, L. Gravano, S. Balter,
et al. Using online reviews by restaurant patrons to identify
unreported cases of foodborne illness. MMWR,
63(20):441–445, 2014.
[10] V. Lampos and N. Cristianini. Tracking the flu pandemic
by monitoring the social web. In 2nd International
Workshop on Cognitive Information Processing, pages
411–416. IEEE, 2010.
[11] M. E. Newman and M. Girvan. Finding and evaluating
community structure in networks. Physical review E,
69(2):026113, 2004.
[12] Y. Ofran, O. Paltiel, D. Pelleg, J. M. Rowe, and
E. Yom-Tov. Patterns of information-seeking for cancer on
the internet: an analysis of real world data. PloS one,
7(9):e45921, 2012.
[13] H. Wang, C. Zhai, F. Liang, A. Dong, and Y. Chang. User
modeling in search logs via a nonparametric bayesian
approach. In 7th ACM international conference on Web
search and data mining, pages 203–212, 2014.
[14] J.-R. Wen, J.-Y. Nie, and H.-J. Zhang. Query clustering
using user logs. ACM Transactions on Information
Systems, 20(1):59–81, 2002.
[15] E. Yom-Tov and D. M. Boyd. On the link between media
coverage of anorexia and pro-anorexic practices on the web.
International Journal of Eating Disorders, 47:196–202,
2014.

DISCUSSION

We presented an algorithm that uses a small set of seed
terms for identifying users who share a common condition.
While constructing a small set of terms that is highly associated with the interest group is a fairly simple task, performed, for example by extracting keywords from websites
used by such groups or through consultations with a specialist, achieving higher recall is more difficult. We propose to
infer a larger set of queries using the browsing information of
users who use the seed terms in their queries. The difficulty
of this task is to expand non trivially the seed terms, without
adding too many irrelevant queries and reducing precision.
Our clustering algorithm is comprised of two phases, which
utilize the two dimensions of the browsing information: the
visited pages after a query, and the temporal ordering of
queries made within a session. We evaluated the algorithm
by testing the ability of the expanded query list to predict

822

