Closed Form Solutions of Similarity Algorithms
Yuanzhe Cai, Miao Zhang, Chris Ding, Sharma Chakravarthy
CSE Department
The University of Texas at Arlington

{yuanzhe.cai, miao.zhang}@mavs.uta.edu, chqding@uta.edu, sharma@cse.uta.edu
fixed-point. For each iteration k, let Sk(.,.) be an iteration
similarity function and Sk(a, b) be the iterative similarity score of
pair (a, b) on kth iteration. The iteration process is started with S0
=I and iterate with

ABSTRACT
Algorithms defining similarities between objects of an
information network are important to many IR tasks. SimRank
algorithm and its variations are popularly used in many applications.
Many fast algorithms are also developed. In this note, we first
reformulate them as random walks on the network and express them
using forward and backward transition probability in a matrix form.
Second, we show that P-Rank (SimRank is just the special case of PRank) has a unique solution of eeT when decay factor c is equal to 1.
We also show that SimFusion algorithm is a special case of P-Rank
algorithm and prove that the similarity matrix of SimFusion is the
product of PageRank vector. Our experiments on the web datasets
show that for P-Rank the decay factor c doesn’t seriously affect the
similarity accuracy and accuracy of P-Rank is also higher than
SimFusion and SimRank.

Sk+1(a, b) = γ

Equation(2) is the sum of two items: the former item uses
backward random walk to calculate the similarity score (i,e, walk
in opposite direction of the hyperlinks) and the other item uses
forward random walk to compute the similarity score(i,e, walk in
direction of the hyperlinks). Theoretically, let L be the link
matrix, i.e., Lij = 1 if there exists an edge pointing from node i to
node j. Then, the backward transition probability Bij is equal to
(1/|I(i)|)LijT and the forward transition probability Tij is equal to
(1/|O(i)|)Lij. Thus, we give the matrix expression of P-Rank.

Categories and Subject Descriptors
H.3.3 [Information Systems]: Information Search and Retrieval

Lemma 1. Let T be the forward transition probability, B be the
backward transition probability, I be identify matrix, S be the
similarity matrix, and Sk be the kth-iteration similarity result. We
have S0 = I, Sk+1 = I + γ(cBSkBT)offdiag +(1-γ)(cTSkTT)offdiag, where
Aoffdiag = A – diag(A).

General Terms: Algorithms
Keywords: Linkage Mining, Similarity Calculation

1. SIMRANK AND P-RANK ALGORITHMS

2. CLOSED FORM SOLUTION OF P-RANK

SimRank[1] is a method of measuring linkage-based similarity
between objects in a graph that models the object-to-object
relationships for a particular domain. The intuition behind SimRank
similarity is that two objects are similar if they are linked by the
similar objects. However, SimRank only consider in-link
information on the information network but in fact out-link
information is also useful for the similarity calculation on the real
network. Thus, P-Rank[2] extends SimRank intuition and consider
both out-link and in-link information. The intuition of P-Rank is that
“two objects are similar if (1) they are linked by the similar objects;
and (2) they link the similar objects.”

We discuss the closed form solution of P-Rank, when c =1.
Theorem 1. Let e =[1,1,…,1]nT and S the similarity matrix . If c =
1, S = eeT is the unique result of P-Rank equation.
Proof: When the iteration converges, Sk= Sk-1=S.
For c=1, We have S = I + γ(BSBT)offdiag +(1-γ)(TSTT)offdiag.
Thus, Soffdiag = γ(BSBT)offdiag +(1-γ)(TSTT)offdiag.
T is a transition matrix. Be definition Te=e. Thus eTTT = eT, and
Te eTTT = eeT . Similarly, because B is a transition probability, Be
eTBT = eeT . Substituting S=eeT verifies that it is the solution.
Also, diag(eeT ) = I satisfy the diagonal condition. Because of the
diagonal dominance of the iteration, there is unique solution to the
problem. Thus, if c = 1, S = eeT is unique solution of P-Rank. ■
According to theorem 1, if c = 1, similarity matrix will converged
into eeT. Therefore, for the real world applications, we should
choose the decay factor c less than 1.

We proceed to present the formula to compute P-Rank. Given a
graph G(V, E) consisting of a set of nodes V and a set of links E, the
P-Rank similarity between objects a and b, denoted as S(a,b), is
computed recursively as follows:
1
⎧
⎪
| I ( a )| | I ( b )|
c
⎪⎪ γ
∑ ∑ S ( I i ( a ), I j (b )) +
| I ( a ) || I ( b ) | i =1 j =1
S (a, b) = ⎨
⎪
|O ( a )| |O ( b )|
c
⎪ (1-γ )
∑ ∑ S (Oi ( a ), O j (b ))
| O ( a ) || O (b ) | i =1 j =1
⎪⎩

(a = b)

(a ≠ b)

|I (a)| |I (b)|
|O(a)| |O(b)|
c
c
Sk (Ii (a), I j (b))+(1-γ )
∑∑
∑ ∑ Sk (Oi (a),Oj (b)) (2)
| I (a)|| I (b)| i=1 j=1
| O(a)|| O(b)| i=1 j=1

(1)

3. SIMFUSION ALGORITHM
SimFusion[3] has been proposed as an effective in calculating
the similarity score of objects in graphs. The motivation of
SimFusion is similar to that of SimRank: “the similarity between
two objects can be reinforced by the similarity of related data”.

, where c is a constant decay factor, 0 ≤c≤ 1 and γ∈ [0, 1] is used to
adjust the weight of in- and out-link. I(a) is the set of in-neighbor
nodes of a and Ii(a) is the ith in-neighbor node of a. |I(a)| is the
number of in-neighbors of node a. O(a) is the set of out-neighbor
nodes of a and Oi(a) is the ith out-neighbor of node a. |O(a)| is the
number of out-neighbor of node a. In addition, if γ is equal to 1, PRank boils down to SimRank.
A solution to P-Rank equation (1) can be reached by iteration to a

SimFusion algorithm employs a non-negative, irreducible and
row-stochastic matrix, denoted by P, to capture all the
relationships between nodes. Each element Pij represents the
relationship between objects i and j. In order to prevent similarity
sinks, in SimFusion, for a node with no links to the other nodes in
the graph, we set the elements in the corresponding row of
relationship matrix P to 1/n.(n is the number of nodes in the graph)
SimFusion reinforcement equation is represented as follows:

Copyright is held by the author/owner(s).
SIGIR’10, July 19–23, 2010, Geneva, Switzerland.
ACM 978-1-60558-896-4/10/07.

709

The iteration process starts with S0:
S0 = I
(3)
To calculate Sk+1 from Sk, we have the following equation:
Sk+1= PS1PT
(4)
where the matrix P = [δT +(1-δ)eeT/n], e is the column vector
which contains all of ones , T is a forward transition matrix and δ
is a constant between 0 and 1 and set δ = 0.85 in our experiment.
This P is also identical to PageRank transition probability.

Table 1. Statistic of Datasets
Dataset Cornell
Vertices#(n) 867
1496
Edges#(e)

Texas Wisconsin Washington
827
1263
1205
1428
2969
1805

We test the decay factors c for SimRank and P-Rank(γ = 0.5). In
this experiment, we vary c from 0.05 to 0.95. In fact, the effect of
different decay factor c is not very obvious and the scope of
accuracy for different c values is just 0.02 for SimRank and 0.01
for P-Rank. Fig.1 also shows that when c is between 0.25 to 0.45,
SimRank will receive the highest scores and when c is between
0.55 to 0.9, P-Rank will get the highest scores for these datasets.

4. CLOSED-FORM SOLUTION OF
SIMFUSION
If we don’t consider the elements on the diagonals of the
similarity matrix (in real world application we don’t care about
that), SimFusion is the special case of P-Rank. When c = 1 and γ
= 0, P-Rank is reduced to SimFusion. According to the theorem 1,
SimFusion algorithm will converge into eeT and that can’t be used
for the real world application. That means SimFusion has some
problems for its expression. Thus, we modify the SimFusion
algorithm.
The SimFusion score is computed with iterations as follow:
The iteration process starts with S0:
S0 = I
(5)
To calculate Sk+1 from Sk, we iterate using the equation:
Sk = PTSk-1P.
(6)
One of our main results of this paper is the following the closedform solution of SimFusion:

Figure 1. decay factor c

We also test the accuracy of SimFusion algorithm. In tab. 2, it
shows that the accuracy of SimFusion is lower than SimRank and
P-Rank.

Theorem 2. Let π be the stationary distribution of P. SimFusion
scores S = ππ T.

Table 2. Accuracy of Algorithm(NDCG@10)

Proof: According to the definition of matrix P, P is a nonnegative, irreducible and row-stochastic matrix.
Thus, π TP = π T and PT π = π . Therefore, PT ππ TP = ππ T

Alg.
Data.
SimRank
SimFusion
P-Rank

Thus, S = ππ T is the final similarity score. ■
According to theorem 2, we are easy to see that similarity matrix
of SimFusion is the product of PageRank vector. PageRank score
of one node describes the possibility of a surfer staying at each
node on the graph and SimFusion score of two nodes describes
the possibility of two surfers meeting with each other starting
respectively from these two nodes. Therefore, we can calculate
PageRank vector first and then product these two PageRank
vector together to get the finial similarity matrix. In this way, the
time complex of this method is O(Kn2), but original SimFusion’s
time complex is O(Kn3). K is the iteration time and n is the
number of objects.

Cornell
0.7106
0.3556
0.7822

Texas
0.8197
0.3643
0.8610

Wisconsin Washington
0.6860
0.5916
0.4063
0.5903
0.7274
0.6564

6. CONCLUSIONS
In this paper, we presented the closed form solution of P-Rank
(c = 1) and SimFusion. Firstly, when c = 1, S = eeT is the unique
result of P-Rank equation. In addition, in our experiment, the
effect of different decay factor c is not very obvious. Secondly,
when c = 1 and γ = 0, P-Rank is reduced to SimFusion. That
means S = eeT is the final solution of SimFusion. Thus, we modify
the SimFusion and give the closed form solution of SimFusion
algorithm.

Acknowledgements. Work supported by NSF-DMS-0915228,
NSF-CCF-0939187, University of Texas Regent STARS Award.

5. EXPERIMENTAL RESULTS

7. REFERENCES

For evaluating our methods, we used WebKB datasets[4] and
these web pages crawled from these four universities’ website are
manually divided into seven classes, such as students, faculty,
staff, department, course, project and others. Considering that for
a webpage w1 in the graph, these algorithms will return a rank list
of relative pages. For each web page in the list, if this web page’s
class is the same as page w1, these two pages are much related and
grade 2 at that position; otherwise grade 0. Then, we use the
NDCG[5] to evaluate the performance of similarity ranking list.
We calculate NDCG with in 10 related web pages for each object
in each dataset and get the average score to evaluate the
performance in the experiments. The detail information about
datasets shows at tab. 1.

[1] J. Glen and J. Widom, SimRank: a measure of structural-context
similarity, pp:538-543, SIGKDD, 2002 .

[2] P.X. Zhao, J.W. Han and Y.Z. Sun, P-Rank: a comprehensive structural
similarity measure over information networks, pp:553-562 CIKM, 2009.

[3] W.S. Xi, E.A. Fox, W.G. Fan, B.Y. Zhang, Z. Chen, J. Yan, D. Zhuang,
SimFusion: measuring similarity using unified relationship matrix,
pp:130-137, SIGIR, 2005.

[4] CMU Four University Dataset,
http://www.cs.cmu.edu/afs/cs/project/theo-20/www/data/

[5] K. Jvelin and J. Kenen, Cumulated gain-based evaluation of IR
techniques, ACM Trans. on Inform. Systems, pp:422 – 446, 2002.

710

