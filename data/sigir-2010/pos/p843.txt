A Framework for BM25F-based XML Retrieval
Kelly Y. Itakura

David R. Cheriton School of Computer Science
University of Waterloo
200 University Ave. W.
Waterloo, ON, Canada

yitakura@cs.uwaterloo.ca

Charles L.A. Clarke

David R. Cheriton School of Computer Science
University of Waterloo
200 University Ave. W.
Waterloo, ON, Canada

claclark@uwateloo.ca

ABSTRACT

plications. For XML element retrieval, we use the following
version:
X
fE,t (k + 1)
s(E) ≡
Wt
,
(1)
elE
f
+
k(1 − b + b avgdl
)
E,t
t∈Q

We evaluate a framework for BM25F-based XML element retrieval. The framework gathers contextual information associated with each XML element into an associated field, which
we call a characteristic field. The contents of the element
and the contents of the characteristic field are then treated
as distinct fields for BM25F weighting purposes. Evidence
supporting this framework is drawn from both our own experiments and experiments reported in related work.

where Q is a set of query terms, Wt is the IDF weight of the
term t, fE,t is the term frequencies in an element E, elE is
an element length of E, and avgdl is the average document
length in the collection. In applying BM25 to element retrieval, we continue to use document-level statistics for the
computation of Wt .
Robertson et al. [2, 13] describe BM25F, an extension of
BM25 that exploits structural information. Under BM25F,
terms contained in a document’s title, for example, may be
given more weight than terms contained in the document’s
body.
In this paper, we explore a framework for adapting BM25F
to XML element retrieval. Under this framework, we construct two fields for each element. One field contains the
contents of the element itself; the other field, called the
characteristic field, contains contextual information associated with the element. This contextual information will vary
from domain to domain, but might include the title of the
overall document, titles from containing elements, and document metadata.

Categories and Subject Descriptors
H.3.3 [Information Search and Retrieval]: Retrieval
models

General Terms
Theory, Experimentation

Keywords
XML retrieval, BM25, BM25F, Wikipedia, book search

1.

INTRODUCTION

INEX [1], the annual Initiative for the Evaluation of XML
retrieval, includes experiments on ad hoc focused XML element retrieval, where the task is to return a ranked list
of document elements (e.g., paragraphs, sections, abstracts)
in response to a previously unseen query. Elements are required to be non-overlapping, so that no returned element
contains another, but otherwise any document element may
be returned.
While various participating groups have reported attempts
to exploit XML structure in order to improve performance
on this task, none of these efforts have consistently outperformed the simple approach of applying Okapi BM25 [12]
to score individual XML elements and then filtering the resulting ranked list to remove overlap. Under this approach,
each element is scored as if it were an independent document. The context of the element — such as information
appearing in the elements that surround it — is ignored.
Runs using this basic approach ranked third in 2004, third
in 2007, and first in 2008 [4, 5, 9].
Okapi BM25 is a well-established ranking formula, which
has proven its value across a wide range of domains and ap-

2.

BM25F
Using BM25F, an element’s score is computed as follows:
X
xe,t
BM 25F (e) =
Wt ,
K
+ xe,t
t∈q∩e

where q is a query term, xe,t is a weighted normalized term
frequency, K is a tunable parameter, and Wt is documentlevel IDF for a term t. To obtain xe,t , length normalization is
first performed separately for each field f associated with an
element e, producing field-specific normalized term frequencies. These normalized term frequencies xe,f,t are multiplied
by field-specific weights Wf and summed to obtain xe,t
X
xe,f,t
xe,f,t =
, xe,t =
Wf · xe,f,t ,
le,f
1 + Bf ( lf − 1)
f
where xe,f,t is the term frequency of t in field f of element
e, Bf is a tunable parameter, le,f is the length of f in e,
and lf is the average field length of f . We report the results
obtained by treating average document and field lengths as
a constant, but later experiments that treated them as parameters seem to give no advantage.

Copyright is held by the author/owner(s).
SIGIR’10, July 19–23, 2010, Geneva, Switzerland.
ACM 978-1-60558-896-4/10/07.

843

Table 1: Adhoc Focused Retrieval
Run
iP[0.01] rank
BM25F 0.6333
1
BM25
0.5940
12

Table 2: Book Page Retrieval
Run
MAP (training) MAP (test)
BM25
0.0278
0.0110
BM25F+title
0.0412
0.0149
BM25F+title+cat
0.0413
0.0139
BM25F+title+cat+LCC
0.0414
0.0137

For INEX 2005, Robertson et al. applied an earlier version of BM25F to XML element retrieval [8, 11], reporting
65% improvements over BM25 measured by nxCG(10) on
INEX IEEE collection with a different task where overlap is
allowed. In that work, an element’s score is computed from
multiple fields, which may include the body of the element,
the document’s title, the document’s abstract, and ancestral
section titles.
Trotman describes another effort to extend BM25F to
XML element retrieval [15] on TREC Wall Street Journal
collection, but showed that improvement obtained is 0.64%
computed by mean average precision. BM25F has also been
used for XML-encoded book retrieval, where the task was to
return books not elements [7, 16] producing 9.09% improvement measured by NDCG@1.

3.

5.

We propose a framework for applying BM25F to XML element retrieval through the addition of a single characteristic
field. This characteristic field merges contextual information
from multiple sources, which may include inherited titles and
metadata. The proposal is inspired by previous work, but
aims to avoid the complexity of multiple fields and heterogenous structure by merging contextual information into this
single field.
The proposal is evaluated in the context of the INEX effort. While our results are preliminary, and the results of the
INEX 2009 book track have not yet been fully judged, they
suggest that the benefits of field weights may be obtainable
even in this simplified framework.
Future work includes experimenting our version of BM25F
on INEX heterogeneous track collection and taking advantage of more detailed structural information available in the
new INEX 2009 Wikipedia collection.

THE CHARACTERISTIC FIELD

In order to simplify the application of BM25F to XML
element retrieval, we propose a framework with only two
fields for each element. The body field contains the element
body, and the characteristic field contains any contextual
or background information that characterizes the element.
The precise contents of the characteristic field may vary from
element to element. While this approach is similar to that of
Robertson et al. [11] and Lu et al. [8] it avoids the complexity
of multiple field types and allows a consistent approach to
be applied across heterogenous elements.

4.

CONCLUSIONS

6.

REFERENCES

[1] Initiative for the Evaluation of XML retrieval.
www.inex.otago.ac.nz.
[2] N. Craswell, H. Zaragoza, and S. Robertson. Microsoft
Cambridge at TREC 14: Enterprise track. In Proceedings of
the TREC 14, 2005.
[3] L. Denoyer and P. Gallinari. The Wikipedia XML corpus.
SIGIR Forum, 40(1):64–69, 2006.
[4] N. Fuhr, J. Kamps, M. Lalmas, S. Malik, and A. Trotman.
Overview of the INEX 2007 Ad Hoc Track. INEX 2007,
4862:1–23, 2007.
[5] J. Kamps, S. Geva, A. Trotman, A. Woodley, and M. Koolen.
Overview of the INEX 2008 Ad Hoc Track. INEX 2008,
5631:1–28, 2009.
[6] G. Kazai, A. Doucet, and M. Landoni. Overview of the INEX
2008 Book Track. In INEX 2008, pages 106–123, 2009.
[7] G. Kazai and N. Milic-Frayling. Effects of social approval votes
on search performance. In Proceedings of ITNG 2009, pages
1554–1559, 2009.
[8] W. Lu, S. Robertson, and A. MacFarlane. Field-weighted XML
retrieval based on BM25. In INEX 2005, pages 161–171, 2006.
[9] S. Malik, M. Lalmas, and N. Fuhr. Overview of INEX 2004.
LNCS, 3493:1–15, 2005.
[10] L. of Congress Network Development and M. S. Office. MARC
standards. www.loc.gov/marc/.
[11] S. Robertson, W. Lu, and A. MacFarlane. XML-structured
documents: Retrievable units and inheritance. In Proceedings
of FQAS 2006, pages 121–132, 2006.
[12] S. Robertson, S. Walker, and M. Beaulieu. Okapi at TREC-7:
Automatic ad hoc, filtering, vlc and interactive track.
Proceedings of TREC-7, 1998.
[13] S. Robertson, H. Zaragoza, and M. Taylor. Simple BM25
extension to multiple weighted fields. In Proceedings of CIKM
2004, pages 42–49, 2004.
[14] R. Schenkel, F. Suchanek, and G. Kasneci. YAWN: A
semantically annotated Wikipedia XML corpus. In 12.
GI-Fachtagung für Datenbanksysteme in Business,
Technologie und Web, pages 277–291, 2007.
[15] A. Trotman. Choosing document structure weights. Inf.
Process. Manage., 41(2):243–264, 2005.
[16] H. Wu, G. Kazai, and M. Taylor. Book search experiments:
Investigating IR methods for the indexing and retrieval of
books. LNCS, 4956:234, 2008.

EXPERIMENTS AND RESULTS

Ad Hoc Retrieval. We first report the results of runs on
INEX 2009 ad hoc task. We trained on a 5.9GB INEX 2008
Wikipedia corpus [3] with 659,387 articles and 70 assessed
topics and tested on a 50.7GB INEX 2009 Wikipedia corpus [14] with 2,666,190 articles and 68 assessed topics. Our
training optimized the official metric of iP[0.01]. For these
runs, we used a characteristic field formed from the titles of
the article and the sections in which an element occurs.
Table 1 shows the official INEX results. The BM25F run
that ranked first gives a 6.62% improvement over the BM25
run that ranked 12th.
Book Page Retrieval . We used INEX 2008 Book Track
data [6] of 50239 books of size 37GB after pre-processing.
Only 25 out of 70 topics had relevance judgements, thus we
used 17 of them for training, and 8 for testing. The corpus
comes with a file, machine readable cataloging (MARC) format [10], that contains information such as book category
and library of congress classification (LCC) code.
The Book track task required to group the pages by the
books and rank the books. Thus all of our runs did so and
ranked the books by the highest scoring page returned for
the book. Training maximized mean average precision.
Table 2 shows the results of our experiments. The runs
with the plus signs indicate information used in the characteristic field. We see that using characteristic information
gives up to 48.92% and 35.45% improvement over BM25
during training and testing respectively.

844

