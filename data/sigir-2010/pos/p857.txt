VisualSum: An Interactive Multi-Document Summarization
System Using Visualization
Yi Zhang, Dingding Wang, Tao Li
School of Computing and Information Sciences
Florida International University
Miami, FL 33199

{yzhan004, dwang003, taoli}@cs.fiu.edu
ABSTRACT
Given a collection of documents, most of existing multidocument summarization methods automatically generate
a static summary for all the users. However, diﬀerent users
may have diﬀerent opinions on the documents, thus there is
a necessity for improving users’ interactions in the summarization process. In this paper, we propose an interactive
document summarization system using information visualization techniques.

Figure 1: The diagram of user interactive summarization
Experiments and a user study demonstrate the eﬀectiveness of the VisualSum system.

Categories and Subject Descriptors: H.3.3[Information
Storage and Retrieval]: Information Search and Retrieval;
H.5.2[User Interfaces]: Interaction styles.

2.

General Terms: Algorithms, Experimentation, Performance
Keywords: Multi-Document Summarization, visualization

2.1
1. INTRODUCTION

METHODOLOGY

In this section, we introduce the components of VisualSum
including sentence graph representation, layout and clustering algorithms, and user interaction function.

Sentence Graph Representation

Given a collection of documents, we ﬁrst decompose them
into sentences. An undirected graph G = (V, E) is then constructed to represent the relationships among the sentences,
where V is the vertex set and E is the edge set. Each vertex
in V is a sentence, and each edge in E is associated with the
cosine similarity between two sentences (vertices). Two vertices are connected if their cosine similarity is greater than
0.

With huge volume of text resources on the Internet, document summarization has been receiving a lot of attentions.
Existing document summarization methods usually involve
natural language processing and machine learning techniques.
However, most of these methods exclude human from the
summarization process, which is eﬃcient in terms of reducing users’ workload, but is not desired since the generated
summaries are identical for all the users, contradicting to
the subjective nature of summarization [6].
To address the issue that people with diverse interests may
expect dynamic summaries based on their own preference,
we develop VisualSum, an interactive visualized document
summarization system, to help users select their preferred
sentences to form the summaries.
The summarization process of VisualSum is performed in
an iterative manner as illustrated in Figure 1. It starts with
all the sentences in the documents, and stops when a satisfactory summary is obtained by a user. Each sentence
selection iteration includes three steps as follows. Step (1):
The system generates a 2-D view graph of current sentences,
in which each node represents a sentence, and the location
and color of the sentence are determined by the layout and
clustering algorithms respectively. Step (2): The user selects a sentence based on the visualization results in Step
(1). Step (3): The system removes the sentence clusters of
the selected sentences from the current sentence set.

2.2

Linlog Layout Algorithm

Here, we use Linlog, a popular energy-based layout algorithm[7], to display the sentence relationships. The energy
function in Linlog is
∑
E(p) =
(ω{u,v} ∥pu − pv ∥ − dv du ln∥pu − pv ∥)
{u,v}:u̸=v

Where ω{u,v} is the weight of the edge connecting vertices u
and v, and du and dv are the degrees of u and v respectively.
The optimal positions p of all the vertices are obtained by
minimizing E.

2.3

Clustering with Maximum Modularity

The node (sentence) positions displayed by the energybased layout algorithm are consistent with the clustering results obtained by maximizing graph modularity [2, 7]. Modularity can be deﬁned as
∑ wc
d(c)2
[
−(
)]
wC
d(C)2
c∈C∈

Copyright is held by the author/owner(s).
SIGIR’10, July 19–23, 2010, Geneva, Switzerland.
ACM 978-1-60558-896-4/10/07.

where wc , wC are the sum of edge weights in cluster c and

857

Figure 2: An example visualization and summarization by VisualSum
Systems
VisualSum
LeadBase [1]
Random
NMF [4]
LSA [3]

cluster set C respectively, and d(c) and d(C) are the sum of
node degrees for all the nodes in cluster c and cluster set C.
The clustering results can be easily obtained by a bottomup algorithm, in which each sentence is treated as a singleton
cluster at the beginning and then successively merge pairs
of clusters until the maximum modularity is reached.

R-1
0.332
0.320
0.317
0.324
0.331

R-2
0.055
0.052
0.049
0.055
0.050

R-L
0.308
0.297
0.294
0.300
0.305

R-W
0.113
0.110
0.108
0.113
0.112

R-SU
0.107
0.104
0.101
0.106
0.102

Table 1: Summarization performance comparison.

2.4 User Interaction
Now we show how VisualSum assists users to interactively
select sentences to create summaries. The visualization in
VisualSum clearly illustrates the following information for
users. (1) Each node is a sentence and the color of the node
indicates the cluster it belongs to. (2) The radius of each
node is determined by the sentence’s degree. The larger
the node, the more important the corresponding sentence.
(3) Important sentences in the largest cluster are labeled by
their sentence IDs and recommended to users as candidates.
(4) Large nodes in the overlapping area of two clusters may
be the transition sentences between the clusters. (5) The
larger the distance between two clusters, the dissimilar the
two topics.
Since the visualization process clearly shows the relationships among the sentences, users can easily select the important sentences they are interested in to form the summary.
Figure 2 shows an example of the visualization and sentence
selection procedure.

help users to create their desired summaries using visualization. Thus in this experiment, we just demonstrate the
comparable performance of VisualSum for automatic document summarization.

3.2

User Study

To better evaluate the summarization results of VisualSum, we conduct a user survey. The subjects of the survey
are ﬁfteen students at diﬀerent levels and from various majors at Florida International university. Each participant
randomly selects a set of news documents, and uses VisualSum to form a summary. Then they are asked to assign
a score of 1 (the least satisfaction) to 10 (the highest satisfaction), according to their satisfaction of the use of VisualSum. The average scores of VisualSum and the baseline
summarizers are 8.07, 7.5 respectively, which demonstrate
the eﬀectiveness of VisualSum.
Acknowledgements: The work is partially supported
by NSF grants IIS-0546280 and DMS-0915110.

3. EXPERIMENTS

4.

3.1 Automatic Summarization

REFERENCES

[1] http://www-nlpir.nist.gov/projects/duc/pubs.html.
[2] G. Agarwal and D. Kempe. Modularity-maximizing graph
communities via mathematical programming. The European
Physical Journal B, 66(3):409–418, November 2008.
[3] Y. Gong and X. Liu. Generic text summarization using
relevance measure and latent semantic analysis. SIGIR, 2001.
[4] D. D. Lee and H. S. Seung. Algorithms for non-negative matrix
factorization. NIPS, 2001.
[5] C.-Y. Lin and E. Hovy. Automatic evaluation of summaries
using n-gram co-occurrence statistics. Association for
Computational Linguistics, pages 71 – 78, 2003.
[6] S. Liu, M. X. Zhou, S. Pan, W. Qian, W. Cai, and X. Lian.
Interactive, topic-based visual text summarization and
analysislysis. CIKM, 2009.
[7] A. Noack. Modularity clustering is force-direced layout.
Physical Review E, 79:026102, 2009.

First of all, we examine the summarization performance of
VisualSum using DUC 2006 dataset. Since the DUC evaluation is not personalized, we select the largest sentence node
in the largest cluster at each iteration, until the required
length of summaries is reached. Table 1 shows the evaluation results using ROUGE toolkit [5] (intuitively, the higher
the scores, the better the performance). We compare VisualSum with four widely used baseline summarizers. From
Table 1, we observe that the summarization performance of
VisualSum outperforms LeadBase and Random and is comparable with NMF and LSA. Note that the motivation of
VisualSum is not to build an automatic summarizer, but to

858

