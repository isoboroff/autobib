Re-examination on Lam% in Spam Filtering
Haoliang Qi*, Muyun Yang**, Xiaoning He**, Sheng Li**
*Department of Computer Science and Technology,
Heilongjiang Institute of Technology
No.999, Hongqi Street, Harbin, China

**School of Computer Science and Technology,
Harbin Institute of Technology
No.92,West Dazhi Street, Harbin, China

Email:haoliang.qi@gmail.com, ymy@mtlab.hit.edu.cn, nxnh@qq.com, lisheng@hit.edu.cn
ABSTRACT

2. OPTIMIZATION OF LAM%

Logistic average misclassification percentage (lam%) is a key
measure for the spam filtering performance. This paper
demonstrates that a spam filter can achieve a perfect 0.00% in
lam%, the minimal value in theory, by simply setting a biased
threshold during the classifier modeling. At the same time, the
overall classification performance reaches only a low accuracy.
The result suggests that the role of lam% for spam filtering
evaluation should be re-examined.

The optimization of lam% evolves its definition as the following:

Categories and Subject Descriptors

where logit(x)= log(x/(1-x)), and logit −1 (x) , the inverse function

H.3.3 [Information Storage and Retrieval]: Information Search
and Retrieval - Information filtering

of logit(x), is defined by logit −1 (x) =

General Terms

In order to minimize lam%, reviewing the monotonic property of
the function lam%, i.e. logit -1 (x) , is necessary. Because

logit(hm%) + logit( sm%)
2
hm%
sm%
−1
= logit ((log
+ log
) / 2)
1 − hm%
1 − sm%
hm% sm%
= logit −1 ((log
) / 2)
(1 − hm%)(1 − sm%)

lam% = logit −1

Algorithms, Measurement, Performance, Theory

ex
.
1 + ex

ex
> 0 , logit -1 (x) is a monotone increasing
(1 + e x ) 2
function. Consequently, lam% can be minimized by the minimum
hm% sm%
(log
) / 2 .With either hm% approaching 0
(1 − hm%)(1 − sm%)
while sm% unequal to 1, or sm% approaching 0 while hm%
hm% sm%
) / 2 can be minimized.
unequal to 1, (log
(1 − hm%)(1 − sm%)
Therefore a threshold of a spam filter could be set toward either
side of hm% or sm%, and this will minimize
hm% sm%
(log
) / 2 . However an over biased threshold
(1 − hm%)(1 − sm%)
such as 1 in probability model will lead to hm%=0, resulting to
compute log(0) or to be divided by 0 when computing lam%.
Therefore, the threshold should be well determined in order to
make a desired hm% and sm%.
[logit -1 (x)]' =

Keywords
Spam Filtering; Lam%; Measurement

1. INTRODUCTION
The spam filtering is generally regarded as a binary classification
task to identify spams from normal e-mails (i.e. hams). To
evaluate the performance of spam filters, the overall classification
accuracy (or the total proportion of misclassified messages) is not
a good choice because all errors are treated on equal footing.
Nevertheless, the logistic average misclassification percentage
(lam%), a single quality measure based only on the filter’s binary
ham/spam classification accuracy, is proposed as: lam% = logit-1
((logit(hm%)+logit(sm%))/2), where logit(x)=log(x/(1-x)), in
which hm% is ham misclassification percentage, and sm% is
spam misclassification percentage[1]. As the geometric mean of
the odds of ham and spam misclassification[1], lam% is widely
adopted together with 1-AUC by open spam filtering competitions
including TREC Spam Filtering Track and CEAS(Conference on
Email and Anti-Spam) Spam-filter Challenge. The lam% is
designed to impose no a priori relative importance on either ham
or spam misclassification, rewarding equally an improvement in
the odds of either. However, this paper demonstrates that lam% is
inherently defected in allowing a 0.00% by a biased threshold,
whereas maintaining a very high error rate. Therefore, it is not
reliable enough to observe only lam% as the measure for spam
filtering evaluation.

Each message with its score above the threshold is labeled as
spam, otherwise ham. Through setting a biased threshold, i.e.
setting the threshold very high or very low, hm% or sm% could
approach zero, and so lam% will tend eventually to be zero. In
this sense, the way to optimize lam% via a biased threshold trick
is independent of specific filtering models. And Section 3 presents
the details of optimizing lam% under the framework of Logistic
Regression.

3. BIASED LOGISTIC REGRESSION
Logistic Regression (LR), the state of art spam filtering model
[2][3], is used as an example to optimize lam% to zero. In LR
model, the prediction of a message is calculated according to
logistic function which is described in Equation 1.

Copyright is held by the author/owner(s).
SIGIR 2010, July 19-23, 2010, Geneva, Switzerland.
ACM 978-1-60558-896-4/10/07.

757

r
r r
r r
（1）
p(yi = spam | x i ) = exp(x i • w)/(1+exp(x i • w))
r
r
where x i is the vector of the message’s features, w is the weight
r
vector, and yi is the prediction of the message x i . By using
Equation 1, the prediction value is converted between 0 and 1
from a real number ranging from -∞ to +∞. Algorithm 1 in the
following presents the pseudo code of LR.

in this paper does not hurt 1-AUC. 1-AUC can be computed as 1AUC = SwappedPairs/m/n [4][5], where m and n are the number
of golden spam messages and that of golden ham messages,
respectively. Swapped pairs are defined as pairs that are ranked in
the wrong order. Hence, ROC area also has a probabilistic
interpretation: the probability that a random ham will receive a
lower score than a random spam[1]. Because of this pair-wise
correct measure [4] and unchanged prediction score of the biased
LR, 1-AUC is unchanged too.

Algorithm 1: Logistic Regression
r
(1) w = 0 ; //initialize weights to 0
r
(2) foreach x i ,yi' // yi' is a golden label
r r
r r
(3) p = exp(x i • w)/(1+exp(x i • w))

Table 1. Statistics of experimental corpora

(4)
(5)
(6)

if ( p >0.5 ) predict spam;
else
predict ham;
if ( yi' == 1) // yi' is a spam
uur
uur
uur
w = w + (1-p) × x i × TRAIN_RATE
(7)
uur
uur
uur
(8) else w = w - p × x i × TRAIN_RATE
where TRAIN_RATE is the learning rate, i.e. the learning speed,
yi' in Line 2 and Line 6 is the golden judgment of xi.

Corpus

Language

Ham

Spam

Total

TREC05p

English

39399

52790

92189

TREC06p

English

12910

24912

37822

English

25220

50199

75419

Chinese
21766
42854
Table 2. Experimental results

64620

TREC07p
TREC06C
Corpus
TREC
05p
TREC
06p
TREC
07p
TREC
06C

Usually, the prediction is spam if p > 0.5, or ham otherwise (see
Line 4 and 5). As mentioned in Section 2, lam% can be optimized
by setting the biased threshold. The threshold can be set nearly to
1 or 0, which can decrease hm% or sm% to 0. LR with the biased
threshold is referred as biased LR. For biased LR, pseudo codes
are the same to the traditional LR except that Line 4 is replaced
by “if ( p > threshold ) predict spam”. Note that the weight
updating in biased LR is not changed, and thus the final
prediction scores of messages are not biased (i.e. not changed).

Filter

LR
Biased LR
LR
Biased LR
LR
Biased LR
LR
Biased LR

hm% sm%

0.37
0.00
0.76
0.00
0.36
0.00
0.11
0.00

0.54
87.25
0.45
98.10
0.06
89.03
0.10
93.17

lam Accura
cy (%)
%
0.44
99.54
0.00
50.04
0.58
99.44
0.00
35.38
0.15
99.84
0.00
40.74
0.10
99.90
0.00
38.21

1-AUC
(%)
0.0124
0.0124
0.0308
0.0308
0.0054
0.0054
0.0013
0.0013

5. CONCLUSION

TONE (Train On or Near Error) is adopted to train the spam filter
in the actually modeling process. Two types of samples are
trained: (1) misclassified samples by the filter; and (2) correctly
classified samples if falling within a predefined classification
boundary.

As a popular measure for the spam filtering performance, lam% is
widely applied. However, this paper discloses that lam% fails
when setting biased threshold. The suggestion is that other
measures instead of the lam% should be focused for the spam
filtering evaluation.

Character 4-grams, the first 3,200 features of each message and
binary feature scoring are used similar to ref. [2].

6. ACKNOWLEDGMENT
The research is supported by the Key Project of the National
Natural Science Foundation of China (No. 60736044) and
National Natural Science Foundation of China (No. 60873105).

4. EXPERIMENTAL RESULTS
We evaluated the lam% optimization method on TREC public
spam filtering datasets. The basic information of the datasets is
shown in Table 1.

7. REFERENCES
[1] G. Cormack, T. Lynam. TREC 2005 Spam Track Overview.
TREC 2005. 2005

Table 2 shows the experimental results which are acquired by
TREC Spam Filter Evaluation Toolkit. hm%, sm% and 1-AUC
are also reported. The parameters of LR and the biased LR are the
same except the threshold: TRAIN_RATE = 0.002, TONE = 0.45,
and threshold = 0.999999 for biased LR.

[2] J. Goodman, W. Yih. Online Discriminative Spam Filter
Training. CEAS 2006. 2006
[3] G. Cormack. University of Waterloo Participation in the
TREC 2007 Spam Track. TREC 2007. 2007.

By analyzing the experimental results, we can see that the
proposed method decreases lam% to 0.00%, i.e. the minimal
value in theory, across all datasets. Although lam% is perfect, the
accuracy of the filters for most cases is below 50%, i.e. the
performance of random guess. Therefore, there is an obvious
defect in lam% as the measure for spam filtering evaluation.

[4] T. Joachims. A Support Vector Method for Multivariate
Performance Measures. ICML 2005. 2005.
[5] H.B. Mann and D.R. Whitney. On a Test of Whether One of
Two Random Variables Is Stochastically Larger Than the
Other. Ann. Math. Statist., 18, 1947.

It is very interesting that 1-AUC (area under the ROC curve), the
other measure of spam filtering, is left untouched when biasing
the threshold. This means that optimizing lam% method proposed

758

