Short Resource Papers

SIGIR’17, August 7-11, 2017, Shinjuku, Tokyo, Japan

RELink: A Research Framework and Test Collection for
Entity-Relationship Retrieval
Pedro Saleiro

Nataša Milić-Frayling

LIACC, FEUP, Universidade do Porto
pssc@fe.up.pt

School of Computer Science, University of Nottingham
natasa.milic-frayling@nottingham.ac.uk

Eduarda Mendes Rodrigues

Carlos Soares

FEUP, Universidade do Porto
eduarda@fe.up.pt

INESC TEC, FEUP, Universidade do Porto
csoares@fe.up.pt
to the query: “Low emission cars produced in the United States
manufacturing plants”, one would expect an answer in terms of
tuples <car brand, US plant location or name> or <car brand, US
plant location or name, emission level>. Since the Web offers an
abundance of information, there are concerted efforts to extract
entities and entity relationships from free text and to optimize
entity-relationship (E-R) search.
The extraction process typically involves text processing using
natural language processing (NLP) and machine learning methods
to identify entity instances of a given type. Introducing new entity
types and automating the extraction process requires manual effort
to label the textual data and train the classifiers to identify correct
instances in the text.
Extracted entities and relationships are typically stored in a database or knowledge base. Thus, one can leverage structured search
to retrieve them in response to a user’s query [2, 11]. However,
pre-defining and constraining entity and relationship types reduce
the range of queries that can be answered and therefore limit the
usefulness of entity search, particularly when one wants to leverage
free-text corpora such as the Web. Improvement of methods for
both extraction and search is hampered by a lack of query sets
and relevance judgments, i.e., golden standards that could be used
to compare effectiveness of different methods. In this paper we
introduce:
(1) A low-effort semi-automatic method for acquiring instances
of entities and entity relationships from tabular data.
(2) RELink Query Collection (QC) of 600 E-R queries with corresponding relevance judgments
(3) RELink Framework with resources that enable experimentation with multi-relationship E-R queries.
Essential to our approach is the observation that tabular data
typically includes entity types as columns and entity instances
as rows. The table structure implies a relationship among table
columns and enables us to create E-R queries that are answered
by the entity tuples across columns. Following this approach, we
prepared and released the RELink QC comprising 600 E-R queries
and relevance judgments based on a sample of Wikipedia List-oflists-of-lists tables. Furthermore, we used the ClueWeb-09-B Web
collection with FACC1 text span annotations linked to Wikipedia
entities to show how RELink can be used for E-R retrieval over Web
content. We support E-R search through Apache Lucene indexing
and search, tailored to multi-relationship entity retrieval.

ABSTRACT
Improvements of entity-relationship (E-R) search techniques have
been hampered by a lack of test collections, particularly for complex queries involving multiple entities and relationships. In this
paper we describe a method for generating E-R test queries to support comprehensive E-R search experiments. Queries and relevance
judgments are created from content that exists in a tabular form
where columns represent entity types and the table structure implies one or more relationships among the entities. Editorial work
involves creating natural language queries based on relationships
represented by the entries in the table. We have publicly released
the RELink test collection comprising 600 queries and relevance
judgments obtained from a sample of Wikipedia List-of-lists-oflists tables. The latter comprise tuples of entities that are extracted
from columns and labelled by corresponding entity types and relationships they represent. In order to facilitate research in complex
E-R retrieval, we have created and released as open source the RELink Framework that includes Apache Lucene indexing and search
specifically tailored to E-R retrieval. RELink includes entity and relationship indexing based on the ClueWeb-09-B Web collection with
FACC1 text span annotations linked to Wikipedia entities. With
ready to use search resources and a comprehensive test collection,
we support community in pursuing E-R research at scale.

CCS CONCEPTS
• Information systems → Retrieval models and ranking;

KEYWORDS
Entity-Relationship Retrieval

1

INTRODUCTION

In recent years, we have seen increased interest in using online
information sources to find concise and precise information about
specific issues, events, and entities [11]. For example, in response
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
SIGIR ’17, August 07-11, 2017, Shinjuku, Tokyo, Japan
© 2017 Association for Computing Machinery.
ACM ISBN 978-1-4503-5022-8/17/08. . . $15.00
https://doi.org/http://dx.doi.org/10.1145/3077136.3080756

1273

Short Resource Papers

SIGIR’17, August 7-11, 2017, Shinjuku, Tokyo, Japan

The query collection and the research framework are publicly
available1 , enabling the community to expand the RELink Framework with additional document collections and alternative indexing
and search methods. It is important to maintain and enhance the
RELink QC by providing updates to the existing entity types and
creating new queries and relevant instances from additional tabular
data.
In the following sections we provide a rationale for our approach
and situate the RELink QC and Framework in the context of related
efforts. We provide a detailed account of the methods used to create
the RELink collection and resources that are made available to
support E-R search experiments within the RELink Framework.

2

manufactured in” relationships. The instances of entity pairs in the
table then serve as evidence for the specific relationship. This can
be generalized to more complex information needs that involve
multiple entity types and relationships.
Automated creation of E-R queries from tabular content is an
interesting research problem. For now we asked human editors to
provide natural language and structured E-R queries for specific
entity types. Once we collect sufficient amounts of data from human
editors we will be able to automate the query creation process with
machine learning techniques. For the RELink QC we compiled a
set of 600 queries with E-R relevance judgments from Wikipedia
lists about 9 topic areas.

3.2

RELATED COLLECTIONS

Selection of Tables

Wikipedia contains a dynamic index “The Lists of lists of lists”2
which represents the root of a tree that spans curated lists of entities
in various domains. We used a Wikipedia snapshot from October
2016 to traverse “The Lists of lists of lists” tree starting from the
root page and following every hyperlink of type “List of ” and their
children. This resulted in a collection of 95,569 list pages. While
most of the pages contain tabular data, only 18,903 include tables
with consistent column and row structure. As in [1], we restrict
content extraction to wikitable HTML class that typically denotes
data tables in Wikipedia. We ignore other types of tables such as
infoboxes.
In this first instance, we focus on relational tables, i.e., the tables
that have a key column, referring to the main entity in the table
[5]. For instance, the ”List of books about skepticism” contains a
table “Books” with columns “Author”, “Category” and “Title”, among
others. In this case, the key column is “Title” which contains titles of
books about skepticism. We require that any relationship specified
for the entity types in the table must contain the “Title” type, i.e.,
involve the “Title” column.
In order to detect key columns we created a Table Parser that
uses the set of heuristics adopted by Lehmberg et al. [5], e.g., the
ratio of unique cells in the column or text length. Once the key
column is identified, the parser creates entity pairs consisting of
the key column and one other column in the table. The content of
the column cells then constitutes the set of relevant judgments for
the relationship specified by the pair of entities.
For the sake of simplicity we consider only those Wikipedia lists
that contain a single relational table. Furthermore, our goal is to
create queries that have verifiable entity and entity pair instances.
Therefore, we selected only those relational tables for which the
key column and at least one more column have cell content linked
to Wikipedia articles.
With these requirements, we collected 1795 tables. In the final
step, we selected 600 tables by performing stratified sampling across
semantic domains covered by Wikipedia lists. For each new table,
we calcuated the Jaccard similarity scores between the title of the
corresponding Wikipedia page and the titles of pages associated
with tables already in the pool. By setting the maximum similarity
threshold to 0.7 we obtained a set of 600 tables.
The process of creating RELink queries involves two steps: (1)
automatic selection of tables and columns within tables and (2)

To the best of our knowledge there are only two test collections
specifically created for E-R retrieval: ERQ [6] and COMPLEX [11].
Both support research retrieval of entities and relations from knowledge bases and neither provide complete relevance judgments. Consequently, researchers need to evaluate manually the answers they
produce in their experiments.
ERQ consists of 28 queries that were adapted from INEX17 and
OWN28 [6] initiatives. Twenty two of the queries express relationships, but already have one entity instance named and fixed in
the query (e.g. “Find Eagles songs”). Only 6 queries ask for pairs of
unknown entities, such as “Find films starring Robert De Niro and
please tell directors of these films.”.
COMPLEX collection was created semi-automatically[11] and
comprises relationship-centric queries for unknown entities, such
as “Currency of the country whose president is James Mancham”,
“Kings of the city which led the Peloponnesian League.” and “Who
starred in a movie directed by Hal Ashby?”. Among 70 queries, 60
involve entity pairs and 10 refer to entity triples.

3 RELINK QUERY COLLECTION
3.1 Tabular Data and Entity Relationships
Information that satisfies complex E-R queries is likely to involve
instances of entities and their relationships dispersed across Web
documents. Sometimes such information is collected and published
within a single document, such as a Wikipedia page. In such cases,
traditional search engines can provide excellent search results without applying special E-R techniques or considering entity and relationship types. Indeed, the data collection, aggregation, and tabularization has been done by a Wikipedia editor.
That also means that a tabular Wikipedia content, comprising
various entities, can be considered as representing a specific information need, i.e., the need that motivated editors to create the
page in the first place. Such content can, in fact, satisfy many different information needs. We focus on exploiting tabular data for
exhaustive search for pre-specified E-R types. In order to specify
E-R queries, we can use column headings as entity types. All the
column entries are then relevance judgments for the entity query.
Similarly, for a given pair of columns that correspond to distinct
entities, we formulate the implied relationship. For example the
pair <car, manufacturing plant> could refer to “is made in” or “is
1 https://sigirelink.github.io/RELink/

2

1274

http://en.wikipedia.org/wiki/List_of_lists_of_lists

Short Resource Papers

SIGIR’17, August 7-11, 2017, Shinjuku, Tokyo, Japan

Table 1: Examples of query annotations.
ID

NL Query

Relational Format

RELink_P_164

What are the regiments
held by the Indian Army?

{regiment, held by, Indian
Army}

RELink_T_071

In which seasons NHL
players scored more than
50 goals and the team they
represented?

{NHL season, scored more
than 50 goals in, NHL
player, played for, NHL
team }

Figure 3.1: Example of Wikipedia table row.
Table 2: RELink collection statistics.

Total queries
Avg. queries length
Avg. Q E length
Avg. Q R length
# uniq. entity attributes (Q E )
# uniq. relationships (Q R )
Avg. # relevant judgments

Figure 3.2: Example of metadata provided to editors.
manual specification of information needs. For example, in the
table “Grammy Award for Album of the Year” the columns “winner”,
“work” were automatically selected to serve as entity types in the
E-R query (Figure 3.1). The relationship among these entities is
suggested by the title and we let a human annotator to formulate
the query.
The RELink query set was created by 6 annotators. We provided
the annotators with access to the full table, metadata (e.g., table
title or the first paragraph of the page) and entity pairs or triples
to be used to specify the query (Figure 3.2). For each entity pair or
triple the annotators created a natural language information need
and an E-R query in the relational format Q = {Q Ei , Q Ri, j , Q E j },
as shown in Table 1.

3.3

3-entity
219
83.8
20.9
12.6
592
205
41.8

All
600
66.5
20.9
12.3
1251
317
58.5

Culture and the Arts with 70 queries and Geography and Places
with 67 queries.
In Table 2 we show the characteristics of the natural language and
relational queries. Among 600 E-R queries, 381 refer to entity pairs
and 219 to entity triples. As expected, natural language descriptions
of 3-entity queries are longer (on average 83.8 characters) compared
to 2-entity queries (56.5 characters).
We further analyze the structure of relational queries and their
components, i.e., entity queries Q E that specify the entity type and
relationship queries Q R that specify the relationship type. Across
600 queries, there are 1251 unique entity types Q E (out of total 1419
occurrences). They are rather unique across queries: only 65 entity
types occur in more than one E-R query and 44 occur in exactly
2 queries. The most commonly shared entity type is “country”,
present in 9 E-R queries.
In the case of relationships, there are 317 unique relationship
types Q R (out of 817 occurrences) with a dominant type “located
in” that occurs in 140 queries. This is not surprising since in many
domains the key entity is tied to a location that is included in one of
the columns. Nevertheless, there are only 44 relationship types Q R
occurring more than once implying that RELink QC is a diverse set
of queries, including 273 relationship types occurring only once.

Formulation of Queries

The relational query format is introduced to support a variety of
experiments with E-R queries. In essence, a complex information
need is decomposed into a set of sub-queries that specify types
of entities E and types of relationships R(Ei , E j ) between entities.
For each relationship query there is one query for each entity involved in the relationship. Thus a query Q that expects a pair of
entities for a given relationship, is mapped into three queries (Q Ei ,
Q Ri, j , Q E j ), where Q Ei and Q E j are the entity types for Ei and E j
respectively, and Q Ri, j is a relationship type describing R(Ei , E j ).
For instance, “football players who dated top models” with answers
such as <Cristiano Ronaldo, Irina Shayk>) is represented as three
queries Q Ei = {football players}, Q Ri, j = {dated}, Q E j = {top
models}. Automatic mapping of Q expressed in a natural language
into queries Q Ei or Q Ri, j can be seen as a problem of query understanding [8, 9, 12] and is part of the future work.

3.4

2-entity
381
56.5
20.9
11.8
679
145
67.9

4

RESEARCH FRAMEWORK

RELink Framework is designed to facilitate experiments with the
RELink QC. The RELink natural language queries and relational
queries (Q Ei , Q Ri, j , Q E j ) provide opportunities to define and explore a range of query formulations and search algorithms. A typical
E-R experimental setup would involve search over a free-text collection to extract relevant instances of entity tuples and then verify
their correctness against the relevance judgments derived from
Wikipedia. The key enabling components therefore are: (1) test collections of documents with annotated entity instances that could

Collection Statistics

RELink QC covers 9 thematic areas from the Lists-of-Lists-of-Lists
in Wikipedia: Mathematics and Logic, Religion and Belief Systems,
Technology and Applied Sciences, Miscellaneous, People, Geography and Places, Natural and Physical Sciences, General Reference
and Culture and the Arts. The most common thematic areas are

1275

Short Resource Papers

SIGIR’17, August 7-11, 2017, Shinjuku, Tokyo, Japan

to the contextual terms, i.e., entity types and relationship types,
specified by the users.

4.2

Search Process

The E-R retrieval process is managed by the RELinker module
(Figure 4.1). The Query Analyzer module processes information
requests and passes queries in the structured format to the Retriever.
Query search is performed in stages to allow for experimentation
with different methods and parameter settings. First, the Retriever
provides an initial set of results using Lucene’s default search settings and groups them by entity or entity pairs on query time using
the Lucene’s GroupingSearch. The Scorer then generates and applies feature functions of specific retrieval models with required
statistics. Currently, the Scorer has implementations for Language
Models [3] and SDM [7]. The RELinker is responsible for re-ranking
and providing final results based on the scores provided by the
Scorer and the parameter weights learned by Letor.

5

Figure 4.1: RELink Framework architecture overview.
be extracted during E-R search, (2) an indexing facility, and (3) a
retrieval module to process queries and rank results.
Currently, the RELink Framework includes the ClueWeb-09-B3
collection combined with FACC1[4] text span annotations with
links to Wikipedia entities (via Freebase). The entity linking precision and recall in FACC1 are estimated at 85% and 70-85%, respectively [4]. The RELink Extractor, part of ER Indexer, applies
an Open Information Extraction method [10] over the annotated
ClueWeb-09-B corpus. The two additional components are Corpus
E-R Index and E-R Retrieval, both depicted in Figure 4.1. The implementation of all modules in E-R Retrieval and the Indexer module
in Corpus E-R Index are based on Apache Lucene and the Letor
module serves as a wrapper for RankLib4 .

4.1

CONCLUDING REMARKS

We anticipate that the RELink approach of using tabular data to
create queries and relevance judgments will enable E-R research
across different disciplines as researchers expand the RELink QC
based on diverse sources of structured data. We recommend that
the community retains the sources, e.g., tabular data used to create
queries, in order to train methods for full automation of the query
generation.

ACKNOWLEDGMENTS
Authors would like to thank Jan Šnajder for assisting with acquiring
and managing annotators of RELink queries.

REFERENCES
[1] Chandra Sekhar Bhagavatula, Thanapon Noraset, and Doug Downey. 2013. Methods for exploring and mining tables on wikipedia. In ACM SIGKDD Workshop on
Interactive Data Exploration and Analytics. 18–26.
[2] Jack G Conrad and Mary Hunter Utt. 1994. A system for discovering relationships
by feature extraction from text databases. In SIGIR9́4. 260–270.
[3] Shady Elbassuoni, Maya Ramanath, Ralf Schenkel, Marcin Sydow, and Gerhard
Weikum. 2009. Language-model-based ranking for queries on RDF-graphs. In
CIKM. ACM, 977–986.
[4] Evgeniy Gabrilovich, Michael Ringgaard, and Amarnag Subramanya. 2013.
FACC1: Freebase annotation of ClueWeb corpora. (2013).
[5] Oliver Lehmberg, Dominique Ritze, Robert Meusel, and Christian Bizer. 2016.
A large public corpus of web tables containing time and context metadata. In
WWW. 75–76.
[6] Xiaonan Li, Chengkai Li, and Cong Yu. 2012. Entity-relationship queries over
wikipedia. ACM TIST 3, 4 (2012), 70.
[7] Donald Metzler and W Bruce Croft. 2005. A Markov random field model for term
dependencies. In SIGIR. ACM, 472–479.
[8] Jeffrey Pound, Alexander K Hudek, Ihab F Ilyas, and Grant Weddell. 2012. Interpreting keyword queries over web knowledge bases. In CIKM. ACM, 305–314.
[9] Uma Sawant and Soumen Chakrabarti. 2013. Learning joint query interpretation
and response ranking. In WWW. ACM, 1099–1110.
[10] Michael Schmitz, Robert Bart, Stephen Soderland, Oren Etzioni, et al. 2012. Open
language learning for information extraction. In EMNLP-CoNLL. Association for
Computational Linguistics, 523–534.
[11] Mohamed Yahya, Denilson Barbosa, Klaus Berberich, Qiuyue Wang, and Gerhard
Weikum. 2016. Relationship queries on extended knowledge graphs. In WSDM.
ACM, 605–614.
[12] Mohamed Yahya, Klaus Berberich, Shady Elbassuoni, Maya Ramanath, Volker
Tresp, and Gerhard Weikum. 2012. Natural language questions for the web of
data. In EMNLP-CoNLL. Association for Computational Linguistics, 379–390.

Indexing and Retrieval

Based on the ClueWeb-09-B collection we create two essential resources: entity index and entity pair relationship index for the entities that occur in the corpus. For a given entity instance, the ER
Indexer identifies co-occuring terms within the same sentence and
considers them as entity types for the observed entity instance. Similarly, for a given pair of entities, the ER Indexer verifies whether
they occur in the same sentence and extracts the separating string.
That string is considered a context term for the entity pair that
describes their relationship type. We obtain 476M entity and 418M
entity pair extractions with corresponding sentences that are processed by the Indexer. Once the inverted index (ER Index) is created,
any instance of an entity or entity pair can be retrieved in response
3 http://www.lemurproject.org/clueweb09/

4 http://www.lemurproject.org/ranklib.php

1276

