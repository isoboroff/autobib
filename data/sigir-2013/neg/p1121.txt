A Multilingual and Multiplatform Application for Medicinal
Plants Prescription from Medical Symptoms
Fernando Ruiz-Rico,
María-Consuelo Rubio-Sánchez

David Tomás, Jose-Luis Vicedo
University of Alicante

{dtomas, vicedo}@dlsi.ua.es

University of Alicante

{frr, mcrs7}@alu.ua.es
ABSTRACT

medicinal plants information via a simple multi-device and
multi-platform interface. Although the data employed to
train the system is only available in English (as most of
the medical articles gathered are written in this language),
our system is able to process user queries in six different
languages, selecting relevant links according to the language
employed.

This paper presents an application for medicinal plants prescription based on text classification techniques. The system
receives as an input a free text describing the symptoms of a
user, and retrieves a ranked list of medicinal plants related to
those symptoms. In addition, a set of links to Wikipedia are
also provided, enriching the information about every medicinal plant presented to the user. In order to improve the accessibility to the application, the input can be written in six
different languages, adapting the results accordingly. The
application interface can be accessed from different devices
and platforms.

2. MEDICINAL PLANTS PRESCRIPTION

Text classification, Category ranking, Medical Subject Headings, Medicinal Plants, Wikipedia

The MEDLINE1 database includes articles covering several medical fields. In order to group all the documents
related to the same topics, the MeSH2 thesaurus is employed to categorize hierarchically every bibliographic entry.
One of the branches included in this hierarchy is devoted
to medicinal plants, enumerating more than one thousand
plant names associated to research papers describing their
medical properties. In this way, what we have is a large
corpus of documents associated to every plant included in
MeSH.
We have employed this corpus to train a text classification
system. For a given text input, our classifier provides the
most relevant medicinal plants associated to that input. Regarding the classification algorithm, we have employed our
own approach, namely NEWPAR [5]. This algorithm has
proven to work efficiently with medical corpora in real time
scenarios [6, 7].

1.

3. MULTILINGUAL ENVIRONMENT

Categories and Subject Descriptors
J.3 [Computer Applications]: Life and Medical Sciences;
H.3.3 [Information Storage and Retrieval]: Information
Search and Retrieval

General Terms
Algorithms, Languages

Keywords

INTRODUCTION

Many medicinal plants have been used since ancient times.
Although Computer Science is not that old, lots of experts
have focused their efforts on gathering and update different
resources to keep track and categorize most of the plants and
their medical properties. Nowadays, a great deal of effort
is focused on providing inexperienced users with interfaces
that allow retrieving the results stored in large databases. In
this paper we present a machine-learning based application
that employs information from databases mainly directed
towards medical experts, enabling non-expert users to access

The availability of MeSH vocabulary in different languages
makes it possible to broaden our scenario to a multilingual environment. Since the machine learning algorithm
employed is trained on English documents, our proposal to
multilinguality is based on translating the user’s input.
As it is shown in Figure 1 (left), the user inputs a list of
symptoms, selects the language, and automatically gets a
ranked list of MeSH terms (from medicinal plants branch)
related to the input query. Only the keywords provided in
the input are automatically translated during the process, as
the text in the results page is taken from the original MeSH
thesaurus for that particular language. See Figure 1 (right)
for an example.
To translate the user input, the MOSES [3] statistical
translator has been embedded into the application. Thus,

Permission to make digital or hard copies of part or all of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for profit or commercial advantage and that copies
bear this notice and the full citation on the first page. Copyrights for thirdparty components of this work must be honored. For all other uses, contact
the owner/author(s).
SIGIR’13, July 28–August 1, 2013, Dublin, Ireland.
ACM 978-1-4503-2034-4/13/07.

1
Medical Literature Analysis and Retrieval System Online:
http://ncbi.nlm.nih.gov/pubmed.
2
Medical Subject Headings: http://ncbi.nlm.nih.gov/
mesh.

1121

4. SYSTEM ARCHITECTURE
The application has been developed with a client-server
architecture. On the server side, a hybrid solution has been
developed using both PHP and C programming languages.
The PHP part is in charge of receiving the client requests,
and sending them first to MOSES (the translation tool) and
to NEWPAR (the classification algorithm), both developed
in C. The interface on the client side has been developed
using jQuery Mobile [4], a new open source library which
allows to develop HTML and Javascript applications for almost any device containing a simple browser.
The compatibility of the selected languages and libraries
ensures the possibility to compile and install all the source
code and get it working in almost any device (both mobile
and non-mobile platforms) and any of the existing operating systems. Moreover, we also provide the users with the
native code [2] in case they want the application to be executed in the most efficient way. In order to compile the
application for mobile devices, the PhoneGap [1] framework
was used, as it allows to create mobile apps using standardized web APIs. The final result is an application that
can run on any kind of computers through a simple website
(http://www.lookforplants.com), and natively with an installed application on systems such as Android, iOS, Windows, Blackberry, webOS and Symbian, all with a single
codebase.

Figure 1: Example of symptomatology (cholesterol
and high blood pressure) and the corresponding
medicinal plants (garlic, avena sativa, etc.).

5. REFERENCES
[1] S. Allen, V. Graupera, and L. Lundrigan. Phonegap.
Pro Smartphone Cross-Platform Development, pages
131–152, 2010.
[2] A. Charland and B. Leroux. Mobile application
development: web vs. native. Communications of the
ACM, 54(5):49–53, 2011.
[3] P. Koehn, H. Hoang, A. Birch, C. Callison-Burch,
M. Federico, N. Bertoldi, B. Cowan, W. Shen,
C. Moran, R. Zens, et al. Moses: Open source toolkit
for statistical machine translation. In Annual
meeting-association for computational linguistics,
volume 45, page 2, 2007.
[4] J. Reid. jQuery Mobile. O’Reilly Germany, 2011.
[5] F. Ruiz-Rico, J.-L. Vicedo, and M.-C. Rubio-Sánchez.
Newpar: an automatic feature selection and weighting
schema for category ranking. In Proceedings of
DocEng-06, 6th ACM symposium on Document
engineering, pages 128–137, 2006.
[6] F. Ruiz-Rico, J.-L. Vicedo, and M.-C. Rubio-Sánchez.
Multilingual assistant for medical diagnosing and drug
prescription based on category ranking. In 22nd
International Conference on Computational Linguistics:
Demonstration Papers, pages 169–172. Association for
Computational Linguistics, 2008.
[7] F. Ruiz-Rico, J.-L. Vicedo, and M.-C. Rubio-Sánchez.
Medline abstracts classification based on noun phrases
extraction. Biomedical Engineering Systems and
Technologies, pages 507–519, 2009.
[8] J. Tiedemann. News from opus - a collection of
multilingual parallel corpora with tools and interfaces.
In Recent Advances in Natural Language Processing,
volume 5, pages 237–248, 2009.

Figure 2: Additional information about any particular plant is provided through links to Wikipedia
articles.
the text classification algorithm always receives the input
text in English. To train the MOSES system we employed
the OPUS [8] corpus, which contains a large number of freely
available parallel corpora. We also employed the EMEA3
corpus to assure a high quality translation, because of their
similarities with the vocabulary expected to be employed by
our users. This corpus is made out of PDF documents from
the European Medicines Agency.
In order to enrich the application functionality, our system
provides additional information to the user about the suggested medicinal plants. To achieve this goal, the XML file
containing all the summaries of the Wikipedia articles4 has
been processed and classified in order to provide a ranked
list of links followed by a brief description of the plant in the
language selected by the user, as shown in Figure 2. Again,
the NEWPAR algorithm was employed for the classification.
3
4

http://www.emea.europa.eu/.
http://meta.wikimedia.org/wiki/Data\_dumps.

1122

