Modeling User’s Receptiveness Over Time For
Recommendation
Wei Chen

Wynne Hsu

Mong Li Lee

School of Computing, National University of Singapore, Singapore
{weichen,whsu,leeml}@comp.nus.edu.sg

ABSTRACT

recommendation. This works well when the users have long
term interests that do not change from time to time. However, for users with short term interests, modeling the shift
in users’ interests has been shown to improve recommendation accuracy. This is achieved by introducing a personalized time factor for each user to capture the shift in users’
interests over time [18, 7, 5, 8]. With the advent of online social networks, social network based CF approaches
to recommendation have emerged [4, 17, 11]. The assumption is that friends tend to inﬂuence their friends to exhibit
similar likes and dislikes. Hence, we can further improve
recommendation accuracy by taking into account the social
relationships.
Let us consider the snapshots of users’ item ratings and
their social relationships at time points T1 and T2 in Figure 1. Suppose our target user is U2 . At time point T1 ,
both users U1 and U2 have watched and rated the movie
“M ovie2”. Traditional CF methods [15, 16, 13] will group
U1 and U2 as similar users and recommend “M ovie1” to U2
since U1 has watched “M ovie1” previously. Yet, U2 ’s interest
does not remain static. We observe that at time point T2 ,
his interest has shifted from movies to kids as he rates a new
item “Kids1”. Recognizing this, CF with temporal dynamics
will recommend ”Kids2” to U2 instead. On the other hand,
looking at the social relationships among users, we realize
that U2 and U3 are friends. Hence, social network based CF
will conclude that U2 is likely to like “Book1” and “Book2”
since his friend U3 have read and rated these books. Each
of the diﬀerent methods arrive at diﬀerent items to recommend. How do we reconcile the diﬀerent recommendations?
To complicate matter, social relationships are not static but
evolve over time as a user can make new friends and old
friends do grow apart. We observe that at time point T1 , U2
has only one friend U3 , whereas at time point T2 , his friends
are {U3 , U4 }. Now if we want to give a recommendation to
U2 at time point T2 , what item should we recommend so
that it is most likely to be accepted by U2 ?
To answer this question, we must be able to quantify the
degree of inﬂuence on a user’s decision making process from
his/her long term and short term interests, as well as his/her
social trust relationships over time. Note that these two
factors are not independent. We advocate that when two
users’ long term and short term interests are aligned, they
are likely to become friends, and they will tend to be more
receptive towards each other’s preferences. Conversely, if the
users’ interests are not aligned, they will grow apart after
some time and become less receptive towards the preferences
of the other user.

Existing recommender systems model user interests and the
social inﬂuences independently. In reality, user interests may
change over time, and as the interests change, new friends
may be added while old friends grow apart and the new
friendships formed may cause further interests change. This
complex interaction requires the joint modeling of user interest and social relationships over time. In this paper, we
propose a probabilistic generative model, called Receptiveness over Time Model (RTM), to capture this interaction.
We design a Gibbs sampling algorithm to learn the receptiveness and interest distributions among users over time. The
results of experiments on a real world dataset demonstrate
that RTM-based recommendation outperforms the state-ofthe-art recommendation methods. Case studies also show
that RTM is able to discover the user interest shift and receptiveness change over time.

Categories and Subject Descriptors
H.3.3 [Information Storage and Retrieval]: Search and
Retrieval-Information Filtering

General Terms
Algorithms, Experimentation, Measurement, Performance

Keywords
Recommendation, Social trust, Personalization, Collaborative Filtering

1. INTRODUCTION
Recommender systems are fast becoming the tools of choice
for a user to sieve through tons of online materials in order to ﬁnd information that is relevant to him/her. Many
of these recommender systems employ collaborative ﬁltering (CF) techniques to identify similar users based on their
purchased history or past ratings to generate personalized

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
SIGIR’13, July 28–August 1, 2013, Dublin, Ireland.
Copyright 20XX ACM 978-1-4503-2034-4/13/07 ...$15.00.

373

Figure 1: Example of Users’ Rating History and their Social Trust Network.

In this paper, we propose a model called the Receptiveness over Time Model (RTM), to quantify the dynamic interaction between user interest and social trust. This model
utilizes a probabilistic generative approach to leverage on
the information embedded in a users’ social trust network,
and the users’ rating history. The RTM captures (1) the
degree of receptiveness for each user over time (modeling
receptiveness change), (2) the distribution of personal preference over the latent topics for each user over time (modeling users’ interests change), (3) the distribution of items
for each topic over time. The estimation of the RTM model
parameters is performed using Gibbs sampling MCMC procedure. To overcome the data sparsity problem, we design a
special Bayesian treatment to the latent variable to ensure
that the evolution of latent parameter is smooth and share
the topic-level rating knowledge across diﬀerent time points.
We carry out experiments on a real world Epinions dataset
to demonstrate the eﬀectiveness of our proposed approach.
We also demonstrate how RTM can be used to explicitly
track and visualize the change in users’ interests and their
receptiveness to other users.
The rest of the paper is organized as follows. Section 2
gives the related work. Section 3 describes our problem formulation and the proposed RTM model. Section 4 presents
the experimental results, and we conclude in Section 5.

Temporal modeling has largely been neglected in the collaborative ﬁltering community until Koren et.al [7] propose
their time-aware algorithm timeSVD++. This work extends
the standard matrix factorization model by introducing time
dependent user/item biases and user latent factors to cope
with changing user and item characteristics. Xiong et. al
[8] view the temporal domain as a third dimension and use
tensor factorization to factorize the temporal components so
that a user’s rating on an item within a particular time step
depends not only on the user and item factors but also on the
latent factors associated with the time step. To cope with
temporal dynamics in implicit user feedback data, [18] proposes a random walk model where the user-item edges are
weighted such that a user’s more recent preferences would
be more strongly emphasized during the random walk. [14]
combines the latent factor model and Markov chain model
to predict the next items a user may be interested in. While
all these methods are able to model users’ preferences and
their shift of interests over time, they have not taken social
inﬂuences from friends into account.
Independently, a number of researchers have realized that
social trust plays a great role in user acceptance of the recommendation [6, 3]. The works in [9, 10, 11] propose to use
matrix factorization method to learn the user latent vectors
and item latent vectors and integrate social trust network
into their model through diﬀerent social regularization term.
[4] develop a generative approach with trust propagation
based on [11]. [17] develop a joint personal and social latent factor (PSLF) model which combines the collaborative
ﬁltering and social network modeling approaches for social
recommendation. [19] propose the probabilistic model called
social inﬂuenced selection (SIS), to model the decision making of item selection. However, all these works assume that
the social relationships are static and they do not consider
users’ changing interests. To the best of our knowledge, this
is the ﬁrst work that models both the shift in user interests
and change in social relationships for recommendation.

2. RELATED WORK
Existing recommender systems for item recommendation
can be roughly divided into two major categories. Contentbased systems [1, 12] make use of explicitly stated proﬁles of
users or products to characterize their nature. On the other
hand, collaborative ﬁltering (CF) based systems [16, 15] do
not exploit such explicit user proﬁles. Instead, they infer
the user proﬁles through their past activities, such as their
transaction history or product satisfaction expressed in ratings. The earliest studies [16, 15] on collaborative ﬁltering
automatically predict relevant items ratings for a given user
by referencing item rating information from other similar
users. Recently, [13] propose a Bayesian model that applies
LDA to cluster users and items into groups and model ratings using group membership. Bi-LDA further extends this
model to allow users or movies to belong to several groups,
one for each rating.

3.

PROPOSED METHOD

In this section, we ﬁrst give our problem formulation.
Then we describe the RTM model and show how the model
can be used for various tasks such as rating prediction, tracking receptiveness between friends and user interest change.

374

3.1 Problem Formulation

Table 1: Meanings of symbols used

In recommender systems, we have a set of users U = { u1 ,
... ua } and a set of items M = { m1 , ... mb }. At time
t, a user u expresses his/her preference for an item m by
giving a rating in the range of 1 to 5 with 1 being the least
preferred and 5 being the most preferred. These ratings are
represented using the matrix R(t) with dimensions |U |×|M |.
Each entry in this matrix, r(t) (u, m), corresponds to the
rating provided by user u on item m at time point t.
Besides the rating information, we also represent the social
relationships among the users at time t in the form of a
matrix S (t) with dimensions |U | × |U | such that its entry
s(t) (u, v) = 1 if u issues trust statement towards user v at
time point t. Otherwise s(t) (u, v) = 0. Note that S (t) is
asymmetric in general.
We formulate our task as follows: Given a user u ∈ U at
time t and an item m ∈ M , we want to predict the rating
that u will give to m at time t based on the past rating
′
′
history and social relationships, i.e. R(t ) and S (t ) for all
′
t ∈ [1, t).

Symbol
u
U
m
M
f
F (u)
K
L
Dir
x
f riend
zu,m
user
zu,m
item
zu,m

πuf riend
πuuser
item
πm

3.2 Receptiveness over Time Model
In order to capture the dynamic interactions between long
term and short term interests as well as friendships for recommendation, our model has two parts. The ﬁrst part models user receptiveness at a single time point. The second
part incorporates temporal information to allow for modeling over time.

Φzu,m
user ,z item
u,m

Meaning
A user
The set of all users
A item
The set of all items
Friend of user
The set of user u’s friends
Number of user topic
Number of item topic
Dirchlet
The observed rating for user u on item m
The receptive friend picked
for rating given by user u on item m
The user topic picked
for rating given by user u on item m
The item topic picked
for rating given by user u on item m
Distribution of user u over users’ friend
Distribution of user u over users’ topics
Distribution of item m over items’ topics
Rating-scale mixing proportion
of user-item topic joint distribution
user
item
over values {1...R} for topic zu,m
, zu,m

to inﬂuence the item rating decision is proportional to the
receptiveness of u to this friend. Note that, we assume u is
a special friend of himself/herself (i.e.,u ∈ F (u)).
In addition, each user u and item m follow the topic distriitem
bution parameters πuuser and πm
respectively. To rate an
user
item m, a user u ﬁrst draws a user topic zu,m
and the item
item
m draws a item topic zu,m from the corresponding distributions. Φzu,m
user ,z item is the rating-scale mixing proportion
u,m
of user-item topic joint distribution over values {1...R} for
user
item
topic zu,m
, zu,m
.
During the generative process, ratings are generated as
follows:

3.2.1 Single Time Point Receptiveness Modeling
Receptiveness captures the dynamic interaction between
user interest and social trust. Existing social CF ﬁltering approaches [11, 10, 4, 17] incorporate social trusts as
auxiliary data to regulate user preferences for recommendation. In other words, if two users are friends, social CF
approaches will assign greater weights to their corresponding preferences. However, we realize that a user’s decision
making process is not so simplistic. A person may be his/her
friend, however, if that friend’s interests are not aligned with
him/her, the receptiveness to that friend’s interest will not
be high and vice versa.
Among the approaches that model user’s interests for recommendation, Bi-LDA has proven to work well in practice
[13]. It is a generative model with several advantages that
are suitable for our work:

1. Choose a K × L distribution over ratings Φ ∼ Dir(β)
2. Choose a distribution over friends for each user πuf riend ∼
Dir(αf riend )
3. Choose a distribution over K users’ topic for each user
πuuser ∼ Dir(αuser )

1. It models the distribution of users’ interest within a
probabilistic framework, thus allowing a more interpretable explanation compared to the matrix factorization approach.

4. Choose a distribution over L items’ topic for each item
item
πm
∼ Dir(αitem )
5. For each rating ru,m :

2. It allows the inclusion of prior knowledge into the generative process and a principled framework to select
model structure. This proves to be useful in linking consecutive time points to avoid the data sparsity
problem in the second part of RTM.

• Choose receptive friend
f riend
zu,m
∼ M ultinomial(πuf riend )
• Choose user topic
user
zu,m
∼ M ultinomial(πfuser )
• Choose item topic
item
item
zu,m
∼ M ultinomial(πm
)

However, Bi-LDA does not incorporate social relationships. For this reason, we extend Bi-LDA to incorporate
social relationships and call it Bi-LDAsocial . Table 1 summarizes the symbols used in describing the Bi-LDAsocial model.
In Bi-LDAsocial , each user u follows a preference distribution πuf riend that depicts how likely u’s friend will contribute
to u’s item rating decision. The probability for a friend of u

• Choose a rating ru,m ∼ Φzu,m
user ,z item
u,m
The graphical model is shown in Figure 2. We note that
the decision of rating given by user u on item m is based on
the receptiveness of a friend (including u himeself/herself).

375

gate distributions Φ, π user , π item and π f riend and obtain an
expression for the joint probability P (x, z user , z item , z f riend ).
With this, we can compute the conditional distributions necessary for Gibbs sampling. We give the explicit forms for the
following conditional distributions where x = ru,m is the obuser
item
served rating, k = zu,m
and l = zu,m
:

f riend
The receptive friend zu,m
can be drawn from M ultinomial
f riend
f riend
(πu
). Once the receptive friend zu,m
is picked, we
user
f riend
randomly draw a topic zu,m from user zu,m
’s preference
item
based on M ultinomial(πuuser ). Similarly, a topic zu,m
from
item
item m is also drawn based on M ultinomial(πm ). The
user
item
user and item topics zu,m
and zu,m
together with user-item
topic joint distribution Φ jointly specify the rating, that is,
ru,m ∼ Φzu,m
user ,z item .
u,m

f riend
f riend
P (f = zu,m
|Θ\zu,m
, x) ∝

(
)
riend ¬(u,m)
(nfu,f
)
+ αf riend

(
)(
)
¬(u,m)
Nk,l,x + β
¬(u,m)
user
× (nuser
)
+
α
∑
f,k
¬(u,m)
+ β)
r (Nk,l,r
(2)
riend
where nfu,f
denotes the number of times that user u is
riend ¬(u,m)
receptive to f in all the ratings , (nfu,f
)
denotes
the number of times that user u is receptive to f in all the
¬(u,m)
ratings excluding ru,m , (nuser
denotes the number of
f,k )
times user f will be assigned to user topic k in all the ratings
except for ru,m , Nk,l,r represents the number of times the
user with user topic k has rated item with item topic l with
¬(u,m)
represents the number of times
the rating r, and Nk,l,x
the observed rating x has been given by user with user topic
k on item with item topic l excluding ru,m .
Similarly, we deﬁne the conditional distribution for user
user
topic zu,m
:

Figure 2:
LDAsocial

user
user
P (zu,m
= k|Θ\zu,m
, x)
(
) (
)
¬(u,m)
Nk,l,x + β
(3)
¬(u,m)
∝
(nuser
+ αuser
∑
f,k )
¬(u,m)
+ β)
r (Nk,l,r

Graphical model representation of Bi-

The conditional distribution is the same for the item topic
with the role of user and item reversed.

In order to compute the rating ru,m , we need to obtain
f riend
a number of model parameters, Θ = { πuf riend , zu,m
,
user
item
user
item
πu , πm , zu,m , zu,m , Φzu,m
Among
them,
user ,z item }.
u,m

item
item
P (zu,m
= l|Θ\zu,m
, x)
(
) (
)
¬(u,m)
Nk,l,x + β
¬(u,m)
item
∝
(nitem
)
+
α
∑
m,l
¬(u,m)
+β
r Nk,l,r

πuf riend ∈ R1×|U | with Dirchlet priors αf riend captures distribution of the receptiveness of user u to his/her friends,
πuuser ∈ R1×K with Dirchlet priors αuser depicts the distribution of user u’s preferences on the K users’ topics,
item
πm
∈ R1×L with Dirchlet priors αitem captures the distribution of an item m on the L items’ topics, Φ ∈ RK×L
with Dirchlet priors β is rating-scale mixing proportion of
f riend
user-item joint topic, zu,m
represents the receptive friend
whom user u has picked for the rating given by user u on
user
item m, zu,m
represents the topic user u has picked and
item
zu,m represents the topic item m has picked. The hyperparameters of the Dirichlet priors αf riend , αuser , αitem and
β can be simply set to 1 [13].
Let x be the observed rating for user u on item m. Putting
everything together, we obtain the joint probability distribution for the Bi-LDAsocial as follows:

(4)

¬(u,m)
denotes the number of times that an
where (nitem
m,l )
item m is assigned to item topic l in all the ratings except
for ru,m , and Nk,l,r represents the number of times that a
user with user topic k has rated an item with item topic l
with the rating r.
The parameter π f riend , π user , Φ and π item can be obtained as follows:

f riend
πu,f
= ∑

riend
nfu,f
+ αf riend
f ∈F (u)

riend
(nfu,f
+ αf riend )

Nk,l,x + β
(Nk,l,r + β)
user
nuser
u,k + α
= ∑
user
user )
k (nu,k + α

Φk,l,x = ∑

r

P r(x, z f riend , z user , z item , Φ, π user , π item )
= P r(x|z user , z item , Φ) P r(Φ|β) P r(z user |π user )×
P r(π user |αuser , z f riend ) P r(z f riend |π f riend )×
P r(π

f riend

|α ) P r(z
r

item

|π

item

) P r(π

item

|α

item

user
πu,k

(1)

item
πm,l
= ∑

)

Solving this equation is intractable, instead we adapt the
collapsed Gibbs sampler [2] to learn the model parameters.
In particular, we analytically marginalize out all the conju-

(5)

item
nitem
m,l + α
item
item )
l (nm,l + α

The algorithm of the collapsed Gibbs sampler for inferring these latent variables {z f riend , z user , z item } is shown in
Algorithm 1.

376

The intuition of λπf riend (t−1) can be interpreted as the
prior observed counts that user is receptive to his/her friends
before any friend from the current time points is observed.
Similarly, we introduce the parameterized prior for both user
and item topic distributions:

Algorithm 1: Gibbs sampling for Bi-LDAsocial
input : Users’ rating histories X, users’ trust relation
S, K and L
output: π user , Φ, π item and π f riend
1 /*Initialization of the latent variables and counters*/
f riend
2 Random initialize z
, z user and z item
f riend
3 Initialize n
, nuser , nitem and N as 0
4 foreach x = ru,m ∈ X do
f riend
user
item
5
f = zu,m
,k = zu,m
and l = zu,m
f riend
item
Increase the counter of nu,f , nuser
6
u,k , nm,l and
Nk,l,x
7 for index=1 to Iter do
8
/* for each rating x = ru,m in X */
9
foreach x = ru,m ∈ X do
/* Sample Friends */
10
f riend
f riend
f riend
11
f = zu,m
∼ P (zu,m
|Θ\zu,m
, x) according
to Equation (2)
12
/* Sample Users’ Topics */
user
user
user
13
∼ P (zu,m
|Θ\zu,m
, x) according to
k = zu,m
Equation (3)
14
/* Sample Items’ Topics */
item
item
item
15
|Θ\zu,m
, x) according to
∼ P (zu,m
l = zu,m
Equation (4)
f riend
user
item
16
f = zu,m
, k = zu,m
, l = zu,m
, x = ru,m
17
/* Update Counter */
riend
item
Update the counter nfu,f
, nuser
18
u,k , nm,l and
Nk,l,x
19
20

π user
π

(t)

item (t)

∼ Dirchlet(λπ user
∼ Dirchlet(λπ

(t−1)

),

item (t−1)

)

The graphical representation of the RTM model is shown
in Figure 3. With this change, the conditional distribution
of Equation (2) is now
f riend

P (f = zu,m

f riend

|Θ\zu,m

, x) ∝

(
user ¬(u,m,t)
user
× (nf,k,t )
+ λπ

(
f riend ¬(u,m,t)
f riend
(nu,f,t )
+ λπ
)(

(t−1)

¬(u,m,t)

∑

Nk,l,x

r

)

+β

¬(u,m,t)

(Nk,l,r

)
(t−1)

+ β)
(6)

riend ¬(u,m,t)
(nfu,f,t
)

where
denotes the number of times that
user u is receptive to f in all the ratings at time t excluding
(t)
¬(u,m,t)
ru,m . (nuser
denotes the number of times user f
f,k,t )
will be assigned to user topic k in all the ratings at time t
(t)
except for ru,m . Nk,l,r represents the number of times the
user with user topic k has rated item with item topic l with
¬(u,m,t)
the rating r, Nk,l,x
represents the number of times the
observed rating x has been given by user with user topic k
(t)
on item with item topic l excluding ru,m Similar change can
be applied to the Equation (3) and (4) by introducing an
additional temporal dimension for the counter, that is:

/* Get the mean estimate for π f riend , π user , Φ and
π item */
π f riend , π user , Φ and π item can be calculated according
to Eq. (5).

user

user

P (zu,m = k|Θ\zu,m , x)
∝

(
user
user ¬(u,m,t)
(nf,k,t )
+ λπu,k

) (
(t−1)

¬(u,m,t)

∑

Nk,l,x

+β

¬(u,m,t)
r (Nk,l,r

)

+ β)
(7)

3.2.2 Receptiveness over Time

item

π

f riend (t)

∼ P (π

f riend (t)

|π

f riend (t−1)

item

P (zu,m = l|Θ\zu,m , x)

The second part of RTM is to model the dynamic interaction of users’ interest along with the receptiveness among
friends over time. Given the users’ rating histories at T different time points, a naive approach is to ﬁt a Bi-LDAsocial
model at each time point and learn the receptiveness and
user interest distribution at the various time points, denoted as { π f riend (1) , · · · , π f riend (T ) } and { π user (1) , · · · ,
π user (T ) }, respectively. However, using this approach, the
latent topics learnt at time point t1 may be totally diﬀerent
from that at time point t2 . Furthermore, since we regard
each user in the diﬀerent time point as independent, we are
unable to make use of his/her ratings in the past. This
worsens the data sparsity problem.
To overcome the shortcomings, we assume that the overall interest distribution of the whole user population should
remain stable. This enable us to share the Φ across the
diﬀerent time points. In addition, we impose constraints
on π user and π f riend by assuming dependency between two
consecutive snapshots as follows:

(
∝

item ¬(u,m,t)

(nm,l,t )

) (
item (t−1)

+ λπu,k

Nk,l,x
+β )
∑
¬(u,m,t)
+β
r Nk,l,r
(8)
¬(u,m,t)

With this, based on the Eq. (5), the parameter π f riend ,
π user , Φ and π item can be constructed as:
f riend (t−1)

f riend (t)

πu,f

= ∑

riend
nfu,f,t
+ λπu,f
f ∈F (u)

user (t)

πu,k

item (t)

πm,l,t

=

user (t−1)
nuser
u,k,t + λπu,k
∑
user (t−1)
user
)
k (nu,k,t + λπu,k

=

item (t−1)
+ λπm,l
∑
item (t−1)
item
)
l (nm,l,t + λπm,l

Φk,l,x = ∑

)

f riend (t−1)

riend
(nfu,f,t
+ λπu,f

)

(9)

nitem
m,l,t

Nk,l,x + β
(Nk,l,r + β)

r

f riend (t−1)

In other words, we introduce a prior from π
to π f riend (t) so that at time t, we are drawing from the
Dirichlet prior parameterized by π f riend (t−1) where
π f riend(t) ∼ Dirchlet(λπ f riend

(t−1)

The process of generating time series ratings is summarized as follows:
1. Choose a K × L distribution over ratings Φ ∼ Dir(β)

)

377

Figure 3: Graphical model representation of RTM Model
2. For time t = 1, choose a distribution over friends F (u)
f riend (1)
for each user πu
∼ Dir(αf riend );
For time t > 1, choose a distribution over friends F (u)
f riend (t)
for each user πu
∼ Dir(λπ f riend (t−1) )
3. For time t =
topic for each
For time t >
topic for each

1, choose a distribution over K users’
user (1)
user πu
∼ Dir(αuser ).
1, choose a distribution over K users’
user (t)
user πu
∼ Dir(λπ user (t−1) ).

4. For time t =
topic for each
For time t >
topic for each

1, choose a distribution over L items’
item (1)
item πm
∼ Dir(αitem ).
1, choose a distribution over L items’
item (t)
item πm
∼ Dir(λπ item (t−1) ).

Algorithm 2: Gibbs sampling for RTM
input : Users’ rating histories over time
R={R(1) ,...R(T ) },
users’ trust relation over time
S={S (1) ,...,S (T ) },
K, L and λ
output: π user (t) , Φ, π item (t) and π f riend (t)
1 /*Initialization of the latent variables and counters*/
f riend
2 Random initialize z
, z user and z item
f riend
user
3 Initialize n
,n
and nitem and N as 0
(t)
4 foreach x = ru,m ∈ X do
item
f riend
user
5
f = zu,m
,k = zu,m
and l = zu,m
f riend
item
Increase the counter of nu,f,t , nuser
6
u,k,t , nm,l,t and
Nk,l,x

(t)

5. For each rating x = ru,m :
• Choose user friend
f riend
f riend
f = zu,m
∼ M ultinomial(πu
• Choose user topic
user
user
k = zu,m
∼ M ultinomial(πf

(t)

• Choose item topic
item
item
l = zu,m
∼ M ultinomial(πm

(t)

• Choose a rating

(t)
ru,m

(t)

)

7
8

)

9
10

)

11

∼ Φk,l

Based on the generative process, we can design Gibbs sampling to infer the latent variables as shown in Algorithm 2.
Note that that the cost of running a full Gibs iteration is
O(p) where p is the total number of rating observations.

12
13
14
15

3.3 Applications of RTM

16

In this section, we discuss how the RTM model can be
used for rating prediction, tracking receptiveness over time,
and analyzing users interest change.

17

• RTM-based Rating Prediction
Having obtained the RTM model, we predict the rating
made by user u on item m at time point t as follows:
∑ f riend (t) user (t) ⊤ item (t)
(t)
[πu
] Φπm
r̂u,m
=
πu,f

18

19

f ∈F (u)

378

(t)

/* for each rating x = ru,m in X */
for index=1 to Iter do
(t)
foreach x = ru,m ∈ X do
/* Sample Friends */
f riend
f riend
f riend
f = zu,m
∼ p(zu,m
|Θ\zu,m
, x) according
to Equation (6)
/* Sample Users’ Topics */
user
user
user
k = zu,m
∼ P (zu,m
|Θ\zu,m
, x) according to
Equation (7)
/* Sample Items’ Topics */
item
item
item
l = zu,m
∼ P (zu,m
|Θ\zu,m
, x) according to
Equation (8)
/* Update Counter */
riend
item
Update the counter nfu,f,t
, nuser
u,k,t , nm,l,t and
Nk,l,x
/* Get the mean estimate for π f riend (t) , π user (t) , Φ
and π item (t) */
π f riend (t) , π user (t) , Φ and π item (t) can be calculated
according to Eq. (9).

Table 2: Summary of methods.
Data used
Static rating
Rating over time

N o social trust
Bi-LDA, PMF
TimeSVD++

Static social trust
SocialMF
RTM-StaticSocial

• Receptiveness Change Analysis
For a given user u, the receptiveness of u to his/her
f riend (t)
friends (including user u) at time point t is πu
.
By constructing the receptiveness of other users to user
u in T time points, we can track the receptiveness of
other users on user u over time:
[
Cuf riend = πuf riend

1. Probabilistic Matrix Factorization (PMF) [15].
This is a matrix factorization based CF algorithm that
utilizes static user ratings on items. No social trust
information is used.
2. Bi-LDA [13] This is a generative model that also utilizes static ratings for prediction. Again no social trust
information is employed.

]
(1)

, ..., πuf riend

(t)

3. TimeSVD++[7] This is temporal CF algorithm that
assumes user interests change over time and is the
baseline of temporal CF methods. This method does
not incorporate social trust information.

where Cuf riend is an |U | × T matrix. Each column in
Cuf riend can be interpreted as the expected probability
where user u may be receptive to the other |U | users at
time point t. In other words, we can discover who are
the users that u is most receptive to at the particular
time point.

4. SocialMF [4]. This is a social CF algorithm that utilizes the social trust information and is the baseline
of social CF methods. This method does not consider
the shift in user interest.

• User Interest Change Analysis
For a given user u, we compute the user u’s preference
user (t) ⊤
over item topic at time point t as [πu
] Φ. By
constructing u’s preference over item topic for all T
time points, we can track u’ s interest change over
time:
[
Cu = [πuuser

(1) ⊤

] Φ, ..., [πuuser

Social trust over time
RTM-StaticInterest
RTM

(t) ⊤

Table 2 gives a summary of the various methods. All the
experiments are carried out on an Intel Core i7-2600 CPU
with 8GB RAM, running Windows 7-64 bit.

4.1

]

Experimental Dataset

We use the Epinions dataset1 in our experiments. This
dataset comprises of two ﬁles. The ﬁrst ﬁle contains 717, 667
user trust statements with time-stamps, while the second
ﬁle contains 13, 668, 319 users’ ratings provided by 120, 492
users on 755, 760 articles on a scale of 1 to 6, with 1 being not
helpful and 6 being most helpful. Each rating is associated
with a time-stamp over the period from February 2001 to
July 2002.
We sort the data according to the time-stamps and split
the data into 6 equal time slices. Each time slice corresponds to about 3 months. We use the ﬁrst 5 time slices of
data as the training data, and the last time slice for testing.
We also ﬁlter out users that have made less than 10 unique
ratings. After pre-processing, we obtain 5, 077, 392 users’
ratings with 9, 149 users and 116, 697 articles and 236, 878
social relations. Table 3 summarizes the statistics of the
rating dataset.

] Φ

where Cu is a L×T matrix. Each column in Cu can be
interpreted as the expected ratings provided by user u
on all the L item topic at time point t. By sorting
the columns, we can discover what kind of items are
preferred by a user at a certain time point.

4. EXPERIMENTAL RESULTS
In this section, we evaluate the eﬀectiveness of the proposed RTM model that utilizes both time-stamped rating
data and trust over time for recommendation. We also implement two variants of RTM:
• RTM-StaticSocial: this variant assumes that the social trust does not change over time while user interest
may shift over time as reﬂected by the time-stamped
rating data. This is achieved by using the same social
trust information for all the time points.

Table 3: Statistics of rating dataset.
Statistics
Min. # of ratings
Max. # of ratings
Mean. # of ratings

• RTM-StaticInterest: this variant assumes that the
user interest does not change over time and only the
social trust changes over time. This is achieved by using the same rating information for all the time points.
We compare the proposed models with the following stateof-the-art recommender methods for rating prediction:

1

379

Users

Movies

10
39,467
554.96 ± 1681.11

1
1134
43.50 ± 41.04

http : //www.trustlet.org/wiki/ExtendedE pinionsd ataset

0.38
0.36
0.34

0.66
0.64

0.32
0.3

0.62
0.6
0.58

0.28

0.56

0.26
0.24

PMF
Bi-LDA
TimeSvd++
SocialMF
RTM-StaticSocial
RTM-StaticInterest
RTM

0.68

RMSE

MAE

0.7

PMF
Bi-LDA
TimeSvd++
SocialMF
RTM-StaticSocial
RTM-StaticInterest
RTM

0.54
10

20

30
40
Latent Factor Number K

50

10

20

(a) MAE

30
40
Latent Factor Number K

50

(b) RMSE
Figure 4: Accuracy of Rating Prediction

Figure 5: User interest change over time

4.2 Rating Prediction Analysis

by as much as 7.71% (8.26%) compared to the SocialMF
model, and 8.14% (9.29%), compared to TimeSVD++.
Both SocialMF and RTM-StaticInterest outperform conventional CF models that do not incorporate trust information, namely, Bi-LDA and PMF. This indicates that social trust can help improve the rating prediction accuracy.
Both TimeSVD++ and RTM-StaticSocial model user interest over time and thus perform better than Bi-LDA and
PMF.

In this set of experiments, we compare the performance
of the various methods. We use the standard evaluation
metrics Mean Absolute Error (MAE) and Root Mean Square
Error (RMSE) deﬁned as follows:
∑
M AE =

ri ∈D

|ri − rˆi |

|D|

√∑
RM SE =

ri ∈D (ri

− rˆi )2

4.3

|D|

where D denotes the test dataset, ri is the actual rating
and rˆi is the predicted rating. A smaller value of MAE or
RMSE indicates a better performance.
Figure 4 shows the results when we vary the number of
user/item dimensions from 10 to 50. We observe that the
proposed RTM model has the lowest MAE and RMSE, demonstrating that capturing the dynamic interest between user
interest and social trust can improve the rating prediction
accuracy. In particular, RTM model lowers the RMSE (MAE)

380

User Interest Change Case Study

Here, we visualize the user interest proﬁle obtained from
the RTM model over time. Figure 5 shows the interest proﬁles of 2 users from the Epinions dataset. We observe that
the user 739’s interests remains stable over the time, as indicated by his/her high preference for user latent topic 1
throughout the 6 time points. User 365’s main interest is
in the latent topic 4 from time points 1 to 3, and changes
to latent topics 9 from time point 4 to 6, showing a shift in
his/her interest.
On closer examination, we ﬁnd that user 739 has rated a
lot of reviews in the topic with id 72 for all the time points.

Figure 6: User interest proﬁles and their trust relationships

On the other hand, user 365 mainly rated reviews on the
topic with id 549 from time points 1 to 3, and then change
to rate reviews on the topic with id 447 from time points 4
to 6. This conﬁrms that the interest proﬁles obtained from
the RTM model can capture user interest change.

0.5

User 109
User 562
User 34

Receptiveness for target user

0.45

4.4 User Receptiveness Case Study
Next, we analyze the user interest proﬁles and their social
trust relationships over time. Figure 6 shows the interest
proﬁles of 4 users and their social trust relationships at time
points T1 and T6. Suppose user 433 is our target user. We
note that at time point T1, user 433 does not know user
34 and their interest proﬁles are quite diﬀerent. However
at time point T6, user 34 has become user 344’s friend and
his/her interest proﬁle has shifted to become similar to that
of user 344. Looking at Figure 7 which shows the receptiveness of user 433 towards the other 3 users over time,
we observe that the receptiveness of user 433 to user 34 increases sharply at T6. This indicates that the RTM model
captures the dynamic interaction between user interests and
social relationships faithfully.

0.4
0.35
0.3
0.25
0.2
0.15
0.1
0.05
0

T1

T2

T3
T4
Time Point

T5

T6

Figure 7: Receptiveness change over time

Table 4: Eﬀect of K and L on RMSE

4.5 Sensitivity Experiments

HH L
K HH
H

In this section, we examine the eﬀect of various parameters
on the performance of the RTM model.

10
20
30
40
50

4.5.1 Effect of varying K and L
Table 4 shows the RMSE of RTM as we vary the number
of user topic K and the number of item topic L from 10 to
50. We observe that RMSE does not vary much. The best
performance is achieved by setting K = 40 and L = 50.

381

10

20

30

40

50

0.5572
0.5532
0.5718
0.5534
0.5521

0.5512
0.5473
0.5518
0.5417
0.5447

0.543
0.5447
0.5428
0.5412
0.5401

0.5419
0.5428
0.5434
0.5431
0.5414

0.5420
0.5443
0.5417
0.5367
0.5439

RTM (K=10,L=10)
RTM (K=30,L=30)
RTM (K=50,L=50)

0.64

[5]

0.62

RMSE

0.6

[6]
0.58

[7]

0.56
0.54
0.52
0.1

[8]
1

10
λ

100

1000

[9]
Figure 8: Eﬀect of λ on RMSE
[10]

4.5.2 Effect of varying λ
Recall that the parameter λ control how much the prior
information is transferred from the previous time slice to
the current time slice. When λ = 0, no prior information is
used.
Figure 8 shows the RMSE obtained for varying λ values.
We observe that the best performance is obtained when λ =
1, indicating that prior information helps to improve item
rating prediction.

[11]

[12]

5. CONCLUSIONS

[13]

In this paper, we have motivated the need to capture the
dynamic interaction between trust and user interest for recommendation. We have designed the RTM generative model
that incorporates user interest and social trust relationships
over time. We have also devised eﬃcient algorithms to learn
the latent variables in the RTM model using Gibbs sampling. Experimental results have shown that RTM-based
recommendation outperforms state-of-the-art CF methods.
In addition, the model provides easy interpretations to allow
easy visualization of users’ receptiveness and interest change
over time.

[14]

[15]

[16]

6. REFERENCES

[17]

[1] M. Balabanović and Y. Shoham. Fab: content-based,
collaborative recommendation. Communications of the
ACM, pages 66–72, March 1997.
[2] G. Casella and E. I. George. Explaining the Gibbs
sampler. The American Statistician, 46:167–174, 1992.
[3] M. Jamali and M. Ester. Trustwalker: a random walk
model for combining trust-based and item-based
recommendation. In Proceedings of the 15th ACM
SIGKDD international conference on Knowledge
discovery and data mining, KDD, pages 397–406, 2009.
[4] M. Jamali and M. Ester. A transitivity aware matrix
factorization model for recommendation in social
networks. In Proceedings of the 22nd international

[18]

[19]

382

joint conference on Artificial Intelligence, IJCAI,
pages 2644–2649, 2011.
N. Koenigstein, G. Dror, and Y. Koren. Yahoo! music
recommendations: modeling music ratings with
temporal dynamics and item taxonomy. In Proceedings
of the fifth ACM conference on Recommender systems,
RecSys, pages 165–172, 2011.
I. Konstas, V. Stathopoulos, and J. M. Jose. On social
networks and collaborative recommendation. SIGIR,
pages 195–202, 2009.
Y. Koren. Collaborative ﬁltering with temporal
dynamics. In Proceedings of the 15th ACM SIGKDD
international conference on Knowledge discovery and
data mining, KDD, pages 447–456, 2009.
T.-K. H. J. S. J. G. C. Liang Xiong, Xi Chen.
Temporal collaborative ﬁltering with bayesian
probabilistic tensor factorization. In Proceedings of
SIAM Data Mining, 2010.
H. Ma, I. King, and M. R. Lyu. Learning to
recommend with social trust ensemble. SIGIR, pages
203–210, 2009.
H. Ma, M. R. Lyu, and I. King. Learning to
recommend with trust and distrust relationships. In
Proceedings of the third ACM conference on
Recommender systems, RecSys, pages 189–196, 2009.
H. Ma, D. Zhou, C. Liu, M. R. Lyu, and I. King.
Recommender systems with social regularization. In
Proceedings of the fourth ACM international
conference on Web search and data mining, WSDM,
pages 287–296, 2011.
R. J. Mooney and L. Roy. Content-based book
recommending using learning for text categorization.
In Proceedings Of 5th ACM Conference On Digtal
Libraries, pages 195–204, 1999.
I. Porteous, E. Bart, and M. Welling. Multi-hdp: A
non parametric bayesian model for tensor
factorization. In Proceedings of the 23rd national
conference on Artificial intelligence, AAAI, pages
1487–1490, 2008.
S. Rendle, C. Freudenthaler, and L. Schmidt-Thieme.
Factorizing personalized markov chains for next-basket
recommendation. WWW, pages 811–820, 2010.
R. Salakhutdinov and A. Mnih. Probabilistic matrix
factorization. Advances in Neural Information
Processing Systems, pages 1257–1264, 2008.
B. Sarwar, G. Karypis, J. Konstan, and J. Riedl.
Item-based collaborative ﬁltering recommendation
algorithms. WWW, pages 285–295, 2001.
Y. Shen and R. Jin. Learning personal + social latent
factor model for social recommendation. In
Proceedings of the 18th ACM SIGKDD international
conference on Knowledge discovery and data mining,
KDD, pages 1303–1311, 2012.
L. Xiang, Q. Yuan, S. Zhao, L. Chen, X. Zhang,
Q. Yang, and J. Sun. Temporal recommendation on
graphs via long- and short-term preference fusion. In
Proceedings of the 16th ACM SIGKDD international
conference on Knowledge discovery and data mining,
KDD, pages 723–732, 2010.
M. Ye, X. Liu, and W.-C. Lee. Exploring social
inﬂuence for recommendation: a generative model
approach. SIGIR, pages 671–680, 2012.

